

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Aug 16 21:16:42 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataCOMRAM
    44  001D84                     __pidataCOMRAM:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _anio
    48  001D84  000F               	dw	15
    49                           
    50                           ;initializer for _dia
    51  001D86  0008               	dw	8
    52                           
    53                           ;initializer for _diasem
    54  001D88  0003               	dw	3
    55                           
    56                           ;initializer for _hora
    57  001D8A  0012               	dw	18
    58                           
    59                           ;initializer for _mes
    60  001D8C  0009               	dw	9
    61                           
    62                           ;initializer for _minuto
    63  001D8E  001E               	dw	30
    64                           
    65                           	psect	smallconst
    66  000F00                     __psmallconst:
    67                           	opt stack 0
    68  000F00  00                 	db	0
    69  000F01                     _dpowers:
    70                           	opt stack 0
    71  000F01  0001               	dw	1
    72  000F03  000A               	dw	10
    73  000F05  0064               	dw	100
    74  000F07  03E8               	dw	1000
    75  000F09  2710               	dw	10000
    76  000F0B                     __end_of_dpowers:
    77                           	opt stack 0
    78  000F0B                     _LCD_INIT_STRING:
    79                           	opt stack 0
    80  000F0B  28                 	db	40
    81  000F0C  0C                 	db	12
    82  000F0D  01                 	db	1
    83  000F0E  06                 	db	6
    84  000F0F                     __end_of_LCD_INIT_STRING:
    85                           	opt stack 0
    86  000F0F                     STR_2:
    87                           
    88                           ; BSR set to: 15
    89  000F0F  25                 	db	37
    90  000F10  30                 	db	48	;'0'
    91  000F11  32                 	db	50	;'2'
    92  000F12  75                 	db	117	;'u'
    93  000F13  2F                 	db	47
    94  000F14  25                 	db	37
    95  000F15  30                 	db	48	;'0'
    96  000F16  32                 	db	50	;'2'
    97  000F17  75                 	db	117	;'u'
    98  000F18  2F                 	db	47
    99  000F19  25                 	db	37
   100  000F1A  30                 	db	48	;'0'
   101  000F1B  32                 	db	50	;'2'
   102  000F1C  75                 	db	117	;'u'
   103  000F1D  00                 	db	0
   104  000F1E                     STR_3:
   105                           
   106                           ; BSR set to: 15
   107  000F1E  25                 	db	37
   108  000F1F  30                 	db	48	;'0'
   109  000F20  32                 	db	50	;'2'
   110  000F21  75                 	db	117	;'u'
   111  000F22  3A                 	db	58	;':'
   112  000F23  25                 	db	37
   113  000F24  30                 	db	48	;'0'
   114  000F25  32                 	db	50	;'2'
   115  000F26  75                 	db	117	;'u'
   116  000F27  3A                 	db	58	;':'
   117  000F28  25                 	db	37
   118  000F29  30                 	db	48	;'0'
   119  000F2A  32                 	db	50	;'2'
   120  000F2B  75                 	db	117	;'u'
   121  000F2C  00                 	db	0
   122  000F2D                     STR_5:
   123                           
   124                           ; BSR set to: 15
   125  000F2D  20                 	db	32
   126  000F2E  20                 	db	32
   127  000F2F  20                 	db	32
   128  000F30  20                 	db	32
   129  000F31  20                 	db	32
   130  000F32  20                 	db	32
   131  000F33  00                 	db	0
   132  000F34                     STR_1:
   133                           
   134                           ; BSR set to: 15
   135  000F34  55                 	db	85	;'U'
   136  000F35  4E                 	db	78	;'N'
   137  000F36  49                 	db	73	;'I'
   138  000F37  4D                 	db	77	;'M'
   139  000F38  49                 	db	73	;'I'
   140  000F39  43                 	db	67	;'C'
   141  000F3A  00                 	db	0
   142  0000                     
   143                           ; #config settings
   144  000F3B  00                 	db	0	; dummy byte at the end
   145  0000                     
   146                           	psect	nvCOMRAM
   147  000041                     __pnvCOMRAM:
   148                           	opt stack 0
   149  000041                     _anio_d:
   150                           	opt stack 0
   151  000041                     	ds	1
   152  000042                     _anio_u:
   153                           	opt stack 0
   154  000042                     	ds	1
   155  000043                     _dia_semana:
   156                           	opt stack 0
   157  000043                     	ds	1
   158  000044                     _fecha_d:
   159                           	opt stack 0
   160  000044                     	ds	1
   161  000045                     _fecha_u:
   162                           	opt stack 0
   163  000045                     	ds	1
   164  000046                     _hora_d:
   165                           	opt stack 0
   166  000046                     	ds	1
   167  000047                     _hora_u:
   168                           	opt stack 0
   169  000047                     	ds	1
   170  000048                     _mes_d:
   171                           	opt stack 0
   172  000048                     	ds	1
   173  000049                     _mes_u:
   174                           	opt stack 0
   175  000049                     	ds	1
   176  00004A                     _minuto_d:
   177                           	opt stack 0
   178  00004A                     	ds	1
   179  00004B                     _minuto_u:
   180                           	opt stack 0
   181  00004B                     	ds	1
   182  00004C                     _segundo_d:
   183                           	opt stack 0
   184  00004C                     	ds	1
   185  00004D                     _segundo_u:
   186                           	opt stack 0
   187  00004D                     	ds	1
   188  0000                     _ANCON0	set	3912
   189  0000                     _RTCCFG	set	3903
   190  0000                     _RTCCFGbits	set	3903
   191  0000                     _ADCON0	set	4034
   192  0000                     _ADCON1	set	4033
   193  0000                     _ALRMCFGbits	set	3985
   194  0000                     _EECON2	set	4007
   195  0000                     _INTCONbits	set	4082
   196  0000                     _LATBbits	set	3978
   197  0000                     _OSCCONbits	set	4051
   198  0000                     _OSCTUNEbits	set	3995
   199  0000                     _PIE3bits	set	4003
   200  0000                     _PORTAbits	set	3968
   201  0000                     _RTCVALH	set	3993
   202  0000                     _RTCVALL	set	3992
   203  0000                     _T1CONbits	set	4045
   204  0000                     _TRISA	set	3986
   205  0000                     _TRISB	set	3987
   206  0000                     _TRISBbits	set	3987
   207  0000                     _TRISC	set	3988
   208                           
   209                           	psect	cinit
   210  001C48                     __pcinit:
   211                           	opt stack 0
   212  001C48                     start_initialization:
   213                           	opt stack 0
   214  001C48                     __initialization:
   215                           	opt stack 0
   216                           
   217                           ; Clear objects allocated to BANK0 (44 bytes)
   218  001C48  EE00  F060         	lfsr	0,__pbssBANK0
   219  001C4C  0E2C               	movlw	44
   220  001C4E                     clear_0:
   221  001C4E  6AEE               	clrf	postinc0,c
   222  001C50  06E8               	decf	wreg,f,c
   223  001C52  E1FD               	bnz	clear_0
   224                           
   225                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   226  001C54  6A5A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   227                           
   228                           ; Clear objects allocated to COMRAM (26 bytes)
   229  001C56  EE00  F027         	lfsr	0,__pbssCOMRAM
   230  001C5A  0E1A               	movlw	26
   231  001C5C                     clear_1:
   232  001C5C  6AEE               	clrf	postinc0,c
   233  001C5E  06E8               	decf	wreg,f,c
   234  001C60  E1FD               	bnz	clear_1
   235                           
   236                           ; Initialize objects allocated to COMRAM (12 bytes)
   237                           ; load TBLPTR registers with __pidataCOMRAM
   238  001C62  0E84               	movlw	low __pidataCOMRAM
   239  001C64  6EF6               	movwf	tblptrl,c
   240  001C66  0E1D               	movlw	high __pidataCOMRAM
   241  001C68  6EF7               	movwf	tblptrh,c
   242  001C6A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   243  001C6C  6EF8               	movwf	tblptru,c
   244  001C6E  EE00  F04E         	lfsr	0,__pdataCOMRAM
   245  001C72  EE10 F00C          	lfsr	1,12
   246  001C76                     copy_data0:
   247  001C76  0009               	tblrd		*+
   248  001C78  CFF5 FFEE          	movff	tablat,postinc0
   249  001C7C  50E5               	movf	postdec1,w,c
   250  001C7E  50E1               	movf	fsr1l,w,c
   251  001C80  E1FA               	bnz	copy_data0
   252  001C82                     end_of_initialization:
   253                           	opt stack 0
   254  001C82                     __end_of__initialization:
   255                           	opt stack 0
   256  001C82  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  001C84  6EF8               	movwf	tblptru,c
   258  001C86  0100               	movlb	0
   259  001C88  EF17  F00A         	goto	_main	;jump to C main() function
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	bitbssCOMRAM
   270  0002D0                     __pbitbssCOMRAM:
   271                           	opt stack 0
   272  0002D0                     _flag:
   273                           	opt stack 0
   274  0002D0                     	ds	1
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           postdec1	equ	0xFE5
   282                           fsr1l	equ	0xFE1
   283                           
   284                           	psect	bssCOMRAM
   285  000027                     __pbssCOMRAM:
   286                           	opt stack 0
   287  000027                     _RtccTimeVal:
   288                           	opt stack 0
   289  000027                     	ds	4
   290  00002B                     _a:
   291                           	opt stack 0
   292  00002B                     	ds	2
   293  00002D                     _b:
   294                           	opt stack 0
   295  00002D                     	ds	2
   296  00002F                     _c:
   297                           	opt stack 0
   298  00002F                     	ds	2
   299  000031                     _i:
   300                           	opt stack 0
   301  000031                     	ds	2
   302  000033                     _j:
   303                           	opt stack 0
   304  000033                     	ds	2
   305  000035                     _k:
   306                           	opt stack 0
   307  000035                     	ds	2
   308  000037                     _segundo:
   309                           	opt stack 0
   310  000037                     	ds	2
   311  000039                     _RtccDate:
   312                           	opt stack 0
   313  000039                     	ds	4
   314  00003D                     _RtccTime:
   315                           	opt stack 0
   316  00003D                     	ds	4
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	dataCOMRAM
   327  00004E                     __pdataCOMRAM:
   328                           	opt stack 0
   329  00004E                     _anio:
   330                           	opt stack 0
   331  00004E                     	ds	2
   332  000050                     _dia:
   333                           	opt stack 0
   334  000050                     	ds	2
   335  000052                     _diasem:
   336                           	opt stack 0
   337  000052                     	ds	2
   338  000054                     _hora:
   339                           	opt stack 0
   340  000054                     	ds	2
   341  000056                     _mes:
   342                           	opt stack 0
   343  000056                     	ds	2
   344  000058                     _minuto:
   345                           	opt stack 0
   346  000058                     	ds	2
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	bssBANK0
   357  000060                     __pbssBANK0:
   358                           	opt stack 0
   359  000060                     _RtccAlrmTimeDate:
   360                           	opt stack 0
   361  000060                     	ds	8
   362  000068                     _RtccTimeDate:
   363                           	opt stack 0
   364  000068                     	ds	8
   365  000070                     _Rtcc_read_TimeDate:
   366                           	opt stack 0
   367  000070                     	ds	8
   368  000078                     _buffer2:
   369                           	opt stack 0
   370  000078                     	ds	20
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           postdec1	equ	0xFE5
   378                           fsr1l	equ	0xFE1
   379                           
   380                           	psect	cstackCOMRAM
   381  000001                     __pcstackCOMRAM:
   382                           	opt stack 0
   383  000001                     ??_isdigit:
   384  000001                     ??_lcd_send_nibble:
   385  000001                     ?___wmul:
   386                           	opt stack 0
   387  000001                     ?___awdiv:
   388                           	opt stack 0
   389  000001                     ?___lwdiv:
   390                           	opt stack 0
   391  000001                     Delay100TCYx@unit:
   392                           	opt stack 0
   393  000001                     Delay1KTCYx@unit:
   394                           	opt stack 0
   395  000001                     RtccReadDate@pDt:
   396                           	opt stack 0
   397  000001                     RtccReadTime@pTm:
   398                           	opt stack 0
   399  000001                     RtccWriteDate@pDt:
   400                           	opt stack 0
   401  000001                     RtccWriteTime@pTm:
   402                           	opt stack 0
   403  000001                     ___wmul@multiplier:
   404                           	opt stack 0
   405  000001                     ___awdiv@dividend:
   406                           	opt stack 0
   407  000001                     ___lwdiv@dividend:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x0
   411  000001                     	ds	1
   412  000002                     lcd_send_nibble@nibble:
   413                           	opt stack 0
   414  000002                     _isdigit$1822:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x1
   418  000002                     	ds	1
   419  000003                     lcd_send_byte@n:
   420                           	opt stack 0
   421  000003                     RtccWriteDate@di:
   422                           	opt stack 0
   423  000003                     RtccWriteTime@di:
   424                           	opt stack 0
   425  000003                     isdigit@c:
   426                           	opt stack 0
   427  000003                     ___wmul@multiplicand:
   428                           	opt stack 0
   429  000003                     ___awdiv@divisor:
   430                           	opt stack 0
   431  000003                     ___lwdiv@divisor:
   432                           	opt stack 0
   433  000003                     RtccReadDate@rTD1:
   434                           	opt stack 0
   435  000003                     RtccReadTime@rTD1:
   436                           	opt stack 0
   437                           
   438                           ; 8 bytes @ 0x2
   439  000003                     	ds	1
   440  000004                     lcd_send_byte@address:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x3
   444  000004                     	ds	1
   445  000005                     lcd_init@i:
   446                           	opt stack 0
   447  000005                     lcd_gotoxy@y:
   448                           	opt stack 0
   449  000005                     lcd_comand@d:
   450                           	opt stack 0
   451  000005                     lcd_setcursor_vb@blink:
   452                           	opt stack 0
   453  000005                     RtccWriteDate@wasOn:
   454                           	opt stack 0
   455  000005                     RtccWriteTime@wasOn:
   456                           	opt stack 0
   457  000005                     ___awdiv@counter:
   458                           	opt stack 0
   459  000005                     ___wmul@product:
   460                           	opt stack 0
   461  000005                     ___lwdiv@quotient:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x4
   465  000005                     	ds	1
   466  000006                     lcd_gotoxy@x:
   467                           	opt stack 0
   468  000006                     lcd_setcursor_vb@visible:
   469                           	opt stack 0
   470  000006                     RtccWriteDate@wasAlrm:
   471                           	opt stack 0
   472  000006                     RtccWriteTime@wasAlrm:
   473                           	opt stack 0
   474  000006                     ___awdiv@sign:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x5
   478  000006                     	ds	1
   479  000007                     lcd_gotoxy@address:
   480                           	opt stack 0
   481  000007                     RtccWriteTime@wasWrEn:
   482                           	opt stack 0
   483  000007                     ___lwdiv@counter:
   484                           	opt stack 0
   485  000007                     RtccWriteDate@tempYear:
   486                           	opt stack 0
   487  000007                     ___awdiv@quotient:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x6
   491  000007                     	ds	1
   492  000008                     ?___lwmod:
   493                           	opt stack 0
   494  000008                     lcd_putc@c:
   495                           	opt stack 0
   496  000008                     RtccWriteTime@tempMinSec:
   497                           	opt stack 0
   498  000008                     ___lwmod@dividend:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x7
   502  000008                     	ds	1
   503  000009                     RtccWriteDate@wasWrEn:
   504                           	opt stack 0
   505  000009                     lcd_putrs@ptr:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x8
   509  000009                     	ds	1
   510  00000A                     RtccWriteDate@tempDayMonth:
   511                           	opt stack 0
   512  00000A                     RtccWriteTime@tempHourWDay:
   513                           	opt stack 0
   514  00000A                     ___lwmod@divisor:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x9
   518  00000A                     	ds	1
   519  00000B                     RtccReadDate@rTD0:
   520                           	opt stack 0
   521  00000B                     RtccReadTime@rTD0:
   522                           	opt stack 0
   523                           
   524                           ; 8 bytes @ 0xA
   525  00000B                     	ds	1
   526  00000C                     ___lwmod@counter:
   527                           	opt stack 0
   528  00000C                     RtccWriteDate@tempHourWDay:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0xB
   532  00000C                     	ds	1
   533  00000D                     ?_sprintf:
   534                           	opt stack 0
   535  00000D                     sprintf@sp:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0xC
   539  00000D                     	ds	1
   540  00000E                     
   541                           ; 0 bytes @ 0xD
   542  00000E                     	ds	1
   543  00000F                     sprintf@f:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0xE
   547  00000F                     	ds	4
   548  000013                     
   549                           ; 0 bytes @ 0x12
   550  000013                     	ds	4
   551  000017                     ??_sprintf:
   552                           
   553                           ; 0 bytes @ 0x16
   554  000017                     	ds	4
   555  00001B                     sprintf@ap:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x1A
   559  00001B                     	ds	2
   560  00001D                     sprintf@flag:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x1C
   564  00001D                     	ds	1
   565  00001E                     sprintf@val:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x1D
   569  00001E                     	ds	2
   570  000020                     sprintf@prec:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x1F
   574  000020                     	ds	1
   575  000021                     sprintf@width:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x20
   579  000021                     	ds	2
   580  000023                     sprintf@c:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x22
   584  000023                     	ds	1
   585  000024                     ??_main:
   586                           
   587                           ; 0 bytes @ 0x23
   588  000024                     	ds	1
   589  000025                     main@y:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x24
   593  000025                     	ds	1
   594  000026                     main@x:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x25
   598  000026                     	ds	1
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           postdec1	equ	0xFE5
   606                           fsr1l	equ	0xFE1
   607                           
   608 ;;
   609 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   610 ;;
   611 ;; *************** function _main *****************
   612 ;; Defined at:
   613 ;;		line 101 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  x               1   37[COMRAM] unsigned char 
   618 ;;  y               1   36[COMRAM] unsigned char 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  2  145[None  ] int 
   621 ;; Registers used:
   622 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   631 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   632 ;;Total ram usage:        3 bytes
   633 ;; Hardware stack levels required when called:    6
   634 ;; This function calls:
   635 ;;		_Read_RTC
   636 ;;		_Setup
   637 ;;		_Write_RTC
   638 ;;		_caratula
   639 ;;		_lcd_gotoxy
   640 ;;		_lcd_setcursor_vb
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text0
   647  00142E                     __ptext0:
   648                           	opt stack 0
   649  00142E                     _main:
   650                           	opt stack 25
   651                           
   652                           ;main.c: 103: Setup();
   653                           
   654                           ; BSR set to: 15
   655                           ;incstack = 0
   656  00142E  EC00  F00E         	call	_Setup	;wreg free
   657                           
   658                           ;main.c: 104: int8 x = 9;
   659  001432  0E09               	movlw	9
   660  001434  6E26               	movwf	main@x,c
   661                           
   662                           ;main.c: 105: int8 y = 1;
   663  001436  0E01               	movlw	1
   664  001438  6E25               	movwf	main@y,c
   665  00143A  D000               	goto	l2344
   666  00143C                     l2344:
   667                           
   668                           ;main.c: 108: {
   669                           ;main.c: 109: Read_RTC();
   670  00143C  ECAC  F00B         	call	_Read_RTC	;wreg free
   671                           
   672                           ;main.c: 110: caratula();
   673  001440  EC27  F00B         	call	_caratula	;wreg free
   674                           
   675                           ;main.c: 111: lcd_setcursor_vb(1,1);
   676  001444  0E01               	movlw	1
   677  001446  6E05               	movwf	lcd_setcursor_vb@blink,c
   678  001448  0E01               	movlw	1
   679  00144A  EC96  F00E         	call	_lcd_setcursor_vb
   680                           
   681                           ;main.c: 112: lcd_gotoxy(x,y);
   682  00144E  C025  F005         	movff	main@y,lcd_gotoxy@y
   683  001452  5026               	movf	main@x,w,c
   684  001454  EC73  F00E         	call	_lcd_gotoxy
   685                           
   686                           ;main.c: 113: if(PORTAbits.RA1 == 0)
   687  001458  B280               	btfsc	3968,1,c	;volatile
   688  00145A  D046               	goto	l147
   689                           
   690                           ;main.c: 114: {
   691                           ;main.c: 115: x++;
   692  00145C  2A26               	incf	main@x,f,c
   693                           
   694                           ;main.c: 116: lcd_gotoxy(x,y);
   695  00145E  C025  F005         	movff	main@y,lcd_gotoxy@y
   696  001462  5026               	movf	main@x,w,c
   697  001464  EC73  F00E         	call	_lcd_gotoxy
   698                           
   699                           ;main.c: 117: _delay((unsigned long)((50)*(8000000/4000.0)));
   700  001468  0E82               	movlw	130
   701  00146A  6E24               	movwf	??_main& (0+255),c
   702  00146C  0EDE               	movlw	222
   703  00146E                     u1817:
   704  00146E  2EE8               	decfsz	wreg,f,c
   705  001470  D7FE               	goto	u1817
   706  001472  2E24               	decfsz	??_main& (0+255),f,c
   707  001474  D7FC               	goto	u1817
   708                           
   709                           ;main.c: 119: if( (x==11 && y ==1)
   710                           ;main.c: 120: || (x==14 && y ==1)
   711                           ;main.c: 121: || (x==3 && y==2)
   712                           ;main.c: 122: || (x==6 && y==2) ){
   713  001476  0E0B               	movlw	11
   714  001478  1826               	xorwf	main@x,w,c
   715  00147A  A4D8               	btfss	status,2,c
   716  00147C  D003               	goto	l2364
   717  00147E  0425               	decf	main@y,w,c
   718  001480  B4D8               	btfsc	status,2,c
   719  001482  D017               	goto	l2376
   720  001484                     l2364:
   721  001484  0E0E               	movlw	14
   722  001486  1826               	xorwf	main@x,w,c
   723  001488  A4D8               	btfss	status,2,c
   724  00148A  D003               	goto	l2368
   725  00148C  0425               	decf	main@y,w,c
   726  00148E  B4D8               	btfsc	status,2,c
   727  001490  D010               	goto	l2376
   728  001492                     l2368:
   729  001492  0E03               	movlw	3
   730  001494  1826               	xorwf	main@x,w,c
   731  001496  A4D8               	btfss	status,2,c
   732  001498  D004               	goto	l2372
   733  00149A  0E02               	movlw	2
   734  00149C  1825               	xorwf	main@y,w,c
   735  00149E  B4D8               	btfsc	status,2,c
   736  0014A0  D008               	goto	l2376
   737  0014A2                     l2372:
   738  0014A2  0E06               	movlw	6
   739  0014A4  1826               	xorwf	main@x,w,c
   740  0014A6  A4D8               	btfss	status,2,c
   741  0014A8  D00B               	goto	l2380
   742  0014AA  0E02               	movlw	2
   743  0014AC  1825               	xorwf	main@y,w,c
   744  0014AE  A4D8               	btfss	status,2,c
   745  0014B0  D007               	goto	l2380
   746  0014B2                     l2376:
   747                           
   748                           ;main.c: 123: lcd_setcursor_vb(0,0);
   749  0014B2  0E00               	movlw	0
   750  0014B4  6E05               	movwf	lcd_setcursor_vb@blink,c
   751  0014B6  0E00               	movlw	0
   752  0014B8  EC96  F00E         	call	_lcd_setcursor_vb
   753                           
   754                           ;main.c: 124: x++;
   755  0014BC  2A26               	incf	main@x,f,c
   756  0014BE  D000               	goto	l2380
   757  0014C0                     l2380:
   758                           
   759                           ;main.c: 125: }
   760                           ;main.c: 127: if (x == 17){
   761  0014C0  0E11               	movlw	17
   762  0014C2  1826               	xorwf	main@x,w,c
   763  0014C4  A4D8               	btfss	status,2,c
   764  0014C6  D005               	goto	l2384
   765                           
   766                           ;main.c: 128: x = 1;
   767  0014C8  0E01               	movlw	1
   768  0014CA  6E26               	movwf	main@x,c
   769                           
   770                           ;main.c: 129: y = 2;
   771  0014CC  0E02               	movlw	2
   772  0014CE  6E25               	movwf	main@y,c
   773  0014D0  D000               	goto	l2384
   774  0014D2                     l2384:
   775                           
   776                           ;main.c: 130: }
   777                           ;main.c: 132: if(y == 2 && x == 9){
   778  0014D2  0E02               	movlw	2
   779  0014D4  1825               	xorwf	main@y,w,c
   780  0014D6  A4D8               	btfss	status,2,c
   781  0014D8  D008               	goto	l159
   782  0014DA  0E09               	movlw	9
   783  0014DC  1826               	xorwf	main@x,w,c
   784  0014DE  A4D8               	btfss	status,2,c
   785  0014E0  D004               	goto	l159
   786                           
   787                           ;main.c: 133: y = 1;
   788  0014E2  0E01               	movlw	1
   789  0014E4  6E25               	movwf	main@y,c
   790                           
   791                           ;main.c: 134: }
   792                           ;main.c: 135: }
   793  0014E6  D001               	goto	l159
   794  0014E8                     l147:
   795                           
   796                           ;main.c: 136: else LATBbits.LATB1 = 0;;
   797  0014E8  928A               	bcf	3978,1,c	;volatile
   798  0014EA                     l159:
   799                           
   800                           ;main.c: 138: if(PORTAbits.RA0 == 0)
   801  0014EA  B080               	btfsc	3968,0,c	;volatile
   802  0014EC  D01D               	goto	l160
   803                           
   804                           ;main.c: 139: {
   805                           ;main.c: 140: if (x==10){
   806  0014EE  0E0A               	movlw	10
   807  0014F0  1826               	xorwf	main@x,w,c
   808  0014F2  A4D8               	btfss	status,2,c
   809  0014F4  D01B               	goto	l2402
   810                           
   811                           ;main.c: 141: dia++;
   812  0014F6  4A50               	infsnz	_dia,f,c
   813  0014F8  2A51               	incf	_dia+1,f,c
   814                           
   815                           ;main.c: 142: if(dia > 31){
   816  0014FA  BE51               	btfsc	_dia+1,7,c
   817  0014FC  D00B               	goto	l2398
   818  0014FE  5051               	movf	_dia+1,w,c
   819  001500  E104               	bnz	u1790
   820  001502  0E20               	movlw	32
   821  001504  5C50               	subwf	_dia,w,c
   822  001506  A0D8               	btfss	status,0,c
   823  001508  D005               	goto	l2398
   824  00150A                     u1790:
   825                           
   826                           ;main.c: 143: dia = 1;
   827  00150A  0E00               	movlw	0
   828  00150C  6E51               	movwf	_dia+1,c
   829  00150E  0E01               	movlw	1
   830  001510  6E50               	movwf	_dia,c
   831  001512  D000               	goto	l2398
   832  001514                     l2398:
   833                           
   834                           ;main.c: 144: }
   835                           ;main.c: 145: Write_RTC();
   836  001514  ECD0  F008         	call	_Write_RTC	;wreg free
   837                           
   838                           ;main.c: 146: _delay((unsigned long)((50)*(8000000/4000.0)));
   839  001518  0E82               	movlw	130
   840  00151A  6E24               	movwf	??_main& (0+255),c
   841  00151C  0EDE               	movlw	222
   842  00151E                     u1827:
   843  00151E  2EE8               	decfsz	wreg,f,c
   844  001520  D7FE               	goto	u1827
   845  001522  2E24               	decfsz	??_main& (0+255),f,c
   846  001524  D7FC               	goto	u1827
   847                           
   848                           ;main.c: 147: }
   849                           ;main.c: 152: }
   850  001526  D002               	goto	l2402
   851  001528                     l160:
   852                           
   853                           ;main.c: 153: else LATBbits.LATB0 = 0;;
   854  001528  908A               	bcf	3978,0,c	;volatile
   855  00152A  D000               	goto	l2402
   856  00152C                     l2402:
   857                           
   858                           ;main.c: 155: _delay((unsigned long)((98)*(8000000/4000.0)));
   859  00152C  0EFF               	movlw	255
   860  00152E  6E24               	movwf	??_main& (0+255),c
   861  001530  0E8A               	movlw	138
   862  001532                     u1837:
   863  001532  2EE8               	decfsz	wreg,f,c
   864  001534  D7FE               	goto	u1837
   865  001536  2E24               	decfsz	??_main& (0+255),f,c
   866  001538  D7FC               	goto	u1837
   867  00153A  D000               	nop2	
   868  00153C  D77F               	goto	l2344
   869                           
   870                           ;main.c: 157: }
   871                           ;main.c: 158: return 0;
   872                           ;	Return value of _main is never used
   873  00153E  EF00  F000         	goto	start
   874  001542                     __end_of_main:
   875                           	opt stack 0
   876                           tblptru	equ	0xFF8
   877                           tblptrh	equ	0xFF7
   878                           tblptrl	equ	0xFF6
   879                           tablat	equ	0xFF5
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           postdec1	equ	0xFE5
   883                           fsr1l	equ	0xFE1
   884                           status	equ	0xFD8
   885                           
   886 ;; *************** function _lcd_setcursor_vb *****************
   887 ;; Defined at:
   888 ;;		line 210 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  visible         1    wreg     unsigned char 
   891 ;;  blink           1    4[COMRAM] unsigned char 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  visible         1    5[COMRAM] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;		None               void
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   903 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   907 ;;Total ram usage:        2 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    2
   910 ;; This function calls:
   911 ;;		_lcd_send_byte
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text1
   918  001D2C                     __ptext1:
   919                           	opt stack 0
   920  001D2C                     _lcd_setcursor_vb:
   921                           	opt stack 28
   922                           
   923                           ;incstack = 0
   924                           ;lcd_setcursor_vb@visible stored from wreg
   925  001D2C  6E06               	movwf	lcd_setcursor_vb@visible,c
   926                           
   927                           ;unmc_lcd_216.c: 211: lcd_send_byte(0, 0xC|(visible<<1)|blink);
   928  001D2E  5006               	movf	lcd_setcursor_vb@visible,w,c
   929  001D30  2406               	addwf	lcd_setcursor_vb@visible,w,c
   930  001D32  1005               	iorwf	lcd_setcursor_vb@blink,w,c
   931  001D34  090C               	iorlw	12
   932  001D36  6E03               	movwf	lcd_send_byte@n,c
   933  001D38  0E00               	movlw	0
   934  001D3A  EC46  F00E         	call	_lcd_send_byte
   935  001D3E  0012               	return		;funcret
   936  001D40                     __end_of_lcd_setcursor_vb:
   937                           	opt stack 0
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           tblptrl	equ	0xFF6
   941                           tablat	equ	0xFF5
   942                           postinc0	equ	0xFEE
   943                           wreg	equ	0xFE8
   944                           postdec1	equ	0xFE5
   945                           fsr1l	equ	0xFE1
   946                           status	equ	0xFD8
   947                           
   948 ;; *************** function _caratula *****************
   949 ;; Defined at:
   950 ;;		line 36 in file "main.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;		None               void
   957 ;; Registers used:
   958 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;Total ram usage:        0 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    5
   971 ;; This function calls:
   972 ;;		_lcd_comand
   973 ;;		_lcd_gotoxy
   974 ;;		_lcd_putrs
   975 ;;		_sprintf
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text2
   982  00164E                     __ptext2:
   983                           	opt stack 0
   984  00164E                     _caratula:
   985                           	opt stack 25
   986                           
   987                           ;main.c: 38: lcd_comand(0b00001100);
   988                           
   989                           ;incstack = 0
   990  00164E  0E0C               	movlw	12
   991  001650  ECBB  F00E         	call	_lcd_comand
   992                           
   993                           ;main.c: 39: lcd_gotoxy(1,1);
   994  001654  0E01               	movlw	1
   995  001656  6E05               	movwf	lcd_gotoxy@y,c
   996  001658  0E01               	movlw	1
   997  00165A  EC73  F00E         	call	_lcd_gotoxy
   998                           
   999                           ;main.c: 40: lcd_putrs("UNIMIC");
  1000  00165E  0E34               	movlw	low STR_1
  1001  001660  6E09               	movwf	lcd_putrs@ptr,c
  1002  001662  0E0F               	movlw	high STR_1
  1003  001664  6E0A               	movwf	lcd_putrs@ptr+1,c
  1004  001666  EC8A  F00D         	call	_lcd_putrs	;wreg free
  1005                           
  1006                           ;main.c: 41: sprintf(buffer2,"%02u/%02u/%02u",dia,mes,anio);
  1007  00166A  0E78               	movlw	low _buffer2
  1008  00166C  6E0D               	movwf	sprintf@sp,c
  1009  00166E  0E00               	movlw	high _buffer2
  1010  001670  6E0E               	movwf	sprintf@sp+1,c
  1011  001672  0E0F               	movlw	low STR_2
  1012  001674  6E0F               	movwf	sprintf@f,c
  1013  001676  0E0F               	movlw	high STR_2
  1014  001678  6E10               	movwf	sprintf@f+1,c
  1015  00167A  C050  F011         	movff	_dia,?_sprintf+4
  1016  00167E  C051  F012         	movff	_dia+1,?_sprintf+5
  1017  001682  C056  F013         	movff	_mes,?_sprintf+6
  1018  001686  C057  F014         	movff	_mes+1,?_sprintf+7
  1019  00168A  C04E  F015         	movff	_anio,?_sprintf+8
  1020  00168E  C04F  F016         	movff	_anio+1,?_sprintf+9
  1021  001692  EC9E  F007         	call	_sprintf	;wreg free
  1022                           
  1023                           ;main.c: 42: lcd_gotoxy(9,1);
  1024  001696  0E01               	movlw	1
  1025  001698  6E05               	movwf	lcd_gotoxy@y,c
  1026  00169A  0E09               	movlw	9
  1027  00169C  EC73  F00E         	call	_lcd_gotoxy
  1028                           
  1029                           ;main.c: 43: lcd_putrs(buffer2);
  1030  0016A0  0E78               	movlw	low _buffer2
  1031  0016A2  6E09               	movwf	lcd_putrs@ptr,c
  1032  0016A4  0E00               	movlw	high _buffer2
  1033  0016A6  6E0A               	movwf	lcd_putrs@ptr+1,c
  1034  0016A8  EC8A  F00D         	call	_lcd_putrs	;wreg free
  1035                           
  1036                           ;main.c: 44: sprintf(buffer2,"%02u:%02u:%02u",hora,minuto,segundo);
  1037  0016AC  0E78               	movlw	low _buffer2
  1038  0016AE  6E0D               	movwf	sprintf@sp,c
  1039  0016B0  0E00               	movlw	high _buffer2
  1040  0016B2  6E0E               	movwf	sprintf@sp+1,c
  1041  0016B4  0E1E               	movlw	low STR_3
  1042  0016B6  6E0F               	movwf	sprintf@f,c
  1043  0016B8  0E0F               	movlw	high STR_3
  1044  0016BA  6E10               	movwf	sprintf@f+1,c
  1045  0016BC  C054  F011         	movff	_hora,?_sprintf+4
  1046  0016C0  C055  F012         	movff	_hora+1,?_sprintf+5
  1047  0016C4  C058  F013         	movff	_minuto,?_sprintf+6
  1048  0016C8  C059  F014         	movff	_minuto+1,?_sprintf+7
  1049  0016CC  C037  F015         	movff	_segundo,?_sprintf+8
  1050  0016D0  C038  F016         	movff	_segundo+1,?_sprintf+9
  1051  0016D4  EC9E  F007         	call	_sprintf	;wreg free
  1052                           
  1053                           ;main.c: 45: lcd_gotoxy(1,2);
  1054  0016D8  0E02               	movlw	2
  1055  0016DA  6E05               	movwf	lcd_gotoxy@y,c
  1056  0016DC  0E01               	movlw	1
  1057  0016DE  EC73  F00E         	call	_lcd_gotoxy
  1058                           
  1059                           ;main.c: 47: b=b++;
  1060  0016E2  0E78               	movlw	low _buffer2
  1061  0016E4  6E09               	movwf	lcd_putrs@ptr,c
  1062  0016E6  0E00               	movlw	high _buffer2
  1063  0016E8  6E0A               	movwf	lcd_putrs@ptr+1,c
  1064  0016EA  EC8A  F00D         	call	_lcd_putrs	;wreg free
  1065  0016EE  4A2D               	infsnz	_b,f,c
  1066  0016F0  2A2E               	incf	_b+1,f,c
  1067                           
  1068                           ;main.c: 48: if(b<7)
  1069  0016F2  BE2E               	btfsc	_b+1,7,c
  1070  0016F4  D006               	goto	l2300
  1071  0016F6  502E               	movf	_b+1,w,c
  1072  0016F8  E110               	bnz	l2304
  1073  0016FA  0E07               	movlw	7
  1074  0016FC  5C2D               	subwf	_b,w,c
  1075  0016FE  B0D8               	btfsc	status,0,c
  1076  001700  D00C               	goto	l2304
  1077  001702                     l2300:
  1078                           
  1079                           ;main.c: 49: {
  1080                           ;main.c: 50: lcd_gotoxy(1,1);
  1081  001702  0E01               	movlw	1
  1082  001704  6E05               	movwf	lcd_gotoxy@y,c
  1083  001706  0E01               	movlw	1
  1084  001708  EC73  F00E         	call	_lcd_gotoxy
  1085                           
  1086                           ;main.c: 51: lcd_putrs("UNIMIC");
  1087  00170C  0E34               	movlw	low STR_1
  1088  00170E  6E09               	movwf	lcd_putrs@ptr,c
  1089  001710  0E0F               	movlw	high STR_1
  1090  001712  6E0A               	movwf	lcd_putrs@ptr+1,c
  1091  001714  EC8A  F00D         	call	_lcd_putrs	;wreg free
  1092  001718  D000               	goto	l2304
  1093  00171A                     l2304:
  1094                           
  1095                           ;main.c: 52: }
  1096                           ;main.c: 53: if(b>6)
  1097  00171A  BE2E               	btfsc	_b+1,7,c
  1098  00171C  0012               	return	
  1099  00171E  502E               	movf	_b+1,w,c
  1100  001720  E104               	bnz	u1630
  1101  001722  0E07               	movlw	7
  1102  001724  5C2D               	subwf	_b,w,c
  1103  001726  A0D8               	btfss	status,0,c
  1104  001728  0012               	return	
  1105  00172A                     u1630:
  1106                           
  1107                           ;main.c: 54: {
  1108                           ;main.c: 55: if(b==11){b=0;}
  1109  00172A  0E0B               	movlw	11
  1110  00172C  182D               	xorwf	_b,w,c
  1111  00172E  102E               	iorwf	_b+1,w,c
  1112  001730  A4D8               	btfss	status,2,c
  1113  001732  D005               	goto	l2310
  1114  001734  0E00               	movlw	0
  1115  001736  6E2E               	movwf	_b+1,c
  1116  001738  0E00               	movlw	0
  1117  00173A  6E2D               	movwf	_b,c
  1118  00173C  D000               	goto	l2310
  1119  00173E                     l2310:
  1120                           
  1121                           ;main.c: 56: lcd_gotoxy(1,1);
  1122  00173E  0E01               	movlw	1
  1123  001740  6E05               	movwf	lcd_gotoxy@y,c
  1124  001742  0E01               	movlw	1
  1125  001744  EC73  F00E         	call	_lcd_gotoxy
  1126                           
  1127                           ;main.c: 57: lcd_putrs("      ");
  1128  001748  0E2D               	movlw	low STR_5
  1129  00174A  6E09               	movwf	lcd_putrs@ptr,c
  1130  00174C  0E0F               	movlw	high STR_5
  1131  00174E  6E0A               	movwf	lcd_putrs@ptr+1,c
  1132  001750  EC8A  F00D         	call	_lcd_putrs	;wreg free
  1133  001754  0012               	return	
  1134  001756  0012               	return		;funcret
  1135  001758                     __end_of_caratula:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           postinc0	equ	0xFEE
  1142                           wreg	equ	0xFE8
  1143                           postdec1	equ	0xFE5
  1144                           fsr1l	equ	0xFE1
  1145                           status	equ	0xFD8
  1146                           
  1147 ;; *************** function _sprintf *****************
  1148 ;; Defined at:
  1149 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1152 ;;		 -> buffer2(20), 
  1153 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1154 ;;		 -> STR_3(15), STR_2(15), 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  tmpval          4    0        struct .
  1157 ;;  cp              3    0        PTR const unsigned char 
  1158 ;;  width           2   32[COMRAM] int 
  1159 ;;  val             2   29[COMRAM] unsigned int 
  1160 ;;  ap              2   26[COMRAM] PTR void [1]
  1161 ;;		 -> ?_sprintf(2), 
  1162 ;;  len             2    0        unsigned int 
  1163 ;;  c               1   34[COMRAM] char 
  1164 ;;  prec            1   31[COMRAM] char 
  1165 ;;  flag            1   28[COMRAM] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  2   12[COMRAM] int 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1175 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1176 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1177 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1178 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1179 ;;Total ram usage:       23 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    1
  1182 ;; This function calls:
  1183 ;;		___lwdiv
  1184 ;;		___lwmod
  1185 ;;		___wmul
  1186 ;;		_isdigit
  1187 ;; This function is called by:
  1188 ;;		_caratula
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text3
  1193  000F3C                     __ptext3:
  1194                           	opt stack 0
  1195  000F3C                     _sprintf:
  1196                           	opt stack 28
  1197                           
  1198                           ;doprnt.c: 494: va_list ap;
  1199                           ;doprnt.c: 499: signed char c;
  1200                           ;doprnt.c: 501: int width;
  1201                           ;doprnt.c: 506: signed char prec;
  1202                           ;doprnt.c: 508: unsigned char flag;
  1203                           ;doprnt.c: 523: union {
  1204                           ;doprnt.c: 524: unsigned long vd;
  1205                           ;doprnt.c: 525: double integ;
  1206                           ;doprnt.c: 526: } tmpval;
  1207                           ;doprnt.c: 528: unsigned int val;
  1208                           ;doprnt.c: 529: unsigned len;
  1209                           ;doprnt.c: 530: const char * cp;
  1210                           ;doprnt.c: 533: *ap = __va_start();
  1211                           
  1212                           ;incstack = 0
  1213  000F3C  0E11               	movlw	low (?_sprintf+4)
  1214  000F3E  6E1B               	movwf	sprintf@ap,c
  1215  000F40  0E00               	movlw	high (?_sprintf+4)
  1216  000F42  6E1C               	movwf	sprintf@ap+1,c
  1217                           
  1218                           ;doprnt.c: 536: while(c = *f++) {
  1219  000F44  D117               	goto	l2202
  1220  000F46                     l2120:
  1221                           
  1222                           ;doprnt.c: 538: if(c != '%')
  1223  000F46  0E25               	movlw	37
  1224  000F48  1823               	xorwf	sprintf@c,w,c
  1225  000F4A  B4D8               	btfsc	status,2,c
  1226  000F4C  D009               	goto	l2126
  1227                           
  1228                           ;doprnt.c: 540: {
  1229                           ;doprnt.c: 541: ((*sp++ = (c)));
  1230  000F4E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1231  000F52  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1232  000F56  C023  FFDF         	movff	sprintf@c,indf2
  1233  000F5A  4A0D               	infsnz	sprintf@sp,f,c
  1234  000F5C  2A0E               	incf	sprintf@sp+1,f,c
  1235                           
  1236                           ;doprnt.c: 542: continue;
  1237  000F5E  D10A               	goto	l2202
  1238  000F60                     l2126:
  1239                           
  1240                           ;doprnt.c: 543: }
  1241                           ;doprnt.c: 546: width = 0;
  1242  000F60  0E00               	movlw	0
  1243  000F62  6E22               	movwf	sprintf@width+1,c
  1244  000F64  0E00               	movlw	0
  1245  000F66  6E21               	movwf	sprintf@width,c
  1246                           
  1247                           ;doprnt.c: 548: flag = 0;
  1248  000F68  0E00               	movlw	0
  1249  000F6A  6E1D               	movwf	sprintf@flag,c
  1250                           
  1251                           ;doprnt.c: 551: switch(*f) {
  1252                           
  1253                           ;doprnt.c: 550: for(;;) {
  1254  000F6C  D005               	goto	l2132
  1255  000F6E                     l2128:
  1256                           
  1257                           ;doprnt.c: 580: flag |= 0x04;
  1258  000F6E  841D               	bsf	sprintf@flag,2,c
  1259                           
  1260                           ;doprnt.c: 581: f++;
  1261  000F70  4A0F               	infsnz	sprintf@f,f,c
  1262  000F72  2A10               	incf	sprintf@f+1,f,c
  1263                           
  1264                           ;doprnt.c: 582: continue;
  1265  000F74  D001               	goto	l2132
  1266                           
  1267                           ;doprnt.c: 584: }
  1268  000F76  D00B               	goto	l2134
  1269  000F78                     l2132:
  1270  000F78  C00F  FFF6         	movff	sprintf@f,tblptrl
  1271  000F7C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1272  000F80                     	if	0	;tblptru may be non-zero
  1273  000F80                     	endif
  1274  000F80                     	if	0	;tblptru may be non-zero
  1275  000F80                     	endif
  1276  000F80  0008               	tblrd		*
  1277  000F82  50F5               	movf	tablat,w,c
  1278                           
  1279                           ; Switch size 1, requested type "space"
  1280                           ; Number of cases is 1, Range of values is 48 to 48
  1281                           ; switch strategies available:
  1282                           ; Name         Instructions Cycles
  1283                           ; simple_byte            4     3 (average)
  1284                           ;	Chosen strategy is simple_byte
  1285  000F84  0A30               	xorlw	48	; case 48
  1286  000F86  B4D8               	btfsc	status,2,c
  1287  000F88  D7F2               	goto	l2128
  1288                           
  1289                           ;doprnt.c: 585: break;
  1290  000F8A  D001               	goto	l2134
  1291                           
  1292                           ;doprnt.c: 586: }
  1293  000F8C  D7F5               	goto	l2132
  1294  000F8E                     l2134:
  1295                           
  1296                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1297  000F8E  C00F  FFF6         	movff	sprintf@f,tblptrl
  1298  000F92  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1299  000F96                     	if	0	;tblptru may be non-zero
  1300  000F96                     	endif
  1301  000F96                     	if	0	;tblptru may be non-zero
  1302  000F96                     	endif
  1303  000F96  0008               	tblrd		*
  1304  000F98  50F5               	movf	tablat,w,c
  1305  000F9A  EC85  F00E         	call	_isdigit
  1306  000F9E  A0D8               	btfss	status,0,c
  1307  000FA0  D03A               	goto	l2150
  1308                           
  1309                           ;doprnt.c: 598: width = 0;
  1310  000FA2  0E00               	movlw	0
  1311  000FA4  6E22               	movwf	sprintf@width+1,c
  1312  000FA6  0E00               	movlw	0
  1313  000FA8  6E21               	movwf	sprintf@width,c
  1314  000FAA  D000               	goto	l2138
  1315  000FAC                     l2138:
  1316                           
  1317                           ;doprnt.c: 600: width *= 10;
  1318  000FAC  C021  F001         	movff	sprintf@width,___wmul@multiplier
  1319  000FB0  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1320  000FB4  0E00               	movlw	0
  1321  000FB6  6E04               	movwf	___wmul@multiplicand+1,c
  1322  000FB8  0E0A               	movlw	10
  1323  000FBA  6E03               	movwf	___wmul@multiplicand,c
  1324  000FBC  EC5F  F00E         	call	___wmul	;wreg free
  1325  000FC0  C001  F021         	movff	?___wmul,sprintf@width
  1326  000FC4  C002  F022         	movff	?___wmul+1,sprintf@width+1
  1327                           
  1328                           ;doprnt.c: 601: width += *f++ - '0';
  1329  000FC8  0ED0               	movlw	208
  1330  000FCA  6E17               	movwf	??_sprintf& (0+255),c
  1331  000FCC  0EFF               	movlw	255
  1332  000FCE  6E18               	movwf	(??_sprintf+1)& (0+255),c
  1333  000FD0  C00F  FFF6         	movff	sprintf@f,tblptrl
  1334  000FD4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1335  000FD8                     	if	0	;tblptru may be non-zero
  1336  000FD8                     	endif
  1337  000FD8                     	if	0	;tblptru may be non-zero
  1338  000FD8                     	endif
  1339  000FD8  0008               	tblrd		*
  1340  000FDA  50F5               	movf	tablat,w,c
  1341  000FDC  6E19               	movwf	(??_sprintf+2)& (0+255),c
  1342  000FDE  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  1343  000FE0  5017               	movf	??_sprintf,w,c
  1344  000FE2  2619               	addwf	??_sprintf+2,f,c
  1345  000FE4  5018               	movf	??_sprintf+1,w,c
  1346  000FE6  221A               	addwfc	??_sprintf+3,f,c
  1347  000FE8  5019               	movf	??_sprintf+2,w,c
  1348  000FEA  2621               	addwf	sprintf@width,f,c
  1349  000FEC  501A               	movf	??_sprintf+3,w,c
  1350  000FEE  2222               	addwfc	sprintf@width+1,f,c
  1351  000FF0  4A0F               	infsnz	sprintf@f,f,c
  1352  000FF2  2A10               	incf	sprintf@f+1,f,c
  1353                           
  1354                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1355  000FF4  C00F  FFF6         	movff	sprintf@f,tblptrl
  1356  000FF8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1357  000FFC                     	if	0	;tblptru may be non-zero
  1358  000FFC                     	endif
  1359  000FFC                     	if	0	;tblptru may be non-zero
  1360  000FFC                     	endif
  1361  000FFC  0008               	tblrd		*
  1362  000FFE  50F5               	movf	tablat,w,c
  1363  001000  EC85  F00E         	call	_isdigit
  1364  001004  A0D8               	btfss	status,0,c
  1365  001006  D007               	goto	l2150
  1366  001008  D7D1               	goto	l2138
  1367                           
  1368                           ;doprnt.c: 608: }
  1369                           ;doprnt.c: 635: switch(c = *f++) {
  1370  00100A  D005               	goto	l2150
  1371                           
  1372                           ;doprnt.c: 638: goto alldone;
  1373                           
  1374                           ;doprnt.c: 637: case 0:
  1375  00100C  D0C1               	goto	l2204
  1376                           
  1377                           ;doprnt.c: 813: continue;
  1378                           
  1379                           ;doprnt.c: 802: default:
  1380  00100E  D0B2               	goto	l2202
  1381  001010                     l2146:
  1382                           
  1383                           ;doprnt.c: 818: flag |= 0xC0;
  1384  001010  0EC0               	movlw	192
  1385  001012  121D               	iorwf	sprintf@flag,f,c
  1386                           
  1387                           ;doprnt.c: 822: }
  1388                           
  1389                           ;doprnt.c: 819: break;
  1390  001014  D011               	goto	l2152
  1391  001016                     l2150:
  1392  001016  C00F  FFF6         	movff	sprintf@f,tblptrl
  1393  00101A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1394  00101E  4A0F               	infsnz	sprintf@f,f,c
  1395  001020  2A10               	incf	sprintf@f+1,f,c
  1396  001022                     	if	0	;tblptru may be non-zero
  1397  001022                     	endif
  1398  001022                     	if	0	;tblptru may be non-zero
  1399  001022                     	endif
  1400  001022  0008               	tblrd		*
  1401  001024  CFF5 F023          	movff	tablat,sprintf@c
  1402  001028  5023               	movf	sprintf@c,w,c
  1403                           
  1404                           ; Switch size 1, requested type "space"
  1405                           ; Number of cases is 2, Range of values is 0 to 117
  1406                           ; switch strategies available:
  1407                           ; Name         Instructions Cycles
  1408                           ; simple_byte            7     4 (average)
  1409                           ;	Chosen strategy is simple_byte
  1410  00102A  0A00               	xorlw	0	; case 0
  1411  00102C  B4D8               	btfsc	status,2,c
  1412  00102E  D0B0               	goto	l2204
  1413  001030  0A75               	xorlw	117	; case 117
  1414  001032  B4D8               	btfsc	status,2,c
  1415  001034  D7ED               	goto	l2146
  1416  001036  D09E               	goto	l2202
  1417  001038                     l2152:
  1418                           
  1419                           ;doprnt.c: 1273: {
  1420                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1421  001038  C01B  FFD9         	movff	sprintf@ap,fsr2l
  1422  00103C  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  1423  001040  CFDE F01E          	movff	postinc2,sprintf@val
  1424  001044  CFDD F01F          	movff	postdec2,sprintf@val+1
  1425  001048  0E02               	movlw	2
  1426  00104A  261B               	addwf	sprintf@ap,f,c
  1427  00104C  0E00               	movlw	0
  1428  00104E  221C               	addwfc	sprintf@ap+1,f,c
  1429                           
  1430                           ;doprnt.c: 1287: }
  1431                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1432  001050  0E01               	movlw	1
  1433  001052  6E23               	movwf	sprintf@c,c
  1434  001054                     l2158:
  1435  001054  0E05               	movlw	5
  1436  001056  1823               	xorwf	sprintf@c,w,c
  1437  001058  B4D8               	btfsc	status,2,c
  1438  00105A  D016               	goto	l2170
  1439  00105C  D001               	goto	l2162
  1440  00105E  D014               	goto	l2170
  1441  001060                     l2162:
  1442                           
  1443                           ;doprnt.c: 1306: if(val < dpowers[c])
  1444  001060  5023               	movf	sprintf@c,w,c
  1445  001062  0D02               	mullw	2
  1446  001064  0E01               	movlw	low _dpowers
  1447  001066  24F3               	addwf	prodl,w,c
  1448  001068  6EF6               	movwf	tblptrl,c
  1449  00106A  0E0F               	movlw	high _dpowers
  1450  00106C  20F4               	addwfc	prodh,w,c
  1451  00106E  6EF7               	movwf	tblptrh,c
  1452  001070                     	if	0	;There are less than 3 active tblptr bytes
  1453  001070                     	endif
  1454  001070  0009               	tblrd		*+
  1455  001072  50F5               	movf	tablat,w,c
  1456  001074  5C1E               	subwf	sprintf@val,w,c
  1457  001076  0009               	tblrd		*+
  1458  001078  50F5               	movf	tablat,w,c
  1459  00107A  581F               	subwfb	sprintf@val+1,w,c
  1460  00107C  A0D8               	btfss	status,0,c
  1461  00107E  D004               	goto	l2170
  1462  001080  D001               	goto	l2166
  1463                           
  1464                           ;doprnt.c: 1307: break;
  1465  001082  D002               	goto	l2170
  1466  001084                     l2166:
  1467  001084  2A23               	incf	sprintf@c,f,c
  1468  001086  D7E6               	goto	l2158
  1469  001088                     l2170:
  1470                           
  1471                           ;doprnt.c: 1381: if(width > c)
  1472  001088  0E80               	movlw	128
  1473  00108A  BE23               	btfsc	sprintf@c,7,c
  1474  00108C  0E7F               	movlw	127
  1475  00108E  6E17               	movwf	??_sprintf& (0+255),c
  1476  001090  5021               	movf	sprintf@width,w,c
  1477  001092  5C23               	subwf	sprintf@c,w,c
  1478  001094  5022               	movf	sprintf@width+1,w,c
  1479  001096  0A80               	xorlw	128
  1480  001098  5817               	subwfb	??_sprintf& (0+255),w,c
  1481  00109A  B0D8               	btfsc	status,0,c
  1482  00109C  D007               	goto	l2174
  1483                           
  1484                           ;doprnt.c: 1382: width -= c;
  1485  00109E  5023               	movf	sprintf@c,w,c
  1486  0010A0  5E21               	subwf	sprintf@width,f,c
  1487  0010A2  0E00               	movlw	0
  1488  0010A4  BE23               	btfsc	sprintf@c,7,c
  1489  0010A6  0EFF               	movlw	255
  1490  0010A8  5A22               	subwfb	sprintf@width+1,f,c
  1491  0010AA  D005               	goto	l2176
  1492  0010AC                     l2174:
  1493                           
  1494                           ;doprnt.c: 1383: else
  1495                           ;doprnt.c: 1384: width = 0;
  1496  0010AC  0E00               	movlw	0
  1497  0010AE  6E22               	movwf	sprintf@width+1,c
  1498  0010B0  0E00               	movlw	0
  1499  0010B2  6E21               	movwf	sprintf@width,c
  1500  0010B4  D000               	goto	l2176
  1501  0010B6                     l2176:
  1502                           
  1503                           ;doprnt.c: 1387: if(flag & 0x04) {
  1504  0010B6  A41D               	btfss	sprintf@flag,2,c
  1505  0010B8  D015               	goto	l2186
  1506                           
  1507                           ;doprnt.c: 1415: if(width)
  1508  0010BA  5021               	movf	sprintf@width,w,c
  1509  0010BC  1022               	iorwf	sprintf@width+1,w,c
  1510  0010BE  B4D8               	btfsc	status,2,c
  1511  0010C0  D026               	goto	l263
  1512  0010C2                     l2180:
  1513                           
  1514                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1515  0010C2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1516  0010C6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1517  0010CA  0E30               	movlw	48
  1518  0010CC  6EDF               	movwf	indf2,c
  1519  0010CE  4A0D               	infsnz	sprintf@sp,f,c
  1520  0010D0  2A0E               	incf	sprintf@sp+1,f,c
  1521                           
  1522                           ;doprnt.c: 1418: while(--width);
  1523  0010D2  0621               	decf	sprintf@width,f,c
  1524  0010D4  A0D8               	btfss	status,0,c
  1525  0010D6  0622               	decf	sprintf@width+1,f,c
  1526  0010D8  5021               	movf	sprintf@width,w,c
  1527  0010DA  1022               	iorwf	sprintf@width+1,w,c
  1528  0010DC  B4D8               	btfsc	status,2,c
  1529  0010DE  D017               	goto	l263
  1530  0010E0  D7F0               	goto	l2180
  1531                           
  1532                           ;doprnt.c: 1420: } else
  1533  0010E2  D015               	goto	l263
  1534  0010E4                     l2186:
  1535                           
  1536                           ;doprnt.c: 1422: {
  1537                           ;doprnt.c: 1424: if(width
  1538                           ;doprnt.c: 1428: )
  1539  0010E4  5021               	movf	sprintf@width,w,c
  1540  0010E6  1022               	iorwf	sprintf@width+1,w,c
  1541  0010E8  B4D8               	btfsc	status,2,c
  1542  0010EA  D011               	goto	l263
  1543  0010EC                     l2188:
  1544                           
  1545                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1546  0010EC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1547  0010F0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1548  0010F4  0E20               	movlw	32
  1549  0010F6  6EDF               	movwf	indf2,c
  1550  0010F8  4A0D               	infsnz	sprintf@sp,f,c
  1551  0010FA  2A0E               	incf	sprintf@sp+1,f,c
  1552                           
  1553                           ;doprnt.c: 1431: while(--width);
  1554  0010FC  0621               	decf	sprintf@width,f,c
  1555  0010FE  A0D8               	btfss	status,0,c
  1556  001100  0622               	decf	sprintf@width+1,f,c
  1557  001102  5021               	movf	sprintf@width,w,c
  1558  001104  1022               	iorwf	sprintf@width+1,w,c
  1559  001106  B4D8               	btfsc	status,2,c
  1560  001108  D002               	goto	l263
  1561  00110A  D7F0               	goto	l2188
  1562  00110C  D000               	goto	l263
  1563  00110E                     l263:
  1564                           
  1565                           ;doprnt.c: 1469: }
  1566                           ;doprnt.c: 1472: prec = c;
  1567  00110E  C023  F020         	movff	sprintf@c,sprintf@prec
  1568                           
  1569                           ;doprnt.c: 1474: while(prec--) {
  1570  001112  D02A               	goto	l2200
  1571  001114                     l2194:
  1572                           
  1573                           ;doprnt.c: 1478: {
  1574                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1575  001114  5020               	movf	sprintf@prec,w,c
  1576  001116  0D02               	mullw	2
  1577  001118  0E01               	movlw	low _dpowers
  1578  00111A  24F3               	addwf	prodl,w,c
  1579  00111C  6EF6               	movwf	tblptrl,c
  1580  00111E  0E0F               	movlw	high _dpowers
  1581  001120  20F4               	addwfc	prodh,w,c
  1582  001122  6EF7               	movwf	tblptrh,c
  1583  001124                     	if	0	;There are less than 3 active tblptr bytes
  1584  001124                     	endif
  1585  001124  0009               	tblrd		*+
  1586  001126  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1587  00112A  000A               	tblrd		*-
  1588  00112C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1589  001130  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  1590  001134  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1591  001138  EC5C  F00D         	call	___lwdiv	;wreg free
  1592  00113C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1593  001140  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1594  001144  0E00               	movlw	0
  1595  001146  6E0B               	movwf	___lwmod@divisor+1,c
  1596  001148  0E0A               	movlw	10
  1597  00114A  6E0A               	movwf	___lwmod@divisor,c
  1598  00114C  ECB4  F00D         	call	___lwmod	;wreg free
  1599  001150  5008               	movf	?___lwmod,w,c
  1600  001152  0F30               	addlw	48
  1601  001154  6E23               	movwf	sprintf@c,c
  1602                           
  1603                           ;doprnt.c: 1523: }
  1604                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1605  001156  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1606  00115A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1607  00115E  C023  FFDF         	movff	sprintf@c,indf2
  1608  001162  4A0D               	infsnz	sprintf@sp,f,c
  1609  001164  2A0E               	incf	sprintf@sp+1,f,c
  1610  001166  D000               	goto	l2200
  1611  001168                     l2200:
  1612  001168  0620               	decf	sprintf@prec,f,c
  1613  00116A  2820               	incf	sprintf@prec,w,c
  1614  00116C  B4D8               	btfsc	status,2,c
  1615  00116E  D002               	goto	l2202
  1616  001170  D7D1               	goto	l2194
  1617  001172  D000               	goto	l2202
  1618  001174                     l2202:
  1619  001174  C00F  FFF6         	movff	sprintf@f,tblptrl
  1620  001178  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1621  00117C  4A0F               	infsnz	sprintf@f,f,c
  1622  00117E  2A10               	incf	sprintf@f+1,f,c
  1623  001180                     	if	0	;tblptru may be non-zero
  1624  001180                     	endif
  1625  001180                     	if	0	;tblptru may be non-zero
  1626  001180                     	endif
  1627  001180  0008               	tblrd		*
  1628  001182  CFF5 F023          	movff	tablat,sprintf@c
  1629  001186  5023               	movf	sprintf@c,w,c
  1630  001188  B4D8               	btfsc	status,2,c
  1631  00118A  D002               	goto	l2204
  1632  00118C  D6DC               	goto	l2120
  1633  00118E  D000               	goto	l2204
  1634  001190                     l2204:
  1635                           
  1636                           ;doprnt.c: 1538: *sp = 0;
  1637  001190  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1638  001194  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1639  001198  0E00               	movlw	0
  1640  00119A  6EDF               	movwf	indf2,c
  1641  00119C  0012               	return	
  1642                           
  1643                           ;doprnt.c: 1540: return 0;
  1644                           ;	Return value of _sprintf is never used
  1645  00119E  0012               	return		;funcret
  1646  0011A0                     __end_of_sprintf:
  1647                           	opt stack 0
  1648                           tblptru	equ	0xFF8
  1649                           tblptrh	equ	0xFF7
  1650                           tblptrl	equ	0xFF6
  1651                           tablat	equ	0xFF5
  1652                           prodh	equ	0xFF4
  1653                           prodl	equ	0xFF3
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           postdec1	equ	0xFE5
  1657                           fsr1l	equ	0xFE1
  1658                           indf2	equ	0xFDF
  1659                           postinc2	equ	0xFDE
  1660                           postdec2	equ	0xFDD
  1661                           fsr2h	equ	0xFDA
  1662                           fsr2l	equ	0xFD9
  1663                           status	equ	0xFD8
  1664                           
  1665 ;; *************** function _isdigit *****************
  1666 ;; Defined at:
  1667 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  c               1    wreg     unsigned char 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  c               1    2[COMRAM] unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;		None               void
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;Total ram usage:        3 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_sprintf
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text4
  1695  001D0A                     __ptext4:
  1696                           	opt stack 0
  1697  001D0A                     _isdigit:
  1698                           	opt stack 28
  1699                           
  1700                           ;incstack = 0
  1701                           ;isdigit@c stored from wreg
  1702  001D0A  6E03               	movwf	isdigit@c,c
  1703  001D0C  0E00               	movlw	0
  1704  001D0E  6E02               	movwf	_isdigit$1822,c
  1705  001D10  0E3A               	movlw	58
  1706  001D12  6003               	cpfslt	isdigit@c,c
  1707  001D14  D006               	goto	l1908
  1708  001D16  0E2F               	movlw	47
  1709  001D18  6403               	cpfsgt	isdigit@c,c
  1710  001D1A  D003               	goto	l1908
  1711  001D1C  0E01               	movlw	1
  1712  001D1E  6E02               	movwf	_isdigit$1822,c
  1713  001D20  D000               	goto	l1908
  1714  001D22                     l1908:
  1715  001D22  C002  F001         	movff	_isdigit$1822,??_isdigit
  1716  001D26  3001               	rrcf	??_isdigit,w,c
  1717  001D28  0012               	return	
  1718  001D2A  0012               	return		;funcret
  1719  001D2C                     __end_of_isdigit:
  1720                           	opt stack 0
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           prodh	equ	0xFF4
  1726                           prodl	equ	0xFF3
  1727                           postinc0	equ	0xFEE
  1728                           wreg	equ	0xFE8
  1729                           postdec1	equ	0xFE5
  1730                           fsr1l	equ	0xFE1
  1731                           indf2	equ	0xFDF
  1732                           postinc2	equ	0xFDE
  1733                           postdec2	equ	0xFDD
  1734                           fsr2h	equ	0xFDA
  1735                           fsr2l	equ	0xFD9
  1736                           status	equ	0xFD8
  1737                           
  1738 ;; *************** function ___wmul *****************
  1739 ;; Defined at:
  1740 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  multiplier      2    0[COMRAM] unsigned int 
  1743 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  product         2    4[COMRAM] unsigned int 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  2    0[COMRAM] unsigned int 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2, status,0, prodl, prodh
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1758 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;Total ram usage:        6 bytes
  1760 ;; Hardware stack levels used:    1
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_sprintf
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text5
  1769  001CBE                     __ptext5:
  1770                           	opt stack 0
  1771  001CBE                     ___wmul:
  1772                           	opt stack 28
  1773                           
  1774                           ;incstack = 0
  1775  001CBE  5001               	movf	___wmul@multiplier,w,c
  1776  001CC0  0203               	mulwf	___wmul@multiplicand,c
  1777  001CC2  CFF3 F005          	movff	prodl,___wmul@product
  1778  001CC6  CFF4 F006          	movff	prodh,___wmul@product+1
  1779  001CCA  5001               	movf	___wmul@multiplier,w,c
  1780  001CCC  0204               	mulwf	___wmul@multiplicand+1,c
  1781  001CCE  50F3               	movf	prodl,w,c
  1782  001CD0  2606               	addwf	___wmul@product+1,f,c
  1783  001CD2  5002               	movf	___wmul@multiplier+1,w,c
  1784  001CD4  0203               	mulwf	___wmul@multiplicand,c
  1785  001CD6  50F3               	movf	prodl,w,c
  1786  001CD8  2606               	addwf	___wmul@product+1,f,c
  1787  001CDA  C005  F001         	movff	___wmul@product,?___wmul
  1788  001CDE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1789  001CE2  0012               	return	
  1790  001CE4  0012               	return		;funcret
  1791  001CE6                     __end_of___wmul:
  1792                           	opt stack 0
  1793                           tblptru	equ	0xFF8
  1794                           tblptrh	equ	0xFF7
  1795                           tblptrl	equ	0xFF6
  1796                           tablat	equ	0xFF5
  1797                           prodh	equ	0xFF4
  1798                           prodl	equ	0xFF3
  1799                           postinc0	equ	0xFEE
  1800                           wreg	equ	0xFE8
  1801                           postdec1	equ	0xFE5
  1802                           fsr1l	equ	0xFE1
  1803                           indf2	equ	0xFDF
  1804                           postinc2	equ	0xFDE
  1805                           postdec2	equ	0xFDD
  1806                           fsr2h	equ	0xFDA
  1807                           fsr2l	equ	0xFD9
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function ___lwmod *****************
  1811 ;; Defined at:
  1812 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  dividend        2    7[COMRAM] unsigned int 
  1815 ;;  divisor         2    9[COMRAM] unsigned int 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  counter         1   11[COMRAM] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  2    7[COMRAM] unsigned int 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1830 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1831 ;;Total ram usage:        5 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_sprintf
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text6
  1841  001B68                     __ptext6:
  1842                           	opt stack 0
  1843  001B68                     ___lwmod:
  1844                           	opt stack 28
  1845                           
  1846                           ;incstack = 0
  1847  001B68  500A               	movf	___lwmod@divisor,w,c
  1848  001B6A  100B               	iorwf	___lwmod@divisor+1,w,c
  1849  001B6C  B4D8               	btfsc	status,2,c
  1850  001B6E  D01D               	goto	l917
  1851  001B70  0E01               	movlw	1
  1852  001B72  6E0C               	movwf	___lwmod@counter,c
  1853  001B74  D005               	goto	l1990
  1854  001B76                     l1988:
  1855  001B76  90D8               	bcf	status,0,c
  1856  001B78  360A               	rlcf	___lwmod@divisor,f,c
  1857  001B7A  360B               	rlcf	___lwmod@divisor+1,f,c
  1858  001B7C  2A0C               	incf	___lwmod@counter,f,c
  1859  001B7E  D000               	goto	l1990
  1860  001B80                     l1990:
  1861  001B80  BE0B               	btfsc	___lwmod@divisor+1,7,c
  1862  001B82  D002               	goto	l1992
  1863  001B84  D7F8               	goto	l1988
  1864  001B86  D000               	goto	l1992
  1865  001B88                     l1992:
  1866  001B88  500A               	movf	___lwmod@divisor,w,c
  1867  001B8A  5C08               	subwf	___lwmod@dividend,w,c
  1868  001B8C  500B               	movf	___lwmod@divisor+1,w,c
  1869  001B8E  5809               	subwfb	___lwmod@dividend+1,w,c
  1870  001B90  A0D8               	btfss	status,0,c
  1871  001B92  D005               	goto	l1996
  1872  001B94  500A               	movf	___lwmod@divisor,w,c
  1873  001B96  5E08               	subwf	___lwmod@dividend,f,c
  1874  001B98  500B               	movf	___lwmod@divisor+1,w,c
  1875  001B9A  5A09               	subwfb	___lwmod@dividend+1,f,c
  1876  001B9C  D000               	goto	l1996
  1877  001B9E                     l1996:
  1878  001B9E  90D8               	bcf	status,0,c
  1879  001BA0  320B               	rrcf	___lwmod@divisor+1,f,c
  1880  001BA2  320A               	rrcf	___lwmod@divisor,f,c
  1881  001BA4  2E0C               	decfsz	___lwmod@counter,f,c
  1882  001BA6  D7F0               	goto	l1992
  1883  001BA8  D000               	goto	l917
  1884  001BAA                     l917:
  1885  001BAA  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1886  001BAE  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1887  001BB2  0012               	return		;funcret
  1888  001BB4                     __end_of___lwmod:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           indf2	equ	0xFDF
  1901                           postinc2	equ	0xFDE
  1902                           postdec2	equ	0xFDD
  1903                           fsr2h	equ	0xFDA
  1904                           fsr2l	equ	0xFD9
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function ___lwdiv *****************
  1908 ;; Defined at:
  1909 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  dividend        2    0[COMRAM] unsigned int 
  1912 ;;  divisor         2    2[COMRAM] unsigned int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  quotient        2    4[COMRAM] unsigned int 
  1915 ;;  counter         1    6[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  2    0[COMRAM] unsigned int 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1928 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1929 ;;Total ram usage:        7 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_sprintf
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text7
  1939  001AB8                     __ptext7:
  1940                           	opt stack 0
  1941  001AB8                     ___lwdiv:
  1942                           	opt stack 28
  1943                           
  1944                           ;incstack = 0
  1945  001AB8  0E00               	movlw	0
  1946  001ABA  6E06               	movwf	___lwdiv@quotient+1,c
  1947  001ABC  0E00               	movlw	0
  1948  001ABE  6E05               	movwf	___lwdiv@quotient,c
  1949  001AC0  5003               	movf	___lwdiv@divisor,w,c
  1950  001AC2  1004               	iorwf	___lwdiv@divisor+1,w,c
  1951  001AC4  B4D8               	btfsc	status,2,c
  1952  001AC6  D021               	goto	l907
  1953  001AC8  0E01               	movlw	1
  1954  001ACA  6E07               	movwf	___lwdiv@counter,c
  1955  001ACC  D005               	goto	l1970
  1956  001ACE                     l1968:
  1957  001ACE  90D8               	bcf	status,0,c
  1958  001AD0  3603               	rlcf	___lwdiv@divisor,f,c
  1959  001AD2  3604               	rlcf	___lwdiv@divisor+1,f,c
  1960  001AD4  2A07               	incf	___lwdiv@counter,f,c
  1961  001AD6  D000               	goto	l1970
  1962  001AD8                     l1970:
  1963  001AD8  BE04               	btfsc	___lwdiv@divisor+1,7,c
  1964  001ADA  D002               	goto	l1972
  1965  001ADC  D7F8               	goto	l1968
  1966  001ADE  D000               	goto	l1972
  1967  001AE0                     l1972:
  1968  001AE0  90D8               	bcf	status,0,c
  1969  001AE2  3605               	rlcf	___lwdiv@quotient,f,c
  1970  001AE4  3606               	rlcf	___lwdiv@quotient+1,f,c
  1971  001AE6  5003               	movf	___lwdiv@divisor,w,c
  1972  001AE8  5C01               	subwf	___lwdiv@dividend,w,c
  1973  001AEA  5004               	movf	___lwdiv@divisor+1,w,c
  1974  001AEC  5802               	subwfb	___lwdiv@dividend+1,w,c
  1975  001AEE  A0D8               	btfss	status,0,c
  1976  001AF0  D006               	goto	l1980
  1977  001AF2  5003               	movf	___lwdiv@divisor,w,c
  1978  001AF4  5E01               	subwf	___lwdiv@dividend,f,c
  1979  001AF6  5004               	movf	___lwdiv@divisor+1,w,c
  1980  001AF8  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1981  001AFA  8005               	bsf	___lwdiv@quotient,0,c
  1982  001AFC  D000               	goto	l1980
  1983  001AFE                     l1980:
  1984  001AFE  90D8               	bcf	status,0,c
  1985  001B00  3204               	rrcf	___lwdiv@divisor+1,f,c
  1986  001B02  3203               	rrcf	___lwdiv@divisor,f,c
  1987  001B04  2E07               	decfsz	___lwdiv@counter,f,c
  1988  001B06  D7EC               	goto	l1972
  1989  001B08  D000               	goto	l907
  1990  001B0A                     l907:
  1991  001B0A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1992  001B0E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1993  001B12  0012               	return		;funcret
  1994  001B14                     __end_of___lwdiv:
  1995                           	opt stack 0
  1996                           tblptru	equ	0xFF8
  1997                           tblptrh	equ	0xFF7
  1998                           tblptrl	equ	0xFF6
  1999                           tablat	equ	0xFF5
  2000                           prodh	equ	0xFF4
  2001                           prodl	equ	0xFF3
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           postdec1	equ	0xFE5
  2005                           fsr1l	equ	0xFE1
  2006                           indf2	equ	0xFDF
  2007                           postinc2	equ	0xFDE
  2008                           postdec2	equ	0xFDD
  2009                           fsr2h	equ	0xFDA
  2010                           fsr2l	equ	0xFD9
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function _lcd_putrs *****************
  2014 ;; Defined at:
  2015 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  2018 ;;		 -> STR_5(7), STR_4(7), buffer2(20), STR_1(7), 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;		None               void
  2023 ;; Registers used:
  2024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;Total ram usage:        2 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    4
  2037 ;; This function calls:
  2038 ;;		_lcd_putc
  2039 ;; This function is called by:
  2040 ;;		_caratula
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text8
  2045  001B14                     __ptext8:
  2046                           	opt stack 0
  2047  001B14                     _lcd_putrs:
  2048                           	opt stack 25
  2049                           
  2050                           ;unmc_lcd_216.c: 223: while(*ptr){
  2051                           
  2052                           ;incstack = 0
  2053  001B14  D015               	goto	l2116
  2054  001B16                     l2112:
  2055                           
  2056                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  2057  001B16  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2058  001B1A  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2059  001B1E  6AF8               	clrf	tblptru,c
  2060  001B20  0E0E               	movlw	(high __ramtop+-1)
  2061  001B22  64F7               	cpfsgt	tblptrh,c
  2062  001B24  D003               	bra	u1417
  2063  001B26  0008               	tblrd		*
  2064  001B28  50F5               	movf	tablat,w,c
  2065  001B2A  D005               	bra	u1410
  2066  001B2C                     u1417:
  2067  001B2C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2068  001B30  CFF7 FFEA          	movff	tblptrh,fsr0h
  2069  001B34  50EF               	movf	indf0,w,c
  2070  001B36                     u1410:
  2071  001B36  ECDA  F00D         	call	_lcd_putc
  2072  001B3A  4A09               	infsnz	lcd_putrs@ptr,f,c
  2073  001B3C  2A0A               	incf	lcd_putrs@ptr+1,f,c
  2074  001B3E  D000               	goto	l2116
  2075  001B40                     l2116:
  2076  001B40  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2077  001B44  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2078  001B48  6AF8               	clrf	tblptru,c
  2079  001B4A  0E0E               	movlw	(high __ramtop+-1)
  2080  001B4C  64F7               	cpfsgt	tblptrh,c
  2081  001B4E  D003               	bra	u1427
  2082  001B50  0008               	tblrd		*
  2083  001B52  50F5               	movf	tablat,w,c
  2084  001B54  D005               	bra	u1420
  2085  001B56                     u1427:
  2086  001B56  CFF6 FFE9          	movff	tblptrl,fsr0l
  2087  001B5A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2088  001B5E  50EF               	movf	indf0,w,c
  2089  001B60                     u1420:
  2090  001B60  0900               	iorlw	0
  2091  001B62  A4D8               	btfss	status,2,c
  2092  001B64  D7D8               	goto	l2112
  2093  001B66  0012               	return		;funcret
  2094  001B68                     __end_of_lcd_putrs:
  2095                           	opt stack 0
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           prodh	equ	0xFF4
  2101                           prodl	equ	0xFF3
  2102                           indf0	equ	0xFEF
  2103                           postinc0	equ	0xFEE
  2104                           fsr0h	equ	0xFEA
  2105                           fsr0l	equ	0xFE9
  2106                           wreg	equ	0xFE8
  2107                           postdec1	equ	0xFE5
  2108                           fsr1l	equ	0xFE1
  2109                           indf2	equ	0xFDF
  2110                           postinc2	equ	0xFDE
  2111                           postdec2	equ	0xFDD
  2112                           fsr2h	equ	0xFDA
  2113                           fsr2l	equ	0xFD9
  2114                           status	equ	0xFD8
  2115                           
  2116 ;; *************** function _lcd_putc *****************
  2117 ;; Defined at:
  2118 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  c               1    wreg     unsigned char 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  c               1    7[COMRAM] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;		None               void
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2136 ;;Total ram usage:        1 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:    3
  2139 ;; This function calls:
  2140 ;;		_lcd_gotoxy
  2141 ;;		_lcd_send_byte
  2142 ;; This function is called by:
  2143 ;;		_lcd_putrs
  2144 ;;		_lcd_puts
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text9
  2149  001BB4                     __ptext9:
  2150                           	opt stack 0
  2151  001BB4                     _lcd_putc:
  2152                           	opt stack 25
  2153                           
  2154                           ;incstack = 0
  2155                           ;lcd_putc@c stored from wreg
  2156  001BB4  6E08               	movwf	lcd_putc@c,c
  2157                           
  2158                           ;unmc_lcd_216.c: 173: switch(c){
  2159  001BB6  D018               	goto	l1898
  2160  001BB8                     l1888:
  2161                           
  2162                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  2163  001BB8  0E01               	movlw	1
  2164  001BBA  6E03               	movwf	lcd_send_byte@n,c
  2165  001BBC  0E00               	movlw	0
  2166  001BBE  EC46  F00E         	call	_lcd_send_byte
  2167                           
  2168                           ;unmc_lcd_216.c: 176: break;
  2169  001BC2  0012               	return	
  2170  001BC4                     l1890:
  2171                           
  2172                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  2173  001BC4  0E02               	movlw	2
  2174  001BC6  6E05               	movwf	lcd_gotoxy@y,c
  2175  001BC8  0E01               	movlw	1
  2176  001BCA  EC73  F00E         	call	_lcd_gotoxy
  2177                           
  2178                           ;unmc_lcd_216.c: 179: break;
  2179  001BCE  0012               	return	
  2180  001BD0                     l1892:
  2181                           
  2182                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  2183  001BD0  0E10               	movlw	16
  2184  001BD2  6E03               	movwf	lcd_send_byte@n,c
  2185  001BD4  0E00               	movlw	0
  2186  001BD6  EC46  F00E         	call	_lcd_send_byte
  2187                           
  2188                           ;unmc_lcd_216.c: 182: break;
  2189  001BDA  0012               	return	
  2190  001BDC                     l1894:
  2191                           
  2192                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  2193  001BDC  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  2194  001BE0  0E01               	movlw	1
  2195  001BE2  EC46  F00E         	call	_lcd_send_byte
  2196                           
  2197                           ;unmc_lcd_216.c: 186: }
  2198                           
  2199                           ;unmc_lcd_216.c: 185: break;
  2200  001BE6  0012               	return	
  2201  001BE8                     l1898:
  2202  001BE8  5008               	movf	lcd_putc@c,w,c
  2203                           
  2204                           ; Switch size 1, requested type "space"
  2205                           ; Number of cases is 3, Range of values is 8 to 12
  2206                           ; switch strategies available:
  2207                           ; Name         Instructions Cycles
  2208                           ; simple_byte           10     6 (average)
  2209                           ;	Chosen strategy is simple_byte
  2210  001BEA  0A08               	xorlw	8	; case 8
  2211  001BEC  B4D8               	btfsc	status,2,c
  2212  001BEE  D7F0               	goto	l1892
  2213  001BF0  0A02               	xorlw	2	; case 10
  2214  001BF2  B4D8               	btfsc	status,2,c
  2215  001BF4  D7E7               	goto	l1890
  2216  001BF6  0A06               	xorlw	6	; case 12
  2217  001BF8  B4D8               	btfsc	status,2,c
  2218  001BFA  D7DE               	goto	l1888
  2219  001BFC  D7EF               	goto	l1894
  2220  001BFE  0012               	return		;funcret
  2221  001C00                     __end_of_lcd_putc:
  2222                           	opt stack 0
  2223                           tblptru	equ	0xFF8
  2224                           tblptrh	equ	0xFF7
  2225                           tblptrl	equ	0xFF6
  2226                           tablat	equ	0xFF5
  2227                           prodh	equ	0xFF4
  2228                           prodl	equ	0xFF3
  2229                           indf0	equ	0xFEF
  2230                           postinc0	equ	0xFEE
  2231                           fsr0h	equ	0xFEA
  2232                           fsr0l	equ	0xFE9
  2233                           wreg	equ	0xFE8
  2234                           postdec1	equ	0xFE5
  2235                           fsr1l	equ	0xFE1
  2236                           indf2	equ	0xFDF
  2237                           postinc2	equ	0xFDE
  2238                           postdec2	equ	0xFDD
  2239                           fsr2h	equ	0xFDA
  2240                           fsr2l	equ	0xFD9
  2241                           status	equ	0xFD8
  2242                           
  2243 ;; *************** function _lcd_gotoxy *****************
  2244 ;; Defined at:
  2245 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  x               1    wreg     unsigned char 
  2248 ;;  y               1    4[COMRAM] unsigned char 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  x               1    5[COMRAM] unsigned char 
  2251 ;;  address         1    6[COMRAM] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;		None               void
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2261 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;Total ram usage:        3 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    2
  2268 ;; This function calls:
  2269 ;;		_lcd_send_byte
  2270 ;; This function is called by:
  2271 ;;		_caratula
  2272 ;;		_main
  2273 ;;		_lcd_putc
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text10
  2278  001CE6                     __ptext10:
  2279                           	opt stack 0
  2280  001CE6                     _lcd_gotoxy:
  2281                           	opt stack 28
  2282                           
  2283                           ;incstack = 0
  2284                           ;lcd_gotoxy@x stored from wreg
  2285  001CE6  6E06               	movwf	lcd_gotoxy@x,c
  2286                           
  2287                           ;unmc_lcd_216.c: 159: int8 address;
  2288                           ;unmc_lcd_216.c: 161: if(y != 1)
  2289  001CE8  0405               	decf	lcd_gotoxy@y,w,c
  2290  001CEA  B4D8               	btfsc	status,2,c
  2291  001CEC  D002               	goto	l1744
  2292                           
  2293                           ;unmc_lcd_216.c: 162: address = 0x40;
  2294  001CEE  0E40               	movlw	64
  2295  001CF0  D001               	goto	L1
  2296  001CF2                     l1744:
  2297                           
  2298                           ;unmc_lcd_216.c: 163: else
  2299                           ;unmc_lcd_216.c: 164: address=0;
  2300  001CF2  0E00               	movlw	0
  2301  001CF4                     L1:
  2302  001CF4  6E07               	movwf	lcd_gotoxy@address,c
  2303  001CF6  D000               	goto	l1746
  2304  001CF8                     l1746:
  2305                           
  2306                           ;unmc_lcd_216.c: 166: address += x-1;
  2307  001CF8  0406               	decf	lcd_gotoxy@x,w,c
  2308  001CFA  2607               	addwf	lcd_gotoxy@address,f,c
  2309                           
  2310                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2311  001CFC  5007               	movf	lcd_gotoxy@address,w,c
  2312  001CFE  0980               	iorlw	128
  2313  001D00  6E03               	movwf	lcd_send_byte@n,c
  2314  001D02  0E00               	movlw	0
  2315  001D04  EC46  F00E         	call	_lcd_send_byte
  2316  001D08  0012               	return		;funcret
  2317  001D0A                     __end_of_lcd_gotoxy:
  2318                           	opt stack 0
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           prodh	equ	0xFF4
  2324                           prodl	equ	0xFF3
  2325                           indf0	equ	0xFEF
  2326                           postinc0	equ	0xFEE
  2327                           fsr0h	equ	0xFEA
  2328                           fsr0l	equ	0xFE9
  2329                           wreg	equ	0xFE8
  2330                           postdec1	equ	0xFE5
  2331                           fsr1l	equ	0xFE1
  2332                           indf2	equ	0xFDF
  2333                           postinc2	equ	0xFDE
  2334                           postdec2	equ	0xFDD
  2335                           fsr2h	equ	0xFDA
  2336                           fsr2l	equ	0xFD9
  2337                           status	equ	0xFD8
  2338                           
  2339 ;; *************** function _Setup *****************
  2340 ;; Defined at:
  2341 ;;		line 67 in file "main.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    3
  2362 ;; This function calls:
  2363 ;;		_Write_RTC
  2364 ;;		_lcd_comand
  2365 ;;		_lcd_init
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text11
  2372  001C00                     __ptext11:
  2373                           	opt stack 0
  2374  001C00                     _Setup:
  2375                           	opt stack 27
  2376                           
  2377                           ;main.c: 69: OSCTUNEbits.INTSRC=1;
  2378                           
  2379                           ;incstack = 0
  2380  001C00  8E9B               	bsf	3995,7,c	;volatile
  2381                           
  2382                           ;main.c: 70: OSCTUNEbits.PLLEN=0;
  2383  001C02  9C9B               	bcf	3995,6,c	;volatile
  2384                           
  2385                           ;main.c: 71: OSCCONbits.IRCF0=1;
  2386  001C04  88D3               	bsf	4051,4,c	;volatile
  2387                           
  2388                           ;main.c: 72: OSCCONbits.IRCF1=1;
  2389  001C06  8AD3               	bsf	4051,5,c	;volatile
  2390                           
  2391                           ;main.c: 73: OSCCONbits.IRCF2=1;
  2392  001C08  8CD3               	bsf	4051,6,c	;volatile
  2393                           
  2394                           ;main.c: 74: OSCCONbits.SCS0=0;
  2395  001C0A  90D3               	bcf	4051,0,c	;volatile
  2396                           
  2397                           ;main.c: 75: OSCCONbits.SCS1=0;
  2398  001C0C  92D3               	bcf	4051,1,c	;volatile
  2399                           
  2400                           ;main.c: 76: TRISA = 0b11111111;
  2401  001C0E  6892               	setf	3986,c	;volatile
  2402                           
  2403                           ;main.c: 77: TRISB = 0;
  2404  001C10  0E00               	movlw	0
  2405  001C12  6E93               	movwf	3987,c	;volatile
  2406                           
  2407                           ;main.c: 78: TRISC = 0b00000111;
  2408  001C14  0E07               	movlw	7
  2409  001C16  6E94               	movwf	3988,c	;volatile
  2410                           
  2411                           ;main.c: 82: ANCON0=0b11111111;
  2412  001C18  010F               	movlb	15	; () banked
  2413  001C1A  6948               	setf	72,b	;volatile
  2414                           
  2415                           ;main.c: 83: ANCON0=0b10010111;
  2416  001C1C  0E97               	movlw	151
  2417  001C1E  010F               	movlb	15	; () banked
  2418  001C20  6F48               	movwf	72,b	;volatile
  2419                           
  2420                           ;main.c: 84: ADCON0=0b00101101;
  2421  001C22  0E2D               	movlw	45
  2422  001C24  6EC2               	movwf	4034,c	;volatile
  2423                           
  2424                           ;main.c: 85: ADCON1=0b00010000;
  2425  001C26  0E10               	movlw	16
  2426  001C28  6EC1               	movwf	4033,c	;volatile
  2427                           
  2428                           ; BSR set to: 15
  2429                           ;main.c: 86: RTCCFGbits.RTCEN=1;
  2430  001C2A  010F               	movlb	15	; () banked
  2431  001C2C  8F3F               	bsf	63,7,b	;volatile
  2432                           
  2433                           ; BSR set to: 15
  2434                           ;main.c: 87: RTCCFGbits.RTCWREN=1;
  2435  001C2E  010F               	movlb	15	; () banked
  2436  001C30  8B3F               	bsf	63,5,b	;volatile
  2437                           
  2438                           ; BSR set to: 15
  2439                           ;main.c: 88: T1CONbits.T1OSCEN=1;
  2440  001C32  86CD               	bsf	4045,3,c	;volatile
  2441                           
  2442                           ; BSR set to: 15
  2443                           ;main.c: 89: Write_RTC();
  2444  001C34  ECD0  F008         	call	_Write_RTC	;wreg free
  2445                           
  2446                           ;main.c: 90: lcd_init();
  2447  001C38  ECAA  F00C         	call	_lcd_init	;wreg free
  2448                           
  2449                           ;main.c: 91: lcd_comand(0b00001111);
  2450  001C3C  0E0F               	movlw	15
  2451  001C3E  ECBB  F00E         	call	_lcd_comand
  2452                           
  2453                           ;main.c: 92: LATBbits.LATB1 = 0;;
  2454  001C42  928A               	bcf	3978,1,c	;volatile
  2455                           
  2456                           ;main.c: 93: LATBbits.LATB0 = 0;;
  2457  001C44  908A               	bcf	3978,0,c	;volatile
  2458  001C46  0012               	return		;funcret
  2459  001C48                     __end_of_Setup:
  2460                           	opt stack 0
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           prodh	equ	0xFF4
  2466                           prodl	equ	0xFF3
  2467                           indf0	equ	0xFEF
  2468                           postinc0	equ	0xFEE
  2469                           fsr0h	equ	0xFEA
  2470                           fsr0l	equ	0xFE9
  2471                           wreg	equ	0xFE8
  2472                           postdec1	equ	0xFE5
  2473                           fsr1l	equ	0xFE1
  2474                           indf2	equ	0xFDF
  2475                           postinc2	equ	0xFDE
  2476                           postdec2	equ	0xFDD
  2477                           fsr2h	equ	0xFDA
  2478                           fsr2l	equ	0xFD9
  2479                           status	equ	0xFD8
  2480                           
  2481 ;; *************** function _lcd_init *****************
  2482 ;; Defined at:
  2483 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  i               1    4[COMRAM] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;		None               void
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2501 ;;Total ram usage:        1 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    2
  2504 ;; This function calls:
  2505 ;;		_Delay1KTCYx
  2506 ;;		_lcd_send_byte
  2507 ;;		_lcd_send_nibble
  2508 ;; This function is called by:
  2509 ;;		_Setup
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text12
  2514  001954                     __ptext12:
  2515                           	opt stack 0
  2516  001954                     _lcd_init:
  2517                           	opt stack 27
  2518                           
  2519                           ;unmc_lcd_216.c: 120: int8 i;
  2520                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2521                           
  2522                           ;incstack = 0
  2523  001954  9693               	bcf	3987,3,c	;volatile
  2524                           
  2525                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2526  001956  9493               	bcf	3987,2,c	;volatile
  2527                           
  2528                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2529  001958  968A               	bcf	3978,3,c	;volatile
  2530                           
  2531                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2532  00195A  948A               	bcf	3978,2,c	;volatile
  2533                           
  2534                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2535  00195C  9893               	bcf	3987,4,c	;volatile
  2536                           
  2537                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2538  00195E  9A93               	bcf	3987,5,c	;volatile
  2539                           
  2540                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2541  001960  9C93               	bcf	3987,6,c	;volatile
  2542                           
  2543                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2544  001962  9E93               	bcf	3987,7,c	;volatile
  2545                           
  2546                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2547  001964  0E0A               	movlw	10
  2548  001966  ECA0  F00E         	call	_Delay1KTCYx
  2549                           
  2550                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2551  00196A  0E0A               	movlw	10
  2552  00196C  ECA0  F00E         	call	_Delay1KTCYx
  2553                           
  2554                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2555  001970  0E0A               	movlw	10
  2556  001972  ECA0  F00E         	call	_Delay1KTCYx
  2557                           
  2558                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2559  001976  0E00               	movlw	0
  2560  001978  6E05               	movwf	lcd_init@i,c
  2561  00197A                     l2214:
  2562  00197A  0E02               	movlw	2
  2563  00197C  6405               	cpfsgt	lcd_init@i,c
  2564  00197E  D001               	goto	l2218
  2565  001980  D008               	goto	l2224
  2566  001982                     l2218:
  2567                           
  2568                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2569  001982  0E03               	movlw	3
  2570  001984  ECEA  F00C         	call	_lcd_send_nibble
  2571                           
  2572                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2573  001988  0E0A               	movlw	10
  2574  00198A  ECA0  F00E         	call	_Delay1KTCYx
  2575  00198E  2A05               	incf	lcd_init@i,f,c
  2576  001990  D7F4               	goto	l2214
  2577  001992                     l2224:
  2578                           
  2579                           ;unmc_lcd_216.c: 146: }
  2580                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2581  001992  0E02               	movlw	2
  2582  001994  ECEA  F00C         	call	_lcd_send_nibble
  2583                           
  2584                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2585  001998  0E00               	movlw	0
  2586  00199A  6E05               	movwf	lcd_init@i,c
  2587  00199C  0E03               	movlw	3
  2588  00199E  6405               	cpfsgt	lcd_init@i,c
  2589  0019A0  D002               	goto	l2232
  2590  0019A2  0012               	return	
  2591  0019A4  0012               	return	
  2592  0019A6                     l2232:
  2593                           
  2594                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2595  0019A6  5005               	movf	lcd_init@i,w,c
  2596  0019A8  0D01               	mullw	1
  2597  0019AA  0E0B               	movlw	low _LCD_INIT_STRING
  2598  0019AC  24F3               	addwf	prodl,w,c
  2599  0019AE  6EF6               	movwf	tblptrl,c
  2600  0019B0  0E0F               	movlw	high _LCD_INIT_STRING
  2601  0019B2  20F4               	addwfc	prodh,w,c
  2602  0019B4  6EF7               	movwf	tblptrh,c
  2603  0019B6                     	if	0	;There are less than 3 active tblptr bytes
  2604  0019B6                     	endif
  2605  0019B6  0008               	tblrd		*
  2606  0019B8  CFF5 F003          	movff	tablat,lcd_send_byte@n
  2607  0019BC  0E00               	movlw	0
  2608  0019BE  EC46  F00E         	call	_lcd_send_byte
  2609                           
  2610                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2611  0019C2  0E0A               	movlw	10
  2612  0019C4  ECA0  F00E         	call	_Delay1KTCYx
  2613  0019C8  2A05               	incf	lcd_init@i,f,c
  2614  0019CA  0E03               	movlw	3
  2615  0019CC  6405               	cpfsgt	lcd_init@i,c
  2616  0019CE  D7EB               	goto	l2232
  2617  0019D0  0012               	return	
  2618  0019D2  0012               	return		;funcret
  2619  0019D4                     __end_of_lcd_init:
  2620                           	opt stack 0
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           prodh	equ	0xFF4
  2626                           prodl	equ	0xFF3
  2627                           indf0	equ	0xFEF
  2628                           postinc0	equ	0xFEE
  2629                           fsr0h	equ	0xFEA
  2630                           fsr0l	equ	0xFE9
  2631                           wreg	equ	0xFE8
  2632                           postdec1	equ	0xFE5
  2633                           fsr1l	equ	0xFE1
  2634                           indf2	equ	0xFDF
  2635                           postinc2	equ	0xFDE
  2636                           postdec2	equ	0xFDD
  2637                           fsr2h	equ	0xFDA
  2638                           fsr2l	equ	0xFD9
  2639                           status	equ	0xFD8
  2640                           
  2641 ;; *************** function _Delay1KTCYx *****************
  2642 ;; Defined at:
  2643 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  unit            1    wreg     unsigned char 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  unit            1    0[COMRAM] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;		None               void
  2650 ;; Registers used:
  2651 ;;		wreg
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2661 ;;Total ram usage:        1 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_lcd_init
  2667 ;;		_DelayPORXLCD
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text13
  2672  001D40                     __ptext13:
  2673                           	opt stack 0
  2674  001D40                     _Delay1KTCYx:
  2675                           	opt stack 28
  2676                           
  2677                           ;incstack = 0
  2678                           ;Delay1KTCYx@unit stored from wreg
  2679  001D40  6E01               	movwf	Delay1KTCYx@unit,c
  2680  001D42  0EFA               	movlw	250
  2681  001D44                     u1847:
  2682  001D44  F000               	nop	
  2683  001D46  2EE8               	decfsz	wreg,f,c
  2684  001D48  D7FD               	goto	u1847
  2685  001D4A  2E01               	decfsz	Delay1KTCYx@unit,f,c
  2686  001D4C  D7FA               	goto	l1036
  2687  001D4E  0012               	return	
  2688  001D50  0012               	return		;funcret
  2689  001D52                     __end_of_Delay1KTCYx:
  2690                           	opt stack 0
  2691                           tblptru	equ	0xFF8
  2692                           tblptrh	equ	0xFF7
  2693                           tblptrl	equ	0xFF6
  2694                           tablat	equ	0xFF5
  2695                           prodh	equ	0xFF4
  2696                           prodl	equ	0xFF3
  2697                           indf0	equ	0xFEF
  2698                           postinc0	equ	0xFEE
  2699                           fsr0h	equ	0xFEA
  2700                           fsr0l	equ	0xFE9
  2701                           wreg	equ	0xFE8
  2702                           postdec1	equ	0xFE5
  2703                           fsr1l	equ	0xFE1
  2704                           indf2	equ	0xFDF
  2705                           postinc2	equ	0xFDE
  2706                           postdec2	equ	0xFDD
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _lcd_comand *****************
  2712 ;; Defined at:
  2713 ;;		line 189 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  d               1    wreg     unsigned char 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  d               1    4[COMRAM] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;		None               void
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2731 ;;Total ram usage:        1 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    2
  2734 ;; This function calls:
  2735 ;;		_lcd_send_byte
  2736 ;; This function is called by:
  2737 ;;		_caratula
  2738 ;;		_Setup
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text14
  2743  001D76                     __ptext14:
  2744                           	opt stack 0
  2745  001D76                     _lcd_comand:
  2746                           	opt stack 27
  2747                           
  2748                           ;incstack = 0
  2749                           ;lcd_comand@d stored from wreg
  2750  001D76  6E05               	movwf	lcd_comand@d,c
  2751                           
  2752                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  2753  001D78  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  2754  001D7C  0E00               	movlw	0
  2755  001D7E  EC46  F00E         	call	_lcd_send_byte
  2756  001D82  0012               	return		;funcret
  2757  001D84                     __end_of_lcd_comand:
  2758                           	opt stack 0
  2759                           tblptru	equ	0xFF8
  2760                           tblptrh	equ	0xFF7
  2761                           tblptrl	equ	0xFF6
  2762                           tablat	equ	0xFF5
  2763                           prodh	equ	0xFF4
  2764                           prodl	equ	0xFF3
  2765                           indf0	equ	0xFEF
  2766                           postinc0	equ	0xFEE
  2767                           fsr0h	equ	0xFEA
  2768                           fsr0l	equ	0xFE9
  2769                           wreg	equ	0xFE8
  2770                           postdec1	equ	0xFE5
  2771                           fsr1l	equ	0xFE1
  2772                           indf2	equ	0xFDF
  2773                           postinc2	equ	0xFDE
  2774                           postdec2	equ	0xFDD
  2775                           fsr2h	equ	0xFDA
  2776                           fsr2l	equ	0xFD9
  2777                           status	equ	0xFD8
  2778                           
  2779 ;; *************** function _lcd_send_byte *****************
  2780 ;; Defined at:
  2781 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  address         1    wreg     unsigned char 
  2784 ;;  n               1    2[COMRAM] unsigned char 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  address         1    3[COMRAM] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;		None               void
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2796 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2799 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;Total ram usage:        2 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    1
  2803 ;; This function calls:
  2804 ;;		_Delay100TCYx
  2805 ;;		_lcd_send_nibble
  2806 ;; This function is called by:
  2807 ;;		_lcd_init
  2808 ;;		_lcd_gotoxy
  2809 ;;		_lcd_putc
  2810 ;;		_lcd_comand
  2811 ;;		_lcd_setcursor_vb
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text15
  2816  001C8C                     __ptext15:
  2817                           	opt stack 0
  2818  001C8C                     _lcd_send_byte:
  2819                           	opt stack 28
  2820                           
  2821                           ;incstack = 0
  2822                           ;lcd_send_byte@address stored from wreg
  2823  001C8C  6E04               	movwf	lcd_send_byte@address,c
  2824                           
  2825                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  2826  001C8E  968A               	bcf	3978,3,c	;volatile
  2827                           
  2828                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  2829  001C90  0E02               	movlw	2
  2830  001C92  ECA9  F00E         	call	_Delay100TCYx
  2831                           
  2832                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  2833  001C96  9893               	bcf	3987,4,c	;volatile
  2834                           
  2835                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  2836  001C98  9A93               	bcf	3987,5,c	;volatile
  2837                           
  2838                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  2839  001C9A  9C93               	bcf	3987,6,c	;volatile
  2840                           
  2841                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  2842  001C9C  9E93               	bcf	3987,7,c	;volatile
  2843                           
  2844                           ;unmc_lcd_216.c: 101: if(address)
  2845  001C9E  5004               	movf	lcd_send_byte@address,w,c
  2846  001CA0  B4D8               	btfsc	status,2,c
  2847  001CA2  D002               	goto	l184
  2848                           
  2849                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  2850  001CA4  868A               	bsf	3978,3,c	;volatile
  2851  001CA6  D001               	goto	l185
  2852  001CA8                     l184:
  2853                           
  2854                           ;unmc_lcd_216.c: 103: else
  2855                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  2856  001CA8  968A               	bcf	3978,3,c	;volatile
  2857  001CAA                     l185:
  2858                           
  2859                           ;unmc_lcd_216.c: 106: __nop();
  2860  001CAA  F000               	nop	
  2861                           
  2862                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  2863  001CAC  3803               	swapf	lcd_send_byte@n,w,c
  2864  001CAE  0B0F               	andlw	15
  2865  001CB0  ECEA  F00C         	call	_lcd_send_nibble
  2866                           
  2867                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  2868  001CB4  5003               	movf	lcd_send_byte@n,w,c
  2869  001CB6  0B0F               	andlw	15
  2870  001CB8  ECEA  F00C         	call	_lcd_send_nibble
  2871  001CBC  0012               	return		;funcret
  2872  001CBE                     __end_of_lcd_send_byte:
  2873                           	opt stack 0
  2874                           tblptru	equ	0xFF8
  2875                           tblptrh	equ	0xFF7
  2876                           tblptrl	equ	0xFF6
  2877                           tablat	equ	0xFF5
  2878                           prodh	equ	0xFF4
  2879                           prodl	equ	0xFF3
  2880                           indf0	equ	0xFEF
  2881                           postinc0	equ	0xFEE
  2882                           fsr0h	equ	0xFEA
  2883                           fsr0l	equ	0xFE9
  2884                           wreg	equ	0xFE8
  2885                           postdec1	equ	0xFE5
  2886                           fsr1l	equ	0xFE1
  2887                           indf2	equ	0xFDF
  2888                           postinc2	equ	0xFDE
  2889                           postdec2	equ	0xFDD
  2890                           fsr2h	equ	0xFDA
  2891                           fsr2l	equ	0xFD9
  2892                           status	equ	0xFD8
  2893                           
  2894 ;; *************** function _lcd_send_nibble *****************
  2895 ;; Defined at:
  2896 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  nibble          1    wreg     unsigned char 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  nibble          1    1[COMRAM] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;		None               void
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;Total ram usage:        2 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_lcd_send_byte
  2920 ;;		_lcd_init
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text16
  2925  0019D4                     __ptext16:
  2926                           	opt stack 0
  2927  0019D4                     _lcd_send_nibble:
  2928                           	opt stack 28
  2929                           
  2930                           ;incstack = 0
  2931                           ;lcd_send_nibble@nibble stored from wreg
  2932  0019D4  6E02               	movwf	lcd_send_nibble@nibble,c
  2933                           
  2934                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  2935  0019D6  A002               	btfss	lcd_send_nibble@nibble,0,c
  2936  0019D8  D003               	goto	u910
  2937  0019DA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2938  0019DC  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2939  0019DE  D001               	goto	u928
  2940  0019E0                     u910:
  2941  0019E0  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2942  0019E2                     u928:
  2943  0019E2  3A01               	swapf	??_lcd_send_nibble,f,c
  2944  0019E4  508A               	movf	3978,w,c	;volatile
  2945  0019E6  1801               	xorwf	??_lcd_send_nibble,w,c
  2946  0019E8  0BEF               	andlw	-17
  2947  0019EA  1801               	xorwf	??_lcd_send_nibble,w,c
  2948  0019EC  6E8A               	movwf	3978,c	;volatile
  2949                           
  2950                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  2951  0019EE  A202               	btfss	lcd_send_nibble@nibble,1,c
  2952  0019F0  D003               	goto	u930
  2953  0019F2  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2954  0019F4  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2955  0019F6  D001               	goto	u948
  2956  0019F8                     u930:
  2957  0019F8  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2958  0019FA                     u948:
  2959  0019FA  3A01               	swapf	??_lcd_send_nibble,f,c
  2960  0019FC  4601               	rlncf	??_lcd_send_nibble,f,c
  2961  0019FE  508A               	movf	3978,w,c	;volatile
  2962  001A00  1801               	xorwf	??_lcd_send_nibble,w,c
  2963  001A02  0BDF               	andlw	-33
  2964  001A04  1801               	xorwf	??_lcd_send_nibble,w,c
  2965  001A06  6E8A               	movwf	3978,c	;volatile
  2966                           
  2967                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  2968  001A08  A402               	btfss	lcd_send_nibble@nibble,2,c
  2969  001A0A  D003               	goto	u950
  2970  001A0C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2971  001A0E  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2972  001A10  D001               	goto	u968
  2973  001A12                     u950:
  2974  001A12  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2975  001A14                     u968:
  2976  001A14  3A01               	swapf	??_lcd_send_nibble,f,c
  2977  001A16  4601               	rlncf	??_lcd_send_nibble,f,c
  2978  001A18  4601               	rlncf	??_lcd_send_nibble,f,c
  2979  001A1A  508A               	movf	3978,w,c	;volatile
  2980  001A1C  1801               	xorwf	??_lcd_send_nibble,w,c
  2981  001A1E  0BBF               	andlw	-65
  2982  001A20  1801               	xorwf	??_lcd_send_nibble,w,c
  2983  001A22  6E8A               	movwf	3978,c	;volatile
  2984                           
  2985                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  2986  001A24  A602               	btfss	lcd_send_nibble@nibble,3,c
  2987  001A26  D003               	goto	u970
  2988  001A28  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2989  001A2A  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2990  001A2C  D001               	goto	u988
  2991  001A2E                     u970:
  2992  001A2E  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2993  001A30                     u988:
  2994  001A30  3201               	rrcf	??_lcd_send_nibble,f,c
  2995  001A32  3201               	rrcf	??_lcd_send_nibble,f,c
  2996  001A34  508A               	movf	3978,w,c	;volatile
  2997  001A36  1801               	xorwf	??_lcd_send_nibble,w,c
  2998  001A38  0B7F               	andlw	-129
  2999  001A3A  1801               	xorwf	??_lcd_send_nibble,w,c
  3000  001A3C  6E8A               	movwf	3978,c	;volatile
  3001                           
  3002                           ;unmc_lcd_216.c: 32: __nop();
  3003  001A3E  F000               	nop	
  3004                           
  3005                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  3006  001A40  848A               	bsf	3978,2,c	;volatile
  3007                           
  3008                           ;unmc_lcd_216.c: 34: __nop();__nop();
  3009  001A42  F000               	nop	
  3010  001A44  F000               	nop	
  3011                           
  3012                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  3013  001A46  948A               	bcf	3978,2,c	;volatile
  3014  001A48  0012               	return		;funcret
  3015  001A4A                     __end_of_lcd_send_nibble:
  3016                           	opt stack 0
  3017                           tblptru	equ	0xFF8
  3018                           tblptrh	equ	0xFF7
  3019                           tblptrl	equ	0xFF6
  3020                           tablat	equ	0xFF5
  3021                           prodh	equ	0xFF4
  3022                           prodl	equ	0xFF3
  3023                           indf0	equ	0xFEF
  3024                           postinc0	equ	0xFEE
  3025                           fsr0h	equ	0xFEA
  3026                           fsr0l	equ	0xFE9
  3027                           wreg	equ	0xFE8
  3028                           postdec1	equ	0xFE5
  3029                           fsr1l	equ	0xFE1
  3030                           indf2	equ	0xFDF
  3031                           postinc2	equ	0xFDE
  3032                           postdec2	equ	0xFDD
  3033                           fsr2h	equ	0xFDA
  3034                           fsr2l	equ	0xFD9
  3035                           status	equ	0xFD8
  3036                           
  3037 ;; *************** function _Delay100TCYx *****************
  3038 ;; Defined at:
  3039 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  unit            1    wreg     unsigned char 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  unit            1    0[COMRAM] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;		None               void
  3046 ;; Registers used:
  3047 ;;		wreg
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;Total ram usage:        1 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_lcd_send_byte
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text17
  3067  001D52                     __ptext17:
  3068                           	opt stack 0
  3069  001D52                     _Delay100TCYx:
  3070                           	opt stack 28
  3071                           
  3072                           ;incstack = 0
  3073                           ;Delay100TCYx@unit stored from wreg
  3074  001D52  6E01               	movwf	Delay100TCYx@unit,c
  3075  001D54  0E21               	movlw	33
  3076  001D56                     u1857:
  3077  001D56  2EE8               	decfsz	wreg,f,c
  3078  001D58  D7FE               	goto	u1857
  3079  001D5A  F000               	nop	
  3080  001D5C  2E01               	decfsz	Delay100TCYx@unit,f,c
  3081  001D5E  D7FA               	goto	l1718
  3082  001D60  0012               	return	
  3083  001D62  0012               	return		;funcret
  3084  001D64                     __end_of_Delay100TCYx:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           indf0	equ	0xFEF
  3093                           postinc0	equ	0xFEE
  3094                           fsr0h	equ	0xFEA
  3095                           fsr0l	equ	0xFE9
  3096                           wreg	equ	0xFE8
  3097                           postdec1	equ	0xFE5
  3098                           fsr1l	equ	0xFE1
  3099                           indf2	equ	0xFDF
  3100                           postinc2	equ	0xFDE
  3101                           postdec2	equ	0xFDD
  3102                           fsr2h	equ	0xFDA
  3103                           fsr2l	equ	0xFD9
  3104                           status	equ	0xFD8
  3105                           
  3106 ;; *************** function _Write_RTC *****************
  3107 ;; Defined at:
  3108 ;;		line 74 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;		None               void
  3115 ;; Registers used:
  3116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;Total ram usage:        0 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    2
  3129 ;; This function calls:
  3130 ;;		_RtccWrOn
  3131 ;;		_RtccWriteDate
  3132 ;;		_RtccWriteTime
  3133 ;;		___awdiv
  3134 ;; This function is called by:
  3135 ;;		_Setup
  3136 ;;		_main
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text18
  3141  0011A0                     __ptext18:
  3142                           	opt stack 0
  3143  0011A0                     _Write_RTC:
  3144                           	opt stack 28
  3145                           
  3146                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  3147                           
  3148                           ;incstack = 0
  3149  0011A0  ECB2  F00E         	call	_RtccWrOn	;wreg free
  3150                           
  3151                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  3152  0011A4  80A3               	bsf	4003,0,c	;volatile
  3153                           
  3154                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  3155  0011A6  C037  F001         	movff	_segundo,___awdiv@dividend
  3156  0011AA  C038  F002         	movff	_segundo+1,___awdiv@dividend+1
  3157  0011AE  0E00               	movlw	0
  3158  0011B0  6E04               	movwf	___awdiv@divisor+1,c
  3159  0011B2  0E0A               	movlw	10
  3160  0011B4  6E03               	movwf	___awdiv@divisor,c
  3161  0011B6  EC18  F00C         	call	___awdiv	;wreg free
  3162  0011BA  5001               	movf	?___awdiv,w,c
  3163  0011BC  6E4C               	movwf	_segundo_d,c
  3164                           
  3165                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  3166  0011BE  504C               	movf	_segundo_d,w,c
  3167  0011C0  0D0A               	mullw	10
  3168  0011C2  50F3               	movf	prodl,w,c
  3169  0011C4  0800               	sublw	0
  3170  0011C6  2437               	addwf	_segundo,w,c
  3171  0011C8  6E4D               	movwf	_segundo_u,c
  3172                           
  3173                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  3174  0011CA  504C               	movf	_segundo_d,w,c
  3175  0011CC  0D10               	mullw	16
  3176  0011CE  50F3               	movf	prodl,w,c
  3177  0011D0  244D               	addwf	_segundo_u,w,c
  3178  0011D2  6E3E               	movwf	_RtccTime+1,c
  3179                           
  3180                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  3181  0011D4  C058  F001         	movff	_minuto,___awdiv@dividend
  3182  0011D8  C059  F002         	movff	_minuto+1,___awdiv@dividend+1
  3183  0011DC  0E00               	movlw	0
  3184  0011DE  6E04               	movwf	___awdiv@divisor+1,c
  3185  0011E0  0E0A               	movlw	10
  3186  0011E2  6E03               	movwf	___awdiv@divisor,c
  3187  0011E4  EC18  F00C         	call	___awdiv	;wreg free
  3188  0011E8  5001               	movf	?___awdiv,w,c
  3189  0011EA  6E4A               	movwf	_minuto_d,c
  3190                           
  3191                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  3192  0011EC  504A               	movf	_minuto_d,w,c
  3193  0011EE  0D0A               	mullw	10
  3194  0011F0  50F3               	movf	prodl,w,c
  3195  0011F2  0800               	sublw	0
  3196  0011F4  2458               	addwf	_minuto,w,c
  3197  0011F6  6E4B               	movwf	_minuto_u,c
  3198                           
  3199                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  3200  0011F8  504A               	movf	_minuto_d,w,c
  3201  0011FA  0D10               	mullw	16
  3202  0011FC  50F3               	movf	prodl,w,c
  3203  0011FE  244B               	addwf	_minuto_u,w,c
  3204  001200  6E3F               	movwf	_RtccTime+2,c
  3205                           
  3206                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  3207  001202  C054  F001         	movff	_hora,___awdiv@dividend
  3208  001206  C055  F002         	movff	_hora+1,___awdiv@dividend+1
  3209  00120A  0E00               	movlw	0
  3210  00120C  6E04               	movwf	___awdiv@divisor+1,c
  3211  00120E  0E0A               	movlw	10
  3212  001210  6E03               	movwf	___awdiv@divisor,c
  3213  001212  EC18  F00C         	call	___awdiv	;wreg free
  3214  001216  5001               	movf	?___awdiv,w,c
  3215  001218  6E46               	movwf	_hora_d,c
  3216                           
  3217                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  3218  00121A  5046               	movf	_hora_d,w,c
  3219  00121C  0D0A               	mullw	10
  3220  00121E  50F3               	movf	prodl,w,c
  3221  001220  0800               	sublw	0
  3222  001222  2454               	addwf	_hora,w,c
  3223  001224  6E47               	movwf	_hora_u,c
  3224                           
  3225                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  3226  001226  5046               	movf	_hora_d,w,c
  3227  001228  0D10               	mullw	16
  3228  00122A  50F3               	movf	prodl,w,c
  3229  00122C  2447               	addwf	_hora_u,w,c
  3230  00122E  6E40               	movwf	_RtccTime+3,c
  3231                           
  3232                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  3233  001230  C04E  F001         	movff	_anio,___awdiv@dividend
  3234  001234  C04F  F002         	movff	_anio+1,___awdiv@dividend+1
  3235  001238  0E00               	movlw	0
  3236  00123A  6E04               	movwf	___awdiv@divisor+1,c
  3237  00123C  0E0A               	movlw	10
  3238  00123E  6E03               	movwf	___awdiv@divisor,c
  3239  001240  EC18  F00C         	call	___awdiv	;wreg free
  3240  001244  5001               	movf	?___awdiv,w,c
  3241  001246  6E41               	movwf	_anio_d,c
  3242                           
  3243                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  3244  001248  5041               	movf	_anio_d,w,c
  3245  00124A  0D0A               	mullw	10
  3246  00124C  50F3               	movf	prodl,w,c
  3247  00124E  0800               	sublw	0
  3248  001250  244E               	addwf	_anio,w,c
  3249  001252  6E42               	movwf	_anio_u,c
  3250                           
  3251                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  3252  001254  5041               	movf	_anio_d,w,c
  3253  001256  0D10               	mullw	16
  3254  001258  50F3               	movf	prodl,w,c
  3255  00125A  2442               	addwf	_anio_u,w,c
  3256  00125C  6E3C               	movwf	_RtccDate+3,c
  3257                           
  3258                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  3259  00125E  C056  F001         	movff	_mes,___awdiv@dividend
  3260  001262  C057  F002         	movff	_mes+1,___awdiv@dividend+1
  3261  001266  0E00               	movlw	0
  3262  001268  6E04               	movwf	___awdiv@divisor+1,c
  3263  00126A  0E0A               	movlw	10
  3264  00126C  6E03               	movwf	___awdiv@divisor,c
  3265  00126E  EC18  F00C         	call	___awdiv	;wreg free
  3266  001272  5001               	movf	?___awdiv,w,c
  3267  001274  6E48               	movwf	_mes_d,c
  3268                           
  3269                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  3270  001276  5048               	movf	_mes_d,w,c
  3271  001278  0D0A               	mullw	10
  3272  00127A  50F3               	movf	prodl,w,c
  3273  00127C  0800               	sublw	0
  3274  00127E  2456               	addwf	_mes,w,c
  3275  001280  6E49               	movwf	_mes_u,c
  3276                           
  3277                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  3278  001282  5048               	movf	_mes_d,w,c
  3279  001284  0D10               	mullw	16
  3280  001286  50F3               	movf	prodl,w,c
  3281  001288  2449               	addwf	_mes_u,w,c
  3282  00128A  6E3B               	movwf	_RtccDate+2,c
  3283                           
  3284                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  3285  00128C  C050  F001         	movff	_dia,___awdiv@dividend
  3286  001290  C051  F002         	movff	_dia+1,___awdiv@dividend+1
  3287  001294  0E00               	movlw	0
  3288  001296  6E04               	movwf	___awdiv@divisor+1,c
  3289  001298  0E0A               	movlw	10
  3290  00129A  6E03               	movwf	___awdiv@divisor,c
  3291  00129C  EC18  F00C         	call	___awdiv	;wreg free
  3292  0012A0  5001               	movf	?___awdiv,w,c
  3293  0012A2  6E44               	movwf	_fecha_d,c
  3294                           
  3295                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  3296  0012A4  5044               	movf	_fecha_d,w,c
  3297  0012A6  0D0A               	mullw	10
  3298  0012A8  50F3               	movf	prodl,w,c
  3299  0012AA  0800               	sublw	0
  3300  0012AC  2450               	addwf	_dia,w,c
  3301  0012AE  6E45               	movwf	_fecha_u,c
  3302                           
  3303                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  3304  0012B0  5044               	movf	_fecha_d,w,c
  3305  0012B2  0D10               	mullw	16
  3306  0012B4  50F3               	movf	prodl,w,c
  3307  0012B6  2445               	addwf	_fecha_u,w,c
  3308  0012B8  6E3A               	movwf	_RtccDate+1,c
  3309                           
  3310                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  3311  0012BA  C052  F043         	movff	_diasem,_dia_semana
  3312                           
  3313                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  3314  0012BE  C052  F039         	movff	_diasem,_RtccDate
  3315                           
  3316                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  3317  0012C2  0E3D               	movlw	low _RtccTime
  3318  0012C4  6E01               	movwf	RtccWriteTime@pTm,c
  3319  0012C6  0E00               	movlw	high _RtccTime
  3320  0012C8  6E02               	movwf	RtccWriteTime@pTm+1,c
  3321  0012CA  0E01               	movlw	1
  3322  0012CC  6E03               	movwf	RtccWriteTime@di,c
  3323  0012CE  ECA1  F00A         	call	_RtccWriteTime	;wreg free
  3324                           
  3325                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  3326  0012D2  0E39               	movlw	low _RtccDate
  3327  0012D4  6E01               	movwf	RtccWriteDate@pDt,c
  3328  0012D6  0E00               	movlw	high _RtccDate
  3329  0012D8  6E02               	movwf	RtccWriteDate@pDt+1,c
  3330  0012DA  0E01               	movlw	1
  3331  0012DC  6E03               	movwf	RtccWriteDate@di,c
  3332  0012DE  EC74  F009         	call	_RtccWriteDate	;wreg free
  3333                           
  3334                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  3335  0012E2  010F               	movlb	15	; () banked
  3336  0012E4  8F3F               	bsf	63,7,b	;volatile
  3337                           
  3338                           ; BSR set to: 15
  3339  0012E6  0012               	return		;funcret
  3340  0012E8                     __end_of_Write_RTC:
  3341                           	opt stack 0
  3342                           tblptru	equ	0xFF8
  3343                           tblptrh	equ	0xFF7
  3344                           tblptrl	equ	0xFF6
  3345                           tablat	equ	0xFF5
  3346                           prodh	equ	0xFF4
  3347                           prodl	equ	0xFF3
  3348                           indf0	equ	0xFEF
  3349                           postinc0	equ	0xFEE
  3350                           fsr0h	equ	0xFEA
  3351                           fsr0l	equ	0xFE9
  3352                           wreg	equ	0xFE8
  3353                           postdec1	equ	0xFE5
  3354                           fsr1l	equ	0xFE1
  3355                           indf2	equ	0xFDF
  3356                           postinc2	equ	0xFDE
  3357                           postdec2	equ	0xFDD
  3358                           fsr2h	equ	0xFDA
  3359                           fsr2l	equ	0xFD9
  3360                           status	equ	0xFD8
  3361                           
  3362 ;; *************** function ___awdiv *****************
  3363 ;; Defined at:
  3364 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  dividend        2    0[COMRAM] int 
  3367 ;;  divisor         2    2[COMRAM] int 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  quotient        2    6[COMRAM] int 
  3370 ;;  sign            1    5[COMRAM] unsigned char 
  3371 ;;  counter         1    4[COMRAM] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  2    0[COMRAM] int 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3382 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3384 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;Total ram usage:        8 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_Write_RTC
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text19
  3395  001830                     __ptext19:
  3396                           	opt stack 0
  3397  001830                     ___awdiv:
  3398                           	opt stack 29
  3399                           
  3400                           ; BSR set to: 15
  3401                           ;incstack = 0
  3402  001830  0E00               	movlw	0
  3403  001832  6E06               	movwf	___awdiv@sign,c
  3404  001834  AE04               	btfss	___awdiv@divisor+1,7,c
  3405  001836  D007               	goto	l1926
  3406  001838  6C03               	negf	___awdiv@divisor,c
  3407  00183A  1E04               	comf	___awdiv@divisor+1,f,c
  3408  00183C  B0D8               	btfsc	status,0,c
  3409  00183E  2A04               	incf	___awdiv@divisor+1,f,c
  3410  001840  0E01               	movlw	1
  3411  001842  6E06               	movwf	___awdiv@sign,c
  3412  001844  D000               	goto	l1926
  3413  001846                     l1926:
  3414  001846  AE02               	btfss	___awdiv@dividend+1,7,c
  3415  001848  D007               	goto	l1932
  3416  00184A  6C01               	negf	___awdiv@dividend,c
  3417  00184C  1E02               	comf	___awdiv@dividend+1,f,c
  3418  00184E  B0D8               	btfsc	status,0,c
  3419  001850  2A02               	incf	___awdiv@dividend+1,f,c
  3420  001852  0E01               	movlw	1
  3421  001854  1A06               	xorwf	___awdiv@sign,f,c
  3422  001856  D000               	goto	l1932
  3423  001858                     l1932:
  3424  001858  0E00               	movlw	0
  3425  00185A  6E08               	movwf	___awdiv@quotient+1,c
  3426  00185C  0E00               	movlw	0
  3427  00185E  6E07               	movwf	___awdiv@quotient,c
  3428  001860  5003               	movf	___awdiv@divisor,w,c
  3429  001862  1004               	iorwf	___awdiv@divisor+1,w,c
  3430  001864  B4D8               	btfsc	status,2,c
  3431  001866  D021               	goto	l1954
  3432  001868  0E01               	movlw	1
  3433  00186A  6E05               	movwf	___awdiv@counter,c
  3434  00186C  D005               	goto	l1940
  3435  00186E                     l1938:
  3436  00186E  90D8               	bcf	status,0,c
  3437  001870  3603               	rlcf	___awdiv@divisor,f,c
  3438  001872  3604               	rlcf	___awdiv@divisor+1,f,c
  3439  001874  2A05               	incf	___awdiv@counter,f,c
  3440  001876  D000               	goto	l1940
  3441  001878                     l1940:
  3442  001878  BE04               	btfsc	___awdiv@divisor+1,7,c
  3443  00187A  D002               	goto	l1942
  3444  00187C  D7F8               	goto	l1938
  3445  00187E  D000               	goto	l1942
  3446  001880                     l1942:
  3447  001880  90D8               	bcf	status,0,c
  3448  001882  3607               	rlcf	___awdiv@quotient,f,c
  3449  001884  3608               	rlcf	___awdiv@quotient+1,f,c
  3450  001886  5003               	movf	___awdiv@divisor,w,c
  3451  001888  5C01               	subwf	___awdiv@dividend,w,c
  3452  00188A  5004               	movf	___awdiv@divisor+1,w,c
  3453  00188C  5802               	subwfb	___awdiv@dividend+1,w,c
  3454  00188E  A0D8               	btfss	status,0,c
  3455  001890  D006               	goto	l1950
  3456  001892  5003               	movf	___awdiv@divisor,w,c
  3457  001894  5E01               	subwf	___awdiv@dividend,f,c
  3458  001896  5004               	movf	___awdiv@divisor+1,w,c
  3459  001898  5A02               	subwfb	___awdiv@dividend+1,f,c
  3460  00189A  8007               	bsf	___awdiv@quotient,0,c
  3461  00189C  D000               	goto	l1950
  3462  00189E                     l1950:
  3463  00189E  90D8               	bcf	status,0,c
  3464  0018A0  3204               	rrcf	___awdiv@divisor+1,f,c
  3465  0018A2  3203               	rrcf	___awdiv@divisor,f,c
  3466  0018A4  2E05               	decfsz	___awdiv@counter,f,c
  3467  0018A6  D7EC               	goto	l1942
  3468  0018A8  D000               	goto	l1954
  3469  0018AA                     l1954:
  3470  0018AA  5006               	movf	___awdiv@sign,w,c
  3471  0018AC  B4D8               	btfsc	status,2,c
  3472  0018AE  D005               	goto	l1958
  3473  0018B0  6C07               	negf	___awdiv@quotient,c
  3474  0018B2  1E08               	comf	___awdiv@quotient+1,f,c
  3475  0018B4  B0D8               	btfsc	status,0,c
  3476  0018B6  2A08               	incf	___awdiv@quotient+1,f,c
  3477  0018B8  D000               	goto	l1958
  3478  0018BA                     l1958:
  3479  0018BA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3480  0018BE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3481  0018C2  0012               	return	
  3482  0018C4  0012               	return		;funcret
  3483  0018C6                     __end_of___awdiv:
  3484                           	opt stack 0
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           indf0	equ	0xFEF
  3492                           postinc0	equ	0xFEE
  3493                           fsr0h	equ	0xFEA
  3494                           fsr0l	equ	0xFE9
  3495                           wreg	equ	0xFE8
  3496                           postdec1	equ	0xFE5
  3497                           fsr1l	equ	0xFE1
  3498                           indf2	equ	0xFDF
  3499                           postinc2	equ	0xFDE
  3500                           postdec2	equ	0xFDD
  3501                           fsr2h	equ	0xFDA
  3502                           fsr2l	equ	0xFD9
  3503                           status	equ	0xFD8
  3504                           
  3505 ;; *************** function _RtccWriteTime *****************
  3506 ;; Defined at:
  3507 ;;		line 34 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  pTm             2    0[COMRAM] PTR const struct .
  3510 ;;		 -> RtccTime(4), 
  3511 ;;  di              1    2[COMRAM] enum E7121
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  tempHourWDay    2    9[COMRAM] struct .
  3514 ;;  tempMinSec      2    7[COMRAM] struct .
  3515 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3516 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3517 ;;  wasOn           1    4[COMRAM] enum E7121
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      enum E7337
  3520 ;; Registers used:
  3521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3527 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3528 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3530 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3531 ;;Total ram usage:       11 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    1
  3534 ;; This function calls:
  3535 ;;		_RtccWrOn
  3536 ;; This function is called by:
  3537 ;;		_Write_RTC
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text20
  3542  001542                     __ptext20:
  3543                           	opt stack 0
  3544  001542                     _RtccWriteTime:
  3545                           	opt stack 28
  3546                           
  3547                           ;incstack = 0
  3548  001542  0E00               	movlw	0
  3549  001544  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3550  001546  EE20 F002          	lfsr	2,2
  3551  00154A  5001               	movf	RtccWriteTime@pTm,w,c
  3552  00154C  26D9               	addwf	fsr2l,f,c
  3553  00154E  5002               	movf	RtccWriteTime@pTm+1,w,c
  3554  001550  22DA               	addwfc	fsr2h,f,c
  3555  001552  0E5A               	movlw	90
  3556  001554  60DF               	cpfslt	indf2,c
  3557  001556  0012               	return	
  3558  001558  EE20 F001          	lfsr	2,1
  3559  00155C  5001               	movf	RtccWriteTime@pTm,w,c
  3560  00155E  26D9               	addwf	fsr2l,f,c
  3561  001560  5002               	movf	RtccWriteTime@pTm+1,w,c
  3562  001562  22DA               	addwfc	fsr2h,f,c
  3563  001564  0E5A               	movlw	90
  3564  001566  60DF               	cpfslt	indf2,c
  3565  001568  0012               	return	
  3566  00156A  EE20 F003          	lfsr	2,3
  3567  00156E  5001               	movf	RtccWriteTime@pTm,w,c
  3568  001570  26D9               	addwf	fsr2l,f,c
  3569  001572  5002               	movf	RtccWriteTime@pTm+1,w,c
  3570  001574  22DA               	addwfc	fsr2h,f,c
  3571  001576  0E24               	movlw	36
  3572  001578  64DF               	cpfsgt	indf2,c
  3573  00157A  D002               	goto	l1758
  3574  00157C  0012               	return	
  3575                           
  3576                           ;	Return value of _RtccWriteTime is never used
  3577  00157E  0012               	return	
  3578  001580                     l1758:
  3579  001580  EE20 F002          	lfsr	2,2
  3580  001584  5001               	movf	RtccWriteTime@pTm,w,c
  3581  001586  26D9               	addwf	fsr2l,f,c
  3582  001588  5002               	movf	RtccWriteTime@pTm+1,w,c
  3583  00158A  22DA               	addwfc	fsr2h,f,c
  3584  00158C  50DF               	movf	indf2,w,c
  3585  00158E  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3586  001590  EE20 F001          	lfsr	2,1
  3587  001594  5001               	movf	RtccWriteTime@pTm,w,c
  3588  001596  26D9               	addwf	fsr2l,f,c
  3589  001598  5002               	movf	RtccWriteTime@pTm+1,w,c
  3590  00159A  22DA               	addwfc	fsr2h,f,c
  3591  00159C  50DF               	movf	indf2,w,c
  3592  00159E  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3593  0015A0  5003               	movf	RtccWriteTime@di,w,c
  3594  0015A2  B4D8               	btfsc	status,2,c
  3595  0015A4  D002               	goto	l1764
  3596  0015A6  9CF2               	bcf	intcon,6,c	;volatile
  3597  0015A8  D000               	goto	l1764
  3598  0015AA                     l1764:
  3599  0015AA  0E00               	movlw	0
  3600  0015AC  BB3F               	btfsc	63,5,b	;volatile
  3601  0015AE  0E01               	movlw	1
  3602  0015B0  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3603  0015B2  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3604  0015B4  A4D8               	btfss	status,2,c
  3605  0015B6  D003               	goto	l1768
  3606  0015B8  ECB2  F00E         	call	_RtccWrOn	;wreg free
  3607  0015BC  D000               	goto	l1768
  3608  0015BE                     l1768:
  3609  0015BE  0E00               	movlw	0
  3610  0015C0  BF3F               	btfsc	63,7,b	;volatile
  3611  0015C2  0E01               	movlw	1
  3612  0015C4  6E05               	movwf	RtccWriteTime@wasOn,c
  3613  0015C6  5005               	movf	RtccWriteTime@wasOn,w,c
  3614  0015C8  B4D8               	btfsc	status,2,c
  3615  0015CA  D007               	goto	l1774
  3616  0015CC  0E00               	movlw	0
  3617  0015CE  BE91               	btfsc	3985,7,c	;volatile
  3618  0015D0  0E01               	movlw	1
  3619  0015D2  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3620  0015D4  010F               	movlb	15	; () banked
  3621  0015D6  9F3F               	bcf	63,7,b	;volatile
  3622  0015D8  D000               	goto	l1774
  3623  0015DA                     l1774:
  3624  0015DA  0EFC               	movlw	252
  3625  0015DC  010F               	movlb	15	; () banked
  3626  0015DE  173F               	andwf	63,f,b	;volatile
  3627  0015E0  010F               	movlb	15	; () banked
  3628  0015E2  813F               	bsf	63,0,b	;volatile
  3629                           
  3630                           ; BSR set to: 15
  3631  0015E4  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3632                           
  3633                           ; BSR set to: 15
  3634  0015E8  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3635                           
  3636                           ; BSR set to: 15
  3637  0015EC  EE20 F003          	lfsr	2,3
  3638  0015F0  5001               	movf	RtccWriteTime@pTm,w,c
  3639  0015F2  26D9               	addwf	fsr2l,f,c
  3640  0015F4  5002               	movf	RtccWriteTime@pTm+1,w,c
  3641  0015F6  22DA               	addwfc	fsr2h,f,c
  3642  0015F8  50DF               	movf	indf2,w,c
  3643  0015FA  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3644                           
  3645                           ; BSR set to: 15
  3646  0015FC  0EFC               	movlw	252
  3647  0015FE  010F               	movlb	15	; () banked
  3648  001600  173F               	andwf	63,f,b	;volatile
  3649                           
  3650                           ; BSR set to: 15
  3651  001602  010F               	movlb	15	; () banked
  3652  001604  813F               	bsf	63,0,b	;volatile
  3653                           
  3654                           ; BSR set to: 15
  3655  001606  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3656                           
  3657                           ; BSR set to: 15
  3658  00160A  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3659                           
  3660                           ; BSR set to: 15
  3661  00160E  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3662                           
  3663                           ; BSR set to: 15
  3664  001612  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3665                           
  3666                           ; BSR set to: 15
  3667  001616  5005               	movf	RtccWriteTime@wasOn,w,c
  3668  001618  B4D8               	btfsc	status,2,c
  3669  00161A  D00D               	goto	l1806
  3670                           
  3671                           ; BSR set to: 15
  3672  00161C  010F               	movlb	15	; () banked
  3673  00161E  8F3F               	bsf	63,7,b	;volatile
  3674                           
  3675                           ; BSR set to: 15
  3676  001620  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3677  001622  B4D8               	btfsc	status,2,c
  3678  001624  D002               	goto	l1802
  3679                           
  3680                           ; BSR set to: 15
  3681  001626  8E91               	bsf	3985,7,c	;volatile
  3682  001628  D000               	goto	l1802
  3683  00162A                     l1802:
  3684                           
  3685                           ; BSR set to: 15
  3686  00162A  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3687  00162C  B4D8               	btfsc	status,2,c
  3688  00162E  D009               	goto	l1810
  3689                           
  3690                           ; BSR set to: 15
  3691  001630  ECB2  F00E         	call	_RtccWrOn	;wreg free
  3692  001634  D006               	goto	l1810
  3693  001636                     l1806:
  3694  001636  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3695  001638  A4D8               	btfss	status,2,c
  3696  00163A  D003               	goto	l1810
  3697  00163C  010F               	movlb	15	; () banked
  3698  00163E  9B3F               	bcf	63,5,b	;volatile
  3699                           
  3700                           ; BSR set to: 15
  3701  001640  D000               	goto	l1810
  3702  001642                     l1810:
  3703  001642  5003               	movf	RtccWriteTime@di,w,c
  3704  001644  B4D8               	btfsc	status,2,c
  3705  001646  0012               	return	
  3706  001648  8CF2               	bsf	intcon,6,c	;volatile
  3707  00164A  0012               	return	
  3708                           
  3709                           ;	Return value of _RtccWriteTime is never used
  3710  00164C  0012               	return		;funcret
  3711  00164E                     __end_of_RtccWriteTime:
  3712                           	opt stack 0
  3713                           tblptru	equ	0xFF8
  3714                           tblptrh	equ	0xFF7
  3715                           tblptrl	equ	0xFF6
  3716                           tablat	equ	0xFF5
  3717                           prodh	equ	0xFF4
  3718                           prodl	equ	0xFF3
  3719                           intcon	equ	0xFF2
  3720                           indf0	equ	0xFEF
  3721                           postinc0	equ	0xFEE
  3722                           fsr0h	equ	0xFEA
  3723                           fsr0l	equ	0xFE9
  3724                           wreg	equ	0xFE8
  3725                           postdec1	equ	0xFE5
  3726                           fsr1l	equ	0xFE1
  3727                           indf2	equ	0xFDF
  3728                           postinc2	equ	0xFDE
  3729                           postdec2	equ	0xFDD
  3730                           fsr2h	equ	0xFDA
  3731                           fsr2l	equ	0xFD9
  3732                           status	equ	0xFD8
  3733                           
  3734 ;; *************** function _RtccWriteDate *****************
  3735 ;; Defined at:
  3736 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  pDt             2    0[COMRAM] PTR const struct .
  3739 ;;		 -> RtccDate(4), 
  3740 ;;  di              1    2[COMRAM] enum E7121
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  tempHourWDay    2   11[COMRAM] struct .
  3743 ;;  tempDayMonth    2    9[COMRAM] struct .
  3744 ;;  tempYear        2    6[COMRAM] struct .
  3745 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3746 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3747 ;;  wasOn           1    4[COMRAM] enum E7121
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      enum E7337
  3750 ;; Registers used:
  3751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3757 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3758 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3760 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3761 ;;Total ram usage:       13 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    1
  3764 ;; This function calls:
  3765 ;;		_RtccWrOn
  3766 ;; This function is called by:
  3767 ;;		_Write_RTC
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text21
  3772  0012E8                     __ptext21:
  3773                           	opt stack 0
  3774  0012E8                     _RtccWriteDate:
  3775                           	opt stack 28
  3776                           
  3777                           ;incstack = 0
  3778  0012E8  0E00               	movlw	0
  3779  0012EA  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3780  0012EC  EE20 F002          	lfsr	2,2
  3781  0012F0  5001               	movf	RtccWriteDate@pDt,w,c
  3782  0012F2  26D9               	addwf	fsr2l,f,c
  3783  0012F4  5002               	movf	RtccWriteDate@pDt+1,w,c
  3784  0012F6  22DA               	addwfc	fsr2h,f,c
  3785  0012F8  0E13               	movlw	19
  3786  0012FA  60DF               	cpfslt	indf2,c
  3787  0012FC  0012               	return	
  3788  0012FE  EE20 F002          	lfsr	2,2
  3789  001302  5001               	movf	RtccWriteDate@pDt,w,c
  3790  001304  26D9               	addwf	fsr2l,f,c
  3791  001306  5002               	movf	RtccWriteDate@pDt+1,w,c
  3792  001308  22DA               	addwfc	fsr2h,f,c
  3793  00130A  50DF               	movf	indf2,w,c
  3794  00130C  B4D8               	btfsc	status,2,c
  3795  00130E  0012               	return	
  3796  001310  EE20 F001          	lfsr	2,1
  3797  001314  5001               	movf	RtccWriteDate@pDt,w,c
  3798  001316  26D9               	addwf	fsr2l,f,c
  3799  001318  5002               	movf	RtccWriteDate@pDt+1,w,c
  3800  00131A  22DA               	addwfc	fsr2h,f,c
  3801  00131C  0E32               	movlw	50
  3802  00131E  60DF               	cpfslt	indf2,c
  3803  001320  0012               	return	
  3804  001322  EE20 F001          	lfsr	2,1
  3805  001326  5001               	movf	RtccWriteDate@pDt,w,c
  3806  001328  26D9               	addwf	fsr2l,f,c
  3807  00132A  5002               	movf	RtccWriteDate@pDt+1,w,c
  3808  00132C  22DA               	addwfc	fsr2h,f,c
  3809  00132E  50DF               	movf	indf2,w,c
  3810  001330  B4D8               	btfsc	status,2,c
  3811  001332  0012               	return	
  3812  001334  EE20 F003          	lfsr	2,3
  3813  001338  5001               	movf	RtccWriteDate@pDt,w,c
  3814  00133A  26D9               	addwf	fsr2l,f,c
  3815  00133C  5002               	movf	RtccWriteDate@pDt+1,w,c
  3816  00133E  22DA               	addwfc	fsr2h,f,c
  3817  001340  0E99               	movlw	153
  3818  001342  64DF               	cpfsgt	indf2,c
  3819  001344  D002               	goto	l1826
  3820  001346  0012               	return	
  3821                           
  3822                           ;	Return value of _RtccWriteDate is never used
  3823  001348  0012               	return	
  3824  00134A                     l1826:
  3825  00134A  EE20 F003          	lfsr	2,3
  3826  00134E  5001               	movf	RtccWriteDate@pDt,w,c
  3827  001350  26D9               	addwf	fsr2l,f,c
  3828  001352  5002               	movf	RtccWriteDate@pDt+1,w,c
  3829  001354  22DA               	addwfc	fsr2h,f,c
  3830  001356  50DF               	movf	indf2,w,c
  3831  001358  6E07               	movwf	RtccWriteDate@tempYear,c
  3832  00135A  EE20 F001          	lfsr	2,1
  3833  00135E  5001               	movf	RtccWriteDate@pDt,w,c
  3834  001360  26D9               	addwf	fsr2l,f,c
  3835  001362  5002               	movf	RtccWriteDate@pDt+1,w,c
  3836  001364  22DA               	addwfc	fsr2h,f,c
  3837  001366  50DF               	movf	indf2,w,c
  3838  001368  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  3839  00136A  EE20 F002          	lfsr	2,2
  3840  00136E  5001               	movf	RtccWriteDate@pDt,w,c
  3841  001370  26D9               	addwf	fsr2l,f,c
  3842  001372  5002               	movf	RtccWriteDate@pDt+1,w,c
  3843  001374  22DA               	addwfc	fsr2h,f,c
  3844  001376  50DF               	movf	indf2,w,c
  3845  001378  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  3846  00137A  5003               	movf	RtccWriteDate@di,w,c
  3847  00137C  B4D8               	btfsc	status,2,c
  3848  00137E  D002               	goto	l1832
  3849  001380  9CF2               	bcf	intcon,6,c	;volatile
  3850  001382  D000               	goto	l1832
  3851  001384                     l1832:
  3852  001384  0E00               	movlw	0
  3853  001386  BB3F               	btfsc	63,5,b	;volatile
  3854  001388  0E01               	movlw	1
  3855  00138A  6E09               	movwf	RtccWriteDate@wasWrEn,c
  3856  00138C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3857  00138E  A4D8               	btfss	status,2,c
  3858  001390  D003               	goto	l1836
  3859  001392  ECB2  F00E         	call	_RtccWrOn	;wreg free
  3860  001396  D000               	goto	l1836
  3861  001398                     l1836:
  3862  001398  0E00               	movlw	0
  3863  00139A  BF3F               	btfsc	63,7,b	;volatile
  3864  00139C  0E01               	movlw	1
  3865  00139E  6E05               	movwf	RtccWriteDate@wasOn,c
  3866  0013A0  5005               	movf	RtccWriteDate@wasOn,w,c
  3867  0013A2  B4D8               	btfsc	status,2,c
  3868  0013A4  D007               	goto	l1842
  3869  0013A6  0E00               	movlw	0
  3870  0013A8  BE91               	btfsc	3985,7,c	;volatile
  3871  0013AA  0E01               	movlw	1
  3872  0013AC  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3873  0013AE  010F               	movlb	15	; () banked
  3874  0013B0  9F3F               	bcf	63,7,b	;volatile
  3875  0013B2  D000               	goto	l1842
  3876  0013B4                     l1842:
  3877  0013B4  0EFC               	movlw	252
  3878  0013B6  010F               	movlb	15	; () banked
  3879  0013B8  173F               	andwf	63,f,b	;volatile
  3880  0013BA  010F               	movlb	15	; () banked
  3881  0013BC  813F               	bsf	63,0,b	;volatile
  3882                           
  3883                           ; BSR set to: 15
  3884  0013BE  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3885                           
  3886                           ; BSR set to: 15
  3887  0013C2  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3888                           
  3889                           ; BSR set to: 15
  3890  0013C6  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3891  0013CA  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3892  0013CE  50DF               	movf	indf2,w,c
  3893  0013D0  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  3894                           
  3895                           ; BSR set to: 15
  3896  0013D2  0EFC               	movlw	252
  3897  0013D4  010F               	movlb	15	; () banked
  3898  0013D6  173F               	andwf	63,f,b	;volatile
  3899                           
  3900                           ; BSR set to: 15
  3901  0013D8  0E03               	movlw	3
  3902  0013DA  010F               	movlb	15	; () banked
  3903  0013DC  133F               	iorwf	63,f,b	;volatile
  3904                           
  3905                           ; BSR set to: 15
  3906  0013DE  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3907                           
  3908                           ; BSR set to: 15
  3909  0013E2  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3910                           
  3911                           ; BSR set to: 15
  3912  0013E6  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3913                           
  3914                           ; BSR set to: 15
  3915  0013EA  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3916                           
  3917                           ; BSR set to: 15
  3918  0013EE  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3919                           
  3920                           ; BSR set to: 15
  3921  0013F2  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3922                           
  3923                           ; BSR set to: 15
  3924  0013F6  5005               	movf	RtccWriteDate@wasOn,w,c
  3925  0013F8  B4D8               	btfsc	status,2,c
  3926  0013FA  D00D               	goto	l1878
  3927                           
  3928                           ; BSR set to: 15
  3929  0013FC  010F               	movlb	15	; () banked
  3930  0013FE  8F3F               	bsf	63,7,b	;volatile
  3931                           
  3932                           ; BSR set to: 15
  3933  001400  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3934  001402  B4D8               	btfsc	status,2,c
  3935  001404  D002               	goto	l1874
  3936                           
  3937                           ; BSR set to: 15
  3938  001406  8E91               	bsf	3985,7,c	;volatile
  3939  001408  D000               	goto	l1874
  3940  00140A                     l1874:
  3941                           
  3942                           ; BSR set to: 15
  3943  00140A  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3944  00140C  B4D8               	btfsc	status,2,c
  3945  00140E  D009               	goto	l1882
  3946                           
  3947                           ; BSR set to: 15
  3948  001410  ECB2  F00E         	call	_RtccWrOn	;wreg free
  3949  001414  D006               	goto	l1882
  3950  001416                     l1878:
  3951  001416  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3952  001418  A4D8               	btfss	status,2,c
  3953  00141A  D003               	goto	l1882
  3954  00141C  010F               	movlb	15	; () banked
  3955  00141E  9B3F               	bcf	63,5,b	;volatile
  3956                           
  3957                           ; BSR set to: 15
  3958  001420  D000               	goto	l1882
  3959  001422                     l1882:
  3960  001422  5003               	movf	RtccWriteDate@di,w,c
  3961  001424  B4D8               	btfsc	status,2,c
  3962  001426  0012               	return	
  3963  001428  9CF2               	bcf	intcon,6,c	;volatile
  3964  00142A  0012               	return	
  3965                           
  3966                           ;	Return value of _RtccWriteDate is never used
  3967  00142C  0012               	return		;funcret
  3968  00142E                     __end_of_RtccWriteDate:
  3969                           	opt stack 0
  3970                           tblptru	equ	0xFF8
  3971                           tblptrh	equ	0xFF7
  3972                           tblptrl	equ	0xFF6
  3973                           tablat	equ	0xFF5
  3974                           prodh	equ	0xFF4
  3975                           prodl	equ	0xFF3
  3976                           intcon	equ	0xFF2
  3977                           indf0	equ	0xFEF
  3978                           postinc0	equ	0xFEE
  3979                           fsr0h	equ	0xFEA
  3980                           fsr0l	equ	0xFE9
  3981                           wreg	equ	0xFE8
  3982                           postdec1	equ	0xFE5
  3983                           fsr1l	equ	0xFE1
  3984                           indf2	equ	0xFDF
  3985                           postinc2	equ	0xFDE
  3986                           postdec2	equ	0xFDD
  3987                           fsr2h	equ	0xFDA
  3988                           fsr2l	equ	0xFD9
  3989                           status	equ	0xFD8
  3990                           
  3991 ;; *************** function _RtccWrOn *****************
  3992 ;; Defined at:
  3993 ;;		line 21 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  data            2    0        unsigned int 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;		None               void
  4000 ;; Registers used:
  4001 ;;		wreg, status,2
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_Write_RTC
  4017 ;;		_RtccWriteDate
  4018 ;;		_RtccWriteTime
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text22
  4023  001D64                     __ptext22:
  4024                           	opt stack 0
  4025  001D64                     _RtccWrOn:
  4026                           	opt stack 28
  4027                           
  4028                           ;incstack = 0
  4029  001D64  9CF2               	bcf	intcon,6,c	;volatile
  4030  001D66  0E55               	movlw	85
  4031  001D68  6EA7               	movwf	4007,c	;volatile
  4032  001D6A  0EAA               	movlw	170
  4033  001D6C  6EA7               	movwf	4007,c	;volatile
  4034  001D6E  010F               	movlb	15	; () banked
  4035  001D70  8B3F               	bsf	63,5,b	;volatile
  4036                           
  4037                           ; BSR set to: 15
  4038  001D72  8CF2               	bsf	intcon,6,c	;volatile
  4039                           
  4040                           ; BSR set to: 15
  4041  001D74  0012               	return		;funcret
  4042  001D76                     __end_of_RtccWrOn:
  4043                           	opt stack 0
  4044                           tblptru	equ	0xFF8
  4045                           tblptrh	equ	0xFF7
  4046                           tblptrl	equ	0xFF6
  4047                           tablat	equ	0xFF5
  4048                           prodh	equ	0xFF4
  4049                           prodl	equ	0xFF3
  4050                           intcon	equ	0xFF2
  4051                           indf0	equ	0xFEF
  4052                           postinc0	equ	0xFEE
  4053                           fsr0h	equ	0xFEA
  4054                           fsr0l	equ	0xFE9
  4055                           wreg	equ	0xFE8
  4056                           postdec1	equ	0xFE5
  4057                           fsr1l	equ	0xFE1
  4058                           indf2	equ	0xFDF
  4059                           postinc2	equ	0xFDE
  4060                           postdec2	equ	0xFDD
  4061                           fsr2h	equ	0xFDA
  4062                           fsr2l	equ	0xFD9
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function _Read_RTC *****************
  4066 ;; Defined at:
  4067 ;;		line 111 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;		None               void
  4074 ;; Registers used:
  4075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    1
  4088 ;; This function calls:
  4089 ;;		_RtccReadDate
  4090 ;;		_RtccReadTime
  4091 ;; This function is called by:
  4092 ;;		_main
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text23
  4097  001758                     __ptext23:
  4098                           	opt stack 0
  4099  001758                     _Read_RTC:
  4100                           	opt stack 29
  4101                           
  4102                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  4103                           
  4104                           ; BSR set to: 15
  4105                           ;incstack = 0
  4106  001758  0E3D               	movlw	low _RtccTime
  4107  00175A  6E01               	movwf	RtccReadTime@pTm,c
  4108  00175C  0E00               	movlw	high _RtccTime
  4109  00175E  6E02               	movwf	RtccReadTime@pTm+1,c
  4110  001760  EC25  F00D         	call	_RtccReadTime	;wreg free
  4111                           
  4112                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  4113  001764  503E               	movf	_RtccTime+1,w,c
  4114  001766  0B0F               	andlw	15
  4115  001768  6E4D               	movwf	_segundo_u,c
  4116                           
  4117                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  4118  00176A  383E               	swapf	_RtccTime+1,w,c
  4119  00176C  0B0F               	andlw	15
  4120  00176E  0B0F               	andlw	15
  4121  001770  6E4C               	movwf	_segundo_d,c
  4122                           
  4123                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  4124  001772  503F               	movf	_RtccTime+2,w,c
  4125  001774  0B0F               	andlw	15
  4126  001776  6E4B               	movwf	_minuto_u,c
  4127                           
  4128                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  4129  001778  383F               	swapf	_RtccTime+2,w,c
  4130  00177A  0B0F               	andlw	15
  4131  00177C  0B0F               	andlw	15
  4132  00177E  6E4A               	movwf	_minuto_d,c
  4133                           
  4134                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  4135  001780  5040               	movf	_RtccTime+3,w,c
  4136  001782  0B0F               	andlw	15
  4137  001784  6E47               	movwf	_hora_u,c
  4138                           
  4139                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  4140  001786  3840               	swapf	_RtccTime+3,w,c
  4141  001788  0B0F               	andlw	15
  4142  00178A  0B0F               	andlw	15
  4143  00178C  6E46               	movwf	_hora_d,c
  4144                           
  4145                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  4146  00178E  0E39               	movlw	low _RtccDate
  4147  001790  6E01               	movwf	RtccReadDate@pDt,c
  4148  001792  0E00               	movlw	high _RtccDate
  4149  001794  6E02               	movwf	RtccReadDate@pDt+1,c
  4150  001796  EC63  F00C         	call	_RtccReadDate	;wreg free
  4151                           
  4152                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  4153  00179A  503A               	movf	_RtccDate+1,w,c
  4154  00179C  0B0F               	andlw	15
  4155  00179E  6E45               	movwf	_fecha_u,c
  4156                           
  4157                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  4158  0017A0  383A               	swapf	_RtccDate+1,w,c
  4159  0017A2  0B0F               	andlw	15
  4160  0017A4  0B0F               	andlw	15
  4161  0017A6  6E44               	movwf	_fecha_d,c
  4162                           
  4163                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  4164  0017A8  503B               	movf	_RtccDate+2,w,c
  4165  0017AA  0B0F               	andlw	15
  4166  0017AC  6E49               	movwf	_mes_u,c
  4167                           
  4168                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  4169  0017AE  383B               	swapf	_RtccDate+2,w,c
  4170  0017B0  0B0F               	andlw	15
  4171  0017B2  0B0F               	andlw	15
  4172  0017B4  6E48               	movwf	_mes_d,c
  4173                           
  4174                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  4175  0017B6  C039  F043         	movff	_RtccDate,_dia_semana
  4176                           
  4177                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  4178  0017BA  503C               	movf	_RtccDate+3,w,c
  4179  0017BC  0B0F               	andlw	15
  4180  0017BE  6E42               	movwf	_anio_u,c
  4181                           
  4182                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  4183  0017C0  383C               	swapf	_RtccDate+3,w,c
  4184  0017C2  0B0F               	andlw	15
  4185  0017C4  0B0F               	andlw	15
  4186  0017C6  6E41               	movwf	_anio_d,c
  4187                           
  4188                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  4189  0017C8  504C               	movf	_segundo_d,w,c
  4190  0017CA  0D0A               	mullw	10
  4191  0017CC  504D               	movf	_segundo_u,w,c
  4192  0017CE  24F3               	addwf	prodl,w,c
  4193  0017D0  6E37               	movwf	_segundo,c
  4194  0017D2  0E00               	movlw	0
  4195  0017D4  20F4               	addwfc	prodh,w,c
  4196  0017D6  6E38               	movwf	_segundo+1,c
  4197                           
  4198                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  4199  0017D8  504A               	movf	_minuto_d,w,c
  4200  0017DA  0D0A               	mullw	10
  4201  0017DC  504B               	movf	_minuto_u,w,c
  4202  0017DE  24F3               	addwf	prodl,w,c
  4203  0017E0  6E58               	movwf	_minuto,c
  4204  0017E2  0E00               	movlw	0
  4205  0017E4  20F4               	addwfc	prodh,w,c
  4206  0017E6  6E59               	movwf	_minuto+1,c
  4207                           
  4208                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  4209  0017E8  5046               	movf	_hora_d,w,c
  4210  0017EA  0D0A               	mullw	10
  4211  0017EC  5047               	movf	_hora_u,w,c
  4212  0017EE  24F3               	addwf	prodl,w,c
  4213  0017F0  6E54               	movwf	_hora,c
  4214  0017F2  0E00               	movlw	0
  4215  0017F4  20F4               	addwfc	prodh,w,c
  4216  0017F6  6E55               	movwf	_hora+1,c
  4217                           
  4218                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  4219  0017F8  5044               	movf	_fecha_d,w,c
  4220  0017FA  0D0A               	mullw	10
  4221  0017FC  5045               	movf	_fecha_u,w,c
  4222  0017FE  24F3               	addwf	prodl,w,c
  4223  001800  6E50               	movwf	_dia,c
  4224  001802  0E00               	movlw	0
  4225  001804  20F4               	addwfc	prodh,w,c
  4226  001806  6E51               	movwf	_dia+1,c
  4227                           
  4228                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  4229  001808  C043  F052         	movff	_dia_semana,_diasem
  4230  00180C  6A53               	clrf	_diasem+1,c
  4231                           
  4232                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  4233  00180E  5048               	movf	_mes_d,w,c
  4234  001810  0D0A               	mullw	10
  4235  001812  5049               	movf	_mes_u,w,c
  4236  001814  24F3               	addwf	prodl,w,c
  4237  001816  6E56               	movwf	_mes,c
  4238  001818  0E00               	movlw	0
  4239  00181A  20F4               	addwfc	prodh,w,c
  4240  00181C  6E57               	movwf	_mes+1,c
  4241                           
  4242                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  4243  00181E  5041               	movf	_anio_d,w,c
  4244  001820  0D0A               	mullw	10
  4245  001822  5042               	movf	_anio_u,w,c
  4246  001824  24F3               	addwf	prodl,w,c
  4247  001826  6E4E               	movwf	_anio,c
  4248  001828  0E00               	movlw	0
  4249  00182A  20F4               	addwfc	prodh,w,c
  4250  00182C  6E4F               	movwf	_anio+1,c
  4251  00182E  0012               	return		;funcret
  4252  001830                     __end_of_Read_RTC:
  4253                           	opt stack 0
  4254                           tblptru	equ	0xFF8
  4255                           tblptrh	equ	0xFF7
  4256                           tblptrl	equ	0xFF6
  4257                           tablat	equ	0xFF5
  4258                           prodh	equ	0xFF4
  4259                           prodl	equ	0xFF3
  4260                           intcon	equ	0xFF2
  4261                           indf0	equ	0xFEF
  4262                           postinc0	equ	0xFEE
  4263                           fsr0h	equ	0xFEA
  4264                           fsr0l	equ	0xFE9
  4265                           wreg	equ	0xFE8
  4266                           postdec1	equ	0xFE5
  4267                           fsr1l	equ	0xFE1
  4268                           indf2	equ	0xFDF
  4269                           postinc2	equ	0xFDE
  4270                           postdec2	equ	0xFDD
  4271                           fsr2h	equ	0xFDA
  4272                           fsr2l	equ	0xFD9
  4273                           status	equ	0xFD8
  4274                           
  4275 ;; *************** function _RtccReadTime *****************
  4276 ;; Defined at:
  4277 ;;		line 23 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  pTm             2    0[COMRAM] PTR struct .
  4280 ;;		 -> RtccTime(4), 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  rTD0            8   10[COMRAM] struct .
  4283 ;;  rTD1            8    2[COMRAM] struct .
  4284 ;; Return value:  Size  Location     Type
  4285 ;;		None               void
  4286 ;; Registers used:
  4287 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4294 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4296 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4297 ;;Total ram usage:       18 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_Read_RTC
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text24
  4307  001A4A                     __ptext24:
  4308                           	opt stack 0
  4309  001A4A                     _RtccReadTime:
  4310                           	opt stack 29
  4311  001A4A  0EFC               	movlw	252
  4312  001A4C  010F               	movlb	15	; () banked
  4313  001A4E  173F               	andwf	63,f,b	;volatile
  4314                           
  4315                           ; BSR set to: 15
  4316  001A50  010F               	movlb	15	; () banked
  4317  001A52  813F               	bsf	63,0,b	;volatile
  4318                           
  4319                           ; BSR set to: 15
  4320  001A54  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  4321                           
  4322                           ; BSR set to: 15
  4323  001A58  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  4324                           
  4325                           ; BSR set to: 15
  4326  001A5C  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  4327                           
  4328                           ; BSR set to: 15
  4329  001A60  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  4330                           
  4331                           ; BSR set to: 15
  4332  001A64  0EFC               	movlw	252
  4333  001A66  010F               	movlb	15	; () banked
  4334  001A68  173F               	andwf	63,f,b	;volatile
  4335  001A6A  010F               	movlb	15	; () banked
  4336  001A6C  813F               	bsf	63,0,b	;volatile
  4337                           
  4338                           ; BSR set to: 15
  4339  001A6E  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  4340                           
  4341                           ; BSR set to: 15
  4342  001A72  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  4343                           
  4344                           ; BSR set to: 15
  4345  001A76  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  4346                           
  4347                           ; BSR set to: 15
  4348  001A7A  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  4349                           
  4350                           ; BSR set to: 15
  4351  001A7E  5009               	movf	RtccReadTime@rTD1+6,w,c
  4352  001A80  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  4353  001A82  A4D8               	btfss	status,2,c
  4354  001A84  D7E2               	goto	l2050
  4355                           
  4356                           ; BSR set to: 15
  4357                           
  4358                           ; BSR set to: 15
  4359  001A86  EE20 F003          	lfsr	2,3
  4360  001A8A  5001               	movf	RtccReadTime@pTm,w,c
  4361  001A8C  26D9               	addwf	fsr2l,f,c
  4362  001A8E  5002               	movf	RtccReadTime@pTm+1,w,c
  4363  001A90  22DA               	addwfc	fsr2h,f,c
  4364  001A92  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  4365  001A96  EE20 F002          	lfsr	2,2
  4366  001A9A  5001               	movf	RtccReadTime@pTm,w,c
  4367  001A9C  26D9               	addwf	fsr2l,f,c
  4368  001A9E  5002               	movf	RtccReadTime@pTm+1,w,c
  4369  001AA0  22DA               	addwfc	fsr2h,f,c
  4370  001AA2  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  4371  001AA6  EE20 F001          	lfsr	2,1
  4372  001AAA  5001               	movf	RtccReadTime@pTm,w,c
  4373  001AAC  26D9               	addwf	fsr2l,f,c
  4374  001AAE  5002               	movf	RtccReadTime@pTm+1,w,c
  4375  001AB0  22DA               	addwfc	fsr2h,f,c
  4376  001AB2  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  4377                           
  4378                           ; BSR set to: 15
  4379  001AB6  0012               	return		;funcret
  4380  001AB8                     __end_of_RtccReadTime:
  4381                           	opt stack 0
  4382                           tblptru	equ	0xFF8
  4383                           tblptrh	equ	0xFF7
  4384                           tblptrl	equ	0xFF6
  4385                           tablat	equ	0xFF5
  4386                           prodh	equ	0xFF4
  4387                           prodl	equ	0xFF3
  4388                           intcon	equ	0xFF2
  4389                           indf0	equ	0xFEF
  4390                           postinc0	equ	0xFEE
  4391                           fsr0h	equ	0xFEA
  4392                           fsr0l	equ	0xFE9
  4393                           wreg	equ	0xFE8
  4394                           postdec1	equ	0xFE5
  4395                           fsr1l	equ	0xFE1
  4396                           indf2	equ	0xFDF
  4397                           postinc2	equ	0xFDE
  4398                           postdec2	equ	0xFDD
  4399                           fsr2h	equ	0xFDA
  4400                           fsr2l	equ	0xFD9
  4401                           status	equ	0xFD8
  4402                           
  4403 ;; *************** function _RtccReadDate *****************
  4404 ;; Defined at:
  4405 ;;		line 23 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  pDt             2    0[COMRAM] PTR struct .
  4408 ;;		 -> RtccDate(4), 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  rTD0            8   10[COMRAM] struct .
  4411 ;;  rTD1            8    2[COMRAM] struct .
  4412 ;; Return value:  Size  Location     Type
  4413 ;;		None               void
  4414 ;; Registers used:
  4415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4422 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4424 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4425 ;;Total ram usage:       18 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_Read_RTC
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text25
  4435  0018C6                     __ptext25:
  4436                           	opt stack 0
  4437  0018C6                     _RtccReadDate:
  4438                           	opt stack 29
  4439  0018C6  0EFC               	movlw	252
  4440  0018C8  010F               	movlb	15	; () banked
  4441  0018CA  173F               	andwf	63,f,b	;volatile
  4442  0018CC  0E03               	movlw	3
  4443  0018CE  010F               	movlb	15	; () banked
  4444  0018D0  133F               	iorwf	63,f,b	;volatile
  4445                           
  4446                           ; BSR set to: 15
  4447  0018D2  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  4448                           
  4449                           ; BSR set to: 15
  4450  0018D6  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  4451                           
  4452                           ; BSR set to: 15
  4453  0018DA  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  4454                           
  4455                           ; BSR set to: 15
  4456  0018DE  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  4457                           
  4458                           ; BSR set to: 15
  4459  0018E2  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  4460                           
  4461                           ; BSR set to: 15
  4462  0018E6  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  4463  0018EA  0EFC               	movlw	252
  4464  0018EC  010F               	movlb	15	; () banked
  4465  0018EE  173F               	andwf	63,f,b	;volatile
  4466  0018F0  0E03               	movlw	3
  4467  0018F2  010F               	movlb	15	; () banked
  4468  0018F4  133F               	iorwf	63,f,b	;volatile
  4469                           
  4470                           ; BSR set to: 15
  4471  0018F6  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  4472                           
  4473                           ; BSR set to: 15
  4474  0018FA  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  4475                           
  4476                           ; BSR set to: 15
  4477  0018FE  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  4478                           
  4479                           ; BSR set to: 15
  4480  001902  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  4481                           
  4482                           ; BSR set to: 15
  4483  001906  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  4484                           
  4485                           ; BSR set to: 15
  4486  00190A  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  4487  00190E  5005               	movf	RtccReadDate@rTD1+2,w,c
  4488  001910  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  4489  001912  A4D8               	btfss	status,2,c
  4490  001914  D7D8               	goto	l2076
  4491                           
  4492                           ; BSR set to: 15
  4493                           
  4494                           ; BSR set to: 15
  4495  001916  EE20 F001          	lfsr	2,1
  4496  00191A  5001               	movf	RtccReadDate@pDt,w,c
  4497  00191C  26D9               	addwf	fsr2l,f,c
  4498  00191E  5002               	movf	RtccReadDate@pDt+1,w,c
  4499  001920  22DA               	addwfc	fsr2h,f,c
  4500  001922  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  4501  001926  EE20 F002          	lfsr	2,2
  4502  00192A  5001               	movf	RtccReadDate@pDt,w,c
  4503  00192C  26D9               	addwf	fsr2l,f,c
  4504  00192E  5002               	movf	RtccReadDate@pDt+1,w,c
  4505  001930  22DA               	addwfc	fsr2h,f,c
  4506  001932  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  4507                           
  4508                           ; BSR set to: 15
  4509  001936  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  4510  00193A  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  4511  00193E  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  4512                           
  4513                           ; BSR set to: 15
  4514  001942  EE20 F003          	lfsr	2,3
  4515  001946  5001               	movf	RtccReadDate@pDt,w,c
  4516  001948  26D9               	addwf	fsr2l,f,c
  4517  00194A  5002               	movf	RtccReadDate@pDt+1,w,c
  4518  00194C  22DA               	addwfc	fsr2h,f,c
  4519  00194E  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  4520                           
  4521                           ; BSR set to: 15
  4522  001952  0012               	return		;funcret
  4523  001954                     __end_of_RtccReadDate:
  4524                           	opt stack 0
  4525                           tblptru	equ	0xFF8
  4526                           tblptrh	equ	0xFF7
  4527                           tblptrl	equ	0xFF6
  4528                           tablat	equ	0xFF5
  4529                           prodh	equ	0xFF4
  4530                           prodl	equ	0xFF3
  4531                           intcon	equ	0xFF2
  4532                           indf0	equ	0xFEF
  4533                           postinc0	equ	0xFEE
  4534                           fsr0h	equ	0xFEA
  4535                           fsr0l	equ	0xFE9
  4536                           wreg	equ	0xFE8
  4537                           postdec1	equ	0xFE5
  4538                           fsr1l	equ	0xFE1
  4539                           indf2	equ	0xFDF
  4540                           postinc2	equ	0xFDE
  4541                           postdec2	equ	0xFDD
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           tblptru	equ	0xFF8
  4546                           tblptrh	equ	0xFF7
  4547                           tblptrl	equ	0xFF6
  4548                           tablat	equ	0xFF5
  4549                           prodh	equ	0xFF4
  4550                           prodl	equ	0xFF3
  4551                           intcon	equ	0xFF2
  4552                           indf0	equ	0xFEF
  4553                           postinc0	equ	0xFEE
  4554                           fsr0h	equ	0xFEA
  4555                           fsr0l	equ	0xFE9
  4556                           wreg	equ	0xFE8
  4557                           postdec1	equ	0xFE5
  4558                           fsr1l	equ	0xFE1
  4559                           indf2	equ	0xFDF
  4560                           postinc2	equ	0xFDE
  4561                           postdec2	equ	0xFDD
  4562                           fsr2h	equ	0xFDA
  4563                           fsr2l	equ	0xFD9
  4564                           status	equ	0xFD8
  4565                           
  4566                           	psect	rparam
  4567  0000                     tblptru	equ	0xFF8
  4568                           tblptrh	equ	0xFF7
  4569                           tblptrl	equ	0xFF6
  4570                           tablat	equ	0xFF5
  4571                           prodh	equ	0xFF4
  4572                           prodl	equ	0xFF3
  4573                           intcon	equ	0xFF2
  4574                           indf0	equ	0xFEF
  4575                           postinc0	equ	0xFEE
  4576                           fsr0h	equ	0xFEA
  4577                           fsr0l	equ	0xFE9
  4578                           wreg	equ	0xFE8
  4579                           postdec1	equ	0xFE5
  4580                           fsr1l	equ	0xFE1
  4581                           indf2	equ	0xFDF
  4582                           postinc2	equ	0xFDE
  4583                           postdec2	equ	0xFDD
  4584                           fsr2h	equ	0xFDA
  4585                           fsr2l	equ	0xFD9
  4586                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    14
    Data        12
    BSS         70
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      90
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[7]), STR_4(CODE[7]), buffer2(BANK0[20]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _lcd_setcursor_vb->_lcd_send_byte
    _caratula->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   15374
                                             35 COMRAM     3     3      0
                           _Read_RTC
                              _Setup
                          _Write_RTC
                           _caratula
                         _lcd_gotoxy
                   _lcd_setcursor_vb
 ---------------------------------------------------------------------------------
 (1) _lcd_setcursor_vb                                     2     1      1     796
                                              4 COMRAM     2     1      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0    6005
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    22     10    1916
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    2238
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    1873
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           3     2      1    1205
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3764
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     841
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _Write_RTC
     _RtccWrOn
     _RtccWriteDate
       _RtccWrOn
     _RtccWriteTime
       _RtccWrOn
     ___awdiv
   _caratula
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_setcursor_vb
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     26      5A       1       94.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86       6        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Aug 16 21:16:42 2016

                        _a 002B                          _b 002D                          _c 002F  
                        _i 0031                          _j 0033                          _k 0035  
           ?_lcd_send_byte 0003               ___awdiv@sign 0006        ___wmul@multiplicand 0003  
              lcd_comand@d 0005               __CFG_CP0$OFF 000000                        l160 1528  
                      l147 14E8                        l263 110E                        l159 14EA  
                      l184 1CA8                        l185 1CAA                        l907 1B0A  
                      l917 1BAA                        u910 19E0                        u930 19F8  
                      u950 1A12                        u928 19E2                        u970 1A2E  
                      u948 19FA                        u968 1A14                        u988 1A30  
                      _dia 0050                        _mes 0056                        wreg 000FE8  
          RtccReadDate@pDt 0001                lcd_gotoxy@x 0006                lcd_gotoxy@y 0005  
                     l1036 1D42                       l2112 1B16                       l2200 1168  
                     l2120 0F46                       l2050 1A4A                       l2202 1174  
                     l2116 1B40                       l2204 1190                       l2132 0F78  
                     l2300 1702                       l2214 197A                       l2150 1016  
                     l2134 0F8E                       l2126 0F60                       l2310 173E  
                     l2232 19A6                       l2224 1992                       l2152 1038  
                     l2128 0F6E                       l2304 171A                       l2218 1982  
                     l2170 1088                       l2162 1060                       l2146 1010  
                     l2138 0FAC                       l2402 152C                       l2076 18C6  
                     l2180 10C2                       l2174 10AC                       l2166 1084  
                     l2158 1054                       l2176 10B6                       l2344 143C  
                     l1810 1642                       l1802 162A                       l2194 1114  
                     l2186 10E4                       l2188 10EC                       l2380 14C0  
                     l2372 14A2                       l2364 1484                       l1806 1636  
                     l1718 1D54                       l1832 1384                       l1744 1CF2  
                     l2384 14D2                       l2368 1492                       l2376 14B2  
                     l1842 13B4                       l1826 134A                       l1746 1CF8  
                     l1836 1398                       l1764 15AA                       l1940 1878  
                     l1932 1858                       l1908 1D22                       l1774 15DA  
                     l1758 1580                       l1950 189E                       l1942 1880  
                     l1926 1846                       l2398 1514                       l1768 15BE  
                     l1882 1422                       l1874 140A                       l1938 186E  
                     l1954 18AA                       l1890 1BC4                       l1970 1AD8  
                     l1892 1BD0                       l1980 1AFE                       l1972 1AE0  
                     l1878 1416                       l1958 18BA                       l1894 1BDC  
                     l1990 1B80                       l1888 1BB8                       l1968 1ACE  
                     l1992 1B88                       l1898 1BE8                       l1996 1B9E  
                     l1988 1B76                       STR_1 0F34                       STR_2 0F0F  
                     STR_3 0F1E                       STR_4 0F34                       STR_5 0F2D  
                     u1410 1B36                       u1420 1B60                       u1417 1B2C  
                     u1427 1B56                       u1630 172A                       u1817 146E  
                     u1827 151E                       u1837 1532                       u1790 150A  
                     u1847 1D44                       u1857 1D56           ?_lcd_send_nibble 0001  
                     _anio 004E                       _flag 02D0                       _main 142E  
                     _hora 0054                       fsr0h 000FEA                       indf0 000FEF  
                     fsr0l 000FE9                       fsr2h 000FDA                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9              __CFG_T1DIG$ON 000000  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
            __CFG_IESO$OFF 000000           RtccReadDate@rTD0 000B           RtccReadDate@rTD1 0003  
             ___param_bank 000010            RtccReadTime@pTm 0001                _Delay1KTCYx 1D40  
            __CFG_PLLDIV$1 000000                      ?_main 0001            __end_of___awdiv 18C6  
    __size_of_Delay100TCYx 0012            ___awdiv@divisor 0003            __end_of___lwdiv 1B14  
          __end_of___lwmod 1BB4            ___awdiv@counter 0005                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94             __CFG_FCMEN$OFF 000000  
                    _Setup 1C00            __end_of_dpowers 0F0B                      _mes_d 0048  
                    _mes_u 0049            __end_of_isdigit 1D2C                      main@x 0026  
                    main@y 0025             __pbitbssCOMRAM 02D0                      tablat 000FF5  
             lcd_putrs@ptr 0009                      status 000FD8            __end_of_sprintf 11A0  
  __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 1C48               _Delay100TCYx 1D52  
             __end_of_main 1542            ??_lcd_send_byte 0004           RtccReadTime@rTD0 000B  
         RtccReadTime@rTD1 0003           __end_of_Read_RTC 1830                     ??_main 0024  
            __activetblptr 000002           __end_of_RtccWrOn 1D76                     ?_Setup 0001  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _EECON2 000FA7  
                   _ANCON0 000F48           ___awdiv@dividend 0001             __CFG_WDTEN$OFF 000000  
         RtccWriteDate@pDt 0001                     _RTCCFG 000F3F             __CFG_WPCFG$OFF 000000  
         __end_of_caratula 1758             __CFG_WPDIS$OFF 000000             __CFG_XINST$OFF 000000  
         __end_of_lcd_init 19D4           __end_of_lcd_putc 1C00          ?_lcd_setcursor_vb 0005  
                   ___wmul 1CBE                  ??___awdiv 0005             __CFG_STVREN$ON 000000  
                   _diasem 0052                     _anio_d 0041                     _anio_u 0042  
                ??___lwdiv 0005                  ??___lwmod 000C         ??_lcd_setcursor_vb 0006  
                   _hora_d 0046                     _hora_u 0047                     clear_0 1C4E  
                   clear_1 1C5C           ___awdiv@quotient 0007                     _minuto 0058  
    __end_of_RtccWriteDate 142E      __end_of_RtccWriteTime 164E           RtccWriteTime@pTm 0001  
             __pdataCOMRAM 004E                  ??_isdigit 0001               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_sprintf 0017                 __accesstop 0060    __end_of__initialization 1C82  
       __size_of_Write_RTC 0148              ___rparam_used 000001             __pcstackCOMRAM 0001  
            __end_of_Setup 1C48            __CFG_DSWDTPS$G2 000000            __CFG_OSC$INTOSC 000000  
                  ??_Setup 000E          lcd_gotoxy@address 0007         __size_of_lcd_putrs 0054  
             sprintf@width 0021                 __pbssBANK0 0060                  ?_Read_RTC 0001  
               _dia_semana 0043  RtccWriteTime@tempHourWDay 000A                 __pnvCOMRAM 0041  
                ?_RtccWrOn 0001             lcd_send_byte@n 0003                    ?___wmul 0001  
            ?_RtccReadDate 0001              ?_RtccReadTime 0001               ?_Delay1KTCYx 0001  
        __end_of_Write_RTC 12E8                 _lcd_comand 1D76                  ?_caratula 0001  
               _lcd_gotoxy 1CE6                    _RTCVALH 000F99                    _RTCVALL 000F98  
                ?_lcd_init 0001                  ?_lcd_putc 0001                 ??_Read_RTC 0013  
                  __Hparam 0000                    __Lparam 0000   __size_of_lcd_send_nibble 0076  
               ??_RtccWrOn 0001             ??_RtccReadDate 0003             ??_RtccReadTime 0003  
                  ___awdiv 1830          __end_of_lcd_putrs 1B68            __size_of___wmul 0028  
                  ___lwdiv 1AB8                    ___lwmod 1B68               __psmallconst 0F00  
              _RtccTimeVal 0027                    __pcinit 1C48                    _fecha_d 0044  
                  _fecha_u 0045                    __ramtop 0F00                    __ptext0 142E  
                  __ptext1 1D2C                    __ptext2 164E                    __ptext3 0F3C  
                  __ptext4 1D0A                    __ptext5 1CBE                    __ptext6 1B68  
                  __ptext7 1AB8                    __ptext8 1B14                    __ptext9 1BB4  
                  _buffer2 0078                  _T1CONbits 000FCD                    _dpowers 0F01  
                  _isdigit 1D0A                 ??_caratula 0024                    _segundo 0037  
                  _sprintf 0F3C                 ??_lcd_init 0005                 ??_lcd_putc 0008  
     end_of_initialization 1C82       lcd_send_byte@address 0004              __Lmediumconst 0000  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc2 000FDE      __end_of_lcd_send_byte 1CBE                  _PORTAbits 000F80  
         __CFG_DSBOREN$OFF 000000                ?_lcd_comand 0001           __CFG_CPUDIV$OSC1 000000  
                _TRISBbits 000F93                ?_lcd_gotoxy 0005  __size_of_lcd_setcursor_vb 0014  
          _LCD_INIT_STRING 0F0B           __CFG_IOL1WAY$OFF 000000  RtccWriteDate@tempDayMonth 000A  
      __CFG_MSSP7B_EN$MSK7 000000           Delay100TCYx@unit 0001             __end_of___wmul 1CE6  
            __pidataCOMRAM 1D84  RtccWriteDate@tempHourWDay 000C          ??_lcd_send_nibble 0001  
     __size_of_Delay1KTCYx 0012           __CFG_DSWDTEN$OFF 000000        start_initialization 1C48  
     __end_of_RtccReadDate 1954       __end_of_RtccReadTime 1AB8       RtccWriteTime@wasAlrm 0006  
     RtccWriteTime@wasWrEn 0007     __size_of_RtccWriteDate 0146            RtccWriteDate@di 0003  
   __size_of_RtccWriteTime 010C          __size_of_Read_RTC 00D8        __size_of_lcd_comand 000E  
      __size_of_lcd_gotoxy 0024                   ??___wmul 0005          __size_of_RtccWrOn 0012  
          RtccWriteTime@di 0003           __CFG_LPT1OSC$OFF 000000                _ALRMCFGbits 000F91  
  __end_of_LCD_INIT_STRING 0F0F                __pbssCOMRAM 0027                  _Write_RTC 11A0  
             _isdigit$1822 0002          __size_of_caratula 010A            Delay1KTCYx@unit 0001  
        __size_of_lcd_init 0080                sprintf@flag 001D          __size_of_lcd_putc 004C  
              sprintf@prec 0020           ___lwdiv@dividend 0001              ?_Delay100TCYx 0001  
                 ?___awdiv 0001                   ?___lwdiv 0001                   ?___lwmod 0008  
  RtccWriteTime@tempMinSec 0008                  _lcd_putrs 1B14    lcd_setcursor_vb@visible 0006  
            _RtccWriteDate 12E8                __smallconst 0F00              _RtccWriteTime 1542  
                 ?_isdigit 0001       __CFG_RTCOSC$T1OSCREF 000000           _lcd_setcursor_vb 1D2C  
           __size_of_Setup 0048                 ?_Write_RTC 0001           ___lwdiv@quotient 0005  
                 ?_sprintf 000D           _RtccAlrmTimeDate 0060             ___wmul@product 0005  
                 _LATBbits 000F8A                   _PIE3bits 000FA3                  _segundo_d 004C  
           ??_Delay100TCYx 0001                  _segundo_u 004D           __CFG_WDTPS$32768 000000  
       RtccWriteDate@wasOn 0005         _Rtcc_read_TimeDate 0070             ?_RtccWriteDate 0001  
               ?_lcd_putrs 0009          ___wmul@multiplier 0001             ?_RtccWriteTime 0001  
                lcd_init@i 0005      __size_of_RtccReadDate 008E               ??_lcd_comand 0005  
                lcd_putc@c 0008      __size_of_RtccReadTime 006E               ??_lcd_gotoxy 0006  
                copy_data0 1C76                   _Read_RTC 1758            _lcd_send_nibble 19D4  
                 __Hrparam 0000                   _RtccDate 0039                   __Lrparam 0000  
                 _RtccTime 003D                   _RtccWrOn 1D64         __end_of_lcd_comand 1D84  
       __end_of_lcd_gotoxy 1D0A               _RtccReadDate 18C6           __size_of___awdiv 0096  
             _RtccReadTime 1A4A           __size_of___lwdiv 005C           __size_of___lwmod 004C  
             _RtccTimeDate 0068                 sprintf@val 001E                   _caratula 164E  
         __size_of_isdigit 0022            ___lwdiv@divisor 0003                ??_Write_RTC 000E  
          ___lwdiv@counter 0007                   __ptext10 1CE6                   __ptext11 1C00  
                 __ptext20 1542                   __ptext12 1954                   __ptext21 12E8  
                 __ptext13 1D40                   __ptext22 1D64                   __ptext14 1D76  
                 __ptext23 1758                   __ptext15 1C8C                   __ptext24 1A4A  
                 __ptext16 19D4                   __ptext25 18C6                   __ptext17 1D52  
                 __ptext18 11A0                   __ptext19 1830                   _lcd_init 1954  
                 _lcd_putc 1BB4           __size_of_sprintf 0264     __size_of_lcd_send_byte 0032  
            __size_of_main 0114                   _minuto_d 004A                   _minuto_u 004B  
            ??_Delay1KTCYx 0001            ??_RtccWriteDate 0004            ??_RtccWriteTime 0004  
              ??_lcd_putrs 000B                _OSCTUNEbits 000F9B                 _INTCONbits 000FF2  
       RtccWriteTime@wasOn 0005       __end_of_Delay100TCYx 1D64                   isdigit@c 0003  
                sprintf@ap 001B    __end_of_lcd_send_nibble 1A4A                  sprintf@sp 000D  
    lcd_setcursor_vb@blink 0005           ___lwmod@dividend 0008                 _OSCCONbits 000FD3  
 __end_of_lcd_setcursor_vb 1D40      RtccWriteDate@tempYear 0007              _lcd_send_byte 1C8C  
               _RTCCFGbits 000F3F                   sprintf@c 0023                   sprintf@f 000F  
          ___lwmod@divisor 000A        __end_of_Delay1KTCYx 1D52            ___lwmod@counter 000C  
     RtccWriteDate@wasAlrm 0006       RtccWriteDate@wasWrEn 0009      lcd_send_nibble@nibble 0002  
