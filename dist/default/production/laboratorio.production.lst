

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Aug 16 20:51:18 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataCOMRAM
    44  001D4E                     __pidataCOMRAM:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _anio
    48  001D4E  000F               	dw	15
    49                           
    50                           ;initializer for _dia
    51  001D50  0008               	dw	8
    52                           
    53                           ;initializer for _diasem
    54  001D52  0003               	dw	3
    55                           
    56                           ;initializer for _hora
    57  001D54  0012               	dw	18
    58                           
    59                           ;initializer for _mes
    60  001D56  0009               	dw	9
    61                           
    62                           ;initializer for _minuto
    63  001D58  001E               	dw	30
    64                           
    65                           	psect	smallconst
    66  000F00                     __psmallconst:
    67                           	opt stack 0
    68  000F00  00                 	db	0
    69  000F01                     _dpowers:
    70                           	opt stack 0
    71  000F01  0001               	dw	1
    72  000F03  000A               	dw	10
    73  000F05  0064               	dw	100
    74  000F07  03E8               	dw	1000
    75  000F09  2710               	dw	10000
    76  000F0B                     __end_of_dpowers:
    77                           	opt stack 0
    78  000F0B                     _LCD_INIT_STRING:
    79                           	opt stack 0
    80  000F0B  28                 	db	40
    81  000F0C  0C                 	db	12
    82  000F0D  01                 	db	1
    83  000F0E  06                 	db	6
    84  000F0F                     __end_of_LCD_INIT_STRING:
    85                           	opt stack 0
    86  000F0F                     STR_2:
    87                           
    88                           ; BSR set to: 15
    89  000F0F  25                 	db	37
    90  000F10  30                 	db	48	;'0'
    91  000F11  32                 	db	50	;'2'
    92  000F12  75                 	db	117	;'u'
    93  000F13  2F                 	db	47
    94  000F14  25                 	db	37
    95  000F15  30                 	db	48	;'0'
    96  000F16  32                 	db	50	;'2'
    97  000F17  75                 	db	117	;'u'
    98  000F18  2F                 	db	47
    99  000F19  25                 	db	37
   100  000F1A  30                 	db	48	;'0'
   101  000F1B  32                 	db	50	;'2'
   102  000F1C  75                 	db	117	;'u'
   103  000F1D  00                 	db	0
   104  000F1E                     STR_3:
   105                           
   106                           ; BSR set to: 15
   107  000F1E  25                 	db	37
   108  000F1F  30                 	db	48	;'0'
   109  000F20  32                 	db	50	;'2'
   110  000F21  75                 	db	117	;'u'
   111  000F22  3A                 	db	58	;':'
   112  000F23  25                 	db	37
   113  000F24  30                 	db	48	;'0'
   114  000F25  32                 	db	50	;'2'
   115  000F26  75                 	db	117	;'u'
   116  000F27  3A                 	db	58	;':'
   117  000F28  25                 	db	37
   118  000F29  30                 	db	48	;'0'
   119  000F2A  32                 	db	50	;'2'
   120  000F2B  75                 	db	117	;'u'
   121  000F2C  00                 	db	0
   122  000F2D                     STR_5:
   123                           
   124                           ; BSR set to: 15
   125  000F2D  20                 	db	32
   126  000F2E  20                 	db	32
   127  000F2F  20                 	db	32
   128  000F30  20                 	db	32
   129  000F31  20                 	db	32
   130  000F32  20                 	db	32
   131  000F33  00                 	db	0
   132  000F34                     STR_1:
   133                           
   134                           ; BSR set to: 15
   135  000F34  55                 	db	85	;'U'
   136  000F35  4E                 	db	78	;'N'
   137  000F36  49                 	db	73	;'I'
   138  000F37  4D                 	db	77	;'M'
   139  000F38  49                 	db	73	;'I'
   140  000F39  43                 	db	67	;'C'
   141  000F3A  00                 	db	0
   142  0000                     
   143                           ; #config settings
   144  000F3B  00                 	db	0	; dummy byte at the end
   145  0000                     
   146                           	psect	nvCOMRAM
   147  000041                     __pnvCOMRAM:
   148                           	opt stack 0
   149  000041                     _anio_d:
   150                           	opt stack 0
   151  000041                     	ds	1
   152  000042                     _anio_u:
   153                           	opt stack 0
   154  000042                     	ds	1
   155  000043                     _dia_semana:
   156                           	opt stack 0
   157  000043                     	ds	1
   158  000044                     _fecha_d:
   159                           	opt stack 0
   160  000044                     	ds	1
   161  000045                     _fecha_u:
   162                           	opt stack 0
   163  000045                     	ds	1
   164  000046                     _hora_d:
   165                           	opt stack 0
   166  000046                     	ds	1
   167  000047                     _hora_u:
   168                           	opt stack 0
   169  000047                     	ds	1
   170  000048                     _mes_d:
   171                           	opt stack 0
   172  000048                     	ds	1
   173  000049                     _mes_u:
   174                           	opt stack 0
   175  000049                     	ds	1
   176  00004A                     _minuto_d:
   177                           	opt stack 0
   178  00004A                     	ds	1
   179  00004B                     _minuto_u:
   180                           	opt stack 0
   181  00004B                     	ds	1
   182  00004C                     _segundo_d:
   183                           	opt stack 0
   184  00004C                     	ds	1
   185  00004D                     _segundo_u:
   186                           	opt stack 0
   187  00004D                     	ds	1
   188  0000                     _ANCON0	set	3912
   189  0000                     _RTCCFG	set	3903
   190  0000                     _RTCCFGbits	set	3903
   191  0000                     _ADCON0	set	4034
   192  0000                     _ADCON1	set	4033
   193  0000                     _ALRMCFGbits	set	3985
   194  0000                     _EECON2	set	4007
   195  0000                     _INTCONbits	set	4082
   196  0000                     _LATBbits	set	3978
   197  0000                     _OSCCONbits	set	4051
   198  0000                     _OSCTUNEbits	set	3995
   199  0000                     _PIE3bits	set	4003
   200  0000                     _PORTAbits	set	3968
   201  0000                     _RTCVALH	set	3993
   202  0000                     _RTCVALL	set	3992
   203  0000                     _T1CONbits	set	4045
   204  0000                     _TRISA	set	3986
   205  0000                     _TRISB	set	3987
   206  0000                     _TRISBbits	set	3987
   207  0000                     _TRISC	set	3988
   208                           
   209                           	psect	cinit
   210  001C12                     __pcinit:
   211                           	opt stack 0
   212  001C12                     start_initialization:
   213                           	opt stack 0
   214  001C12                     __initialization:
   215                           	opt stack 0
   216                           
   217                           ; Clear objects allocated to BANK0 (44 bytes)
   218  001C12  EE00  F060         	lfsr	0,__pbssBANK0
   219  001C16  0E2C               	movlw	44
   220  001C18                     clear_0:
   221  001C18  6AEE               	clrf	postinc0,c
   222  001C1A  06E8               	decf	wreg,f,c
   223  001C1C  E1FD               	bnz	clear_0
   224                           
   225                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   226  001C1E  6A5A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   227                           
   228                           ; Clear objects allocated to COMRAM (26 bytes)
   229  001C20  EE00  F027         	lfsr	0,__pbssCOMRAM
   230  001C24  0E1A               	movlw	26
   231  001C26                     clear_1:
   232  001C26  6AEE               	clrf	postinc0,c
   233  001C28  06E8               	decf	wreg,f,c
   234  001C2A  E1FD               	bnz	clear_1
   235                           
   236                           ; Initialize objects allocated to COMRAM (12 bytes)
   237                           ; load TBLPTR registers with __pidataCOMRAM
   238  001C2C  0E4E               	movlw	low __pidataCOMRAM
   239  001C2E  6EF6               	movwf	tblptrl,c
   240  001C30  0E1D               	movlw	high __pidataCOMRAM
   241  001C32  6EF7               	movwf	tblptrh,c
   242  001C34  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   243  001C36  6EF8               	movwf	tblptru,c
   244  001C38  EE00  F04E         	lfsr	0,__pdataCOMRAM
   245  001C3C  EE10 F00C          	lfsr	1,12
   246  001C40                     copy_data0:
   247  001C40  0009               	tblrd		*+
   248  001C42  CFF5 FFEE          	movff	tablat,postinc0
   249  001C46  50E5               	movf	postdec1,w,c
   250  001C48  50E1               	movf	fsr1l,w,c
   251  001C4A  E1FA               	bnz	copy_data0
   252  001C4C                     end_of_initialization:
   253                           	opt stack 0
   254  001C4C                     __end_of__initialization:
   255                           	opt stack 0
   256  001C4C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  001C4E  6EF8               	movwf	tblptru,c
   258  001C50  0100               	movlb	0
   259  001C52  EF22  F00B         	goto	_main	;jump to C main() function
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	bitbssCOMRAM
   270  0002D0                     __pbitbssCOMRAM:
   271                           	opt stack 0
   272  0002D0                     _flag:
   273                           	opt stack 0
   274  0002D0                     	ds	1
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           postdec1	equ	0xFE5
   282                           fsr1l	equ	0xFE1
   283                           
   284                           	psect	bssCOMRAM
   285  000027                     __pbssCOMRAM:
   286                           	opt stack 0
   287  000027                     _RtccTimeVal:
   288                           	opt stack 0
   289  000027                     	ds	4
   290  00002B                     _a:
   291                           	opt stack 0
   292  00002B                     	ds	2
   293  00002D                     _b:
   294                           	opt stack 0
   295  00002D                     	ds	2
   296  00002F                     _c:
   297                           	opt stack 0
   298  00002F                     	ds	2
   299  000031                     _i:
   300                           	opt stack 0
   301  000031                     	ds	2
   302  000033                     _j:
   303                           	opt stack 0
   304  000033                     	ds	2
   305  000035                     _k:
   306                           	opt stack 0
   307  000035                     	ds	2
   308  000037                     _segundo:
   309                           	opt stack 0
   310  000037                     	ds	2
   311  000039                     _RtccDate:
   312                           	opt stack 0
   313  000039                     	ds	4
   314  00003D                     _RtccTime:
   315                           	opt stack 0
   316  00003D                     	ds	4
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	dataCOMRAM
   327  00004E                     __pdataCOMRAM:
   328                           	opt stack 0
   329  00004E                     _anio:
   330                           	opt stack 0
   331  00004E                     	ds	2
   332  000050                     _dia:
   333                           	opt stack 0
   334  000050                     	ds	2
   335  000052                     _diasem:
   336                           	opt stack 0
   337  000052                     	ds	2
   338  000054                     _hora:
   339                           	opt stack 0
   340  000054                     	ds	2
   341  000056                     _mes:
   342                           	opt stack 0
   343  000056                     	ds	2
   344  000058                     _minuto:
   345                           	opt stack 0
   346  000058                     	ds	2
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	bssBANK0
   357  000060                     __pbssBANK0:
   358                           	opt stack 0
   359  000060                     _RtccAlrmTimeDate:
   360                           	opt stack 0
   361  000060                     	ds	8
   362  000068                     _RtccTimeDate:
   363                           	opt stack 0
   364  000068                     	ds	8
   365  000070                     _Rtcc_read_TimeDate:
   366                           	opt stack 0
   367  000070                     	ds	8
   368  000078                     _buffer2:
   369                           	opt stack 0
   370  000078                     	ds	20
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           postdec1	equ	0xFE5
   378                           fsr1l	equ	0xFE1
   379                           
   380                           	psect	cstackCOMRAM
   381  000001                     __pcstackCOMRAM:
   382                           	opt stack 0
   383  000001                     ??_isdigit:
   384  000001                     ??_lcd_send_nibble:
   385  000001                     ?___wmul:
   386                           	opt stack 0
   387  000001                     ?___awdiv:
   388                           	opt stack 0
   389  000001                     ?___lwdiv:
   390                           	opt stack 0
   391  000001                     Delay100TCYx@unit:
   392                           	opt stack 0
   393  000001                     Delay1KTCYx@unit:
   394                           	opt stack 0
   395  000001                     RtccReadDate@pDt:
   396                           	opt stack 0
   397  000001                     RtccReadTime@pTm:
   398                           	opt stack 0
   399  000001                     RtccWriteDate@pDt:
   400                           	opt stack 0
   401  000001                     RtccWriteTime@pTm:
   402                           	opt stack 0
   403  000001                     ___wmul@multiplier:
   404                           	opt stack 0
   405  000001                     ___awdiv@dividend:
   406                           	opt stack 0
   407  000001                     ___lwdiv@dividend:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x0
   411  000001                     	ds	1
   412  000002                     lcd_send_nibble@nibble:
   413                           	opt stack 0
   414  000002                     _isdigit$1822:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x1
   418  000002                     	ds	1
   419  000003                     lcd_send_byte@n:
   420                           	opt stack 0
   421  000003                     RtccWriteDate@di:
   422                           	opt stack 0
   423  000003                     RtccWriteTime@di:
   424                           	opt stack 0
   425  000003                     isdigit@c:
   426                           	opt stack 0
   427  000003                     ___wmul@multiplicand:
   428                           	opt stack 0
   429  000003                     ___awdiv@divisor:
   430                           	opt stack 0
   431  000003                     ___lwdiv@divisor:
   432                           	opt stack 0
   433  000003                     RtccReadDate@rTD1:
   434                           	opt stack 0
   435  000003                     RtccReadTime@rTD1:
   436                           	opt stack 0
   437                           
   438                           ; 8 bytes @ 0x2
   439  000003                     	ds	1
   440  000004                     lcd_send_byte@address:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x3
   444  000004                     	ds	1
   445  000005                     lcd_init@i:
   446                           	opt stack 0
   447  000005                     lcd_gotoxy@y:
   448                           	opt stack 0
   449  000005                     lcd_comand@d:
   450                           	opt stack 0
   451  000005                     lcd_setcursor_vb@blink:
   452                           	opt stack 0
   453  000005                     RtccWriteDate@wasOn:
   454                           	opt stack 0
   455  000005                     RtccWriteTime@wasOn:
   456                           	opt stack 0
   457  000005                     ___awdiv@counter:
   458                           	opt stack 0
   459  000005                     ___wmul@product:
   460                           	opt stack 0
   461  000005                     ___lwdiv@quotient:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x4
   465  000005                     	ds	1
   466  000006                     lcd_gotoxy@x:
   467                           	opt stack 0
   468  000006                     lcd_setcursor_vb@visible:
   469                           	opt stack 0
   470  000006                     RtccWriteDate@wasAlrm:
   471                           	opt stack 0
   472  000006                     RtccWriteTime@wasAlrm:
   473                           	opt stack 0
   474  000006                     ___awdiv@sign:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x5
   478  000006                     	ds	1
   479  000007                     lcd_gotoxy@address:
   480                           	opt stack 0
   481  000007                     RtccWriteTime@wasWrEn:
   482                           	opt stack 0
   483  000007                     ___lwdiv@counter:
   484                           	opt stack 0
   485  000007                     RtccWriteDate@tempYear:
   486                           	opt stack 0
   487  000007                     ___awdiv@quotient:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x6
   491  000007                     	ds	1
   492  000008                     ?___lwmod:
   493                           	opt stack 0
   494  000008                     lcd_putc@c:
   495                           	opt stack 0
   496  000008                     RtccWriteTime@tempMinSec:
   497                           	opt stack 0
   498  000008                     ___lwmod@dividend:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x7
   502  000008                     	ds	1
   503  000009                     RtccWriteDate@wasWrEn:
   504                           	opt stack 0
   505  000009                     lcd_putrs@ptr:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x8
   509  000009                     	ds	1
   510  00000A                     RtccWriteDate@tempDayMonth:
   511                           	opt stack 0
   512  00000A                     RtccWriteTime@tempHourWDay:
   513                           	opt stack 0
   514  00000A                     ___lwmod@divisor:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x9
   518  00000A                     	ds	1
   519  00000B                     RtccReadDate@rTD0:
   520                           	opt stack 0
   521  00000B                     RtccReadTime@rTD0:
   522                           	opt stack 0
   523                           
   524                           ; 8 bytes @ 0xA
   525  00000B                     	ds	1
   526  00000C                     ___lwmod@counter:
   527                           	opt stack 0
   528  00000C                     RtccWriteDate@tempHourWDay:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0xB
   532  00000C                     	ds	1
   533  00000D                     ?_sprintf:
   534                           	opt stack 0
   535  00000D                     sprintf@sp:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0xC
   539  00000D                     	ds	1
   540  00000E                     
   541                           ; 0 bytes @ 0xD
   542  00000E                     	ds	1
   543  00000F                     sprintf@f:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0xE
   547  00000F                     	ds	4
   548  000013                     
   549                           ; 0 bytes @ 0x12
   550  000013                     	ds	4
   551  000017                     ??_sprintf:
   552                           
   553                           ; 0 bytes @ 0x16
   554  000017                     	ds	4
   555  00001B                     sprintf@ap:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x1A
   559  00001B                     	ds	2
   560  00001D                     sprintf@flag:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x1C
   564  00001D                     	ds	1
   565  00001E                     sprintf@val:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x1D
   569  00001E                     	ds	2
   570  000020                     sprintf@prec:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x1F
   574  000020                     	ds	1
   575  000021                     sprintf@width:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x20
   579  000021                     	ds	2
   580  000023                     sprintf@c:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x22
   584  000023                     	ds	1
   585  000024                     ??_main:
   586                           
   587                           ; 0 bytes @ 0x23
   588  000024                     	ds	1
   589  000025                     main@y:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x24
   593  000025                     	ds	1
   594  000026                     main@x:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x25
   598  000026                     	ds	1
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           postdec1	equ	0xFE5
   606                           fsr1l	equ	0xFE1
   607                           
   608 ;;
   609 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   610 ;;
   611 ;; *************** function _main *****************
   612 ;; Defined at:
   613 ;;		line 101 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  x               1   37[COMRAM] unsigned char 
   618 ;;  y               1   36[COMRAM] unsigned char 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  2  145[None  ] int 
   621 ;; Registers used:
   622 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   631 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   632 ;;Total ram usage:        3 bytes
   633 ;; Hardware stack levels required when called:    6
   634 ;; This function calls:
   635 ;;		_Read_RTC
   636 ;;		_Setup
   637 ;;		_caratula
   638 ;;		_lcd_gotoxy
   639 ;;		_lcd_setcursor_vb
   640 ;; This function is called by:
   641 ;;		Startup code after reset
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text0
   646  001644                     __ptext0:
   647                           	opt stack 0
   648  001644                     _main:
   649                           	opt stack 25
   650                           
   651                           ;main.c: 103: Setup();
   652                           
   653                           ; BSR set to: 15
   654                           ;incstack = 0
   655  001644  ECE5  F00D         	call	_Setup	;wreg free
   656                           
   657                           ;main.c: 104: int8 x = 9;
   658  001648  0E09               	movlw	9
   659  00164A  6E26               	movwf	main@x,c
   660                           
   661                           ;main.c: 105: int8 y = 1;
   662  00164C  0E01               	movlw	1
   663  00164E  6E25               	movwf	main@y,c
   664  001650  D000               	goto	l2332
   665  001652                     l2332:
   666                           
   667                           ;main.c: 108: {
   668                           ;main.c: 109: Read_RTC();
   669  001652  EC91  F00B         	call	_Read_RTC	;wreg free
   670                           
   671                           ;main.c: 110: caratula();
   672  001656  EC9D  F00A         	call	_caratula	;wreg free
   673                           
   674                           ;main.c: 111: lcd_setcursor_vb(1,1);
   675  00165A  0E01               	movlw	1
   676  00165C  6E05               	movwf	lcd_setcursor_vb@blink,c
   677  00165E  0E01               	movlw	1
   678  001660  EC7B  F00E         	call	_lcd_setcursor_vb
   679                           
   680                           ;main.c: 112: lcd_gotoxy(x,y);
   681  001664  C025  F005         	movff	main@y,lcd_gotoxy@y
   682  001668  5026               	movf	main@x,w,c
   683  00166A  EC58  F00E         	call	_lcd_gotoxy
   684                           
   685                           ;main.c: 113: if(PORTAbits.RA1 == 0)
   686  00166E  B280               	btfsc	3968,1,c	;volatile
   687  001670  D046               	goto	l147
   688                           
   689                           ;main.c: 114: {
   690                           ;main.c: 115: x++;
   691  001672  2A26               	incf	main@x,f,c
   692                           
   693                           ;main.c: 116: lcd_gotoxy(x,y);
   694  001674  C025  F005         	movff	main@y,lcd_gotoxy@y
   695  001678  5026               	movf	main@x,w,c
   696  00167A  EC58  F00E         	call	_lcd_gotoxy
   697                           
   698                           ;main.c: 117: _delay((unsigned long)((50)*(8000000/4000.0)));
   699  00167E  0E82               	movlw	130
   700  001680  6E24               	movwf	??_main& (0+255),c
   701  001682  0EDE               	movlw	222
   702  001684                     u1777:
   703  001684  2EE8               	decfsz	wreg,f,c
   704  001686  D7FE               	goto	u1777
   705  001688  2E24               	decfsz	??_main& (0+255),f,c
   706  00168A  D7FC               	goto	u1777
   707                           
   708                           ;main.c: 119: if( (x==11 && y ==1)
   709                           ;main.c: 120: || (x==14 && y ==1)
   710                           ;main.c: 121: || (x==3 && y==2)
   711                           ;main.c: 122: || (x==6 && y==2) ){
   712  00168C  0E0B               	movlw	11
   713  00168E  1826               	xorwf	main@x,w,c
   714  001690  A4D8               	btfss	status,2,c
   715  001692  D003               	goto	l2352
   716  001694  0425               	decf	main@y,w,c
   717  001696  B4D8               	btfsc	status,2,c
   718  001698  D017               	goto	l2364
   719  00169A                     l2352:
   720  00169A  0E0E               	movlw	14
   721  00169C  1826               	xorwf	main@x,w,c
   722  00169E  A4D8               	btfss	status,2,c
   723  0016A0  D003               	goto	l2356
   724  0016A2  0425               	decf	main@y,w,c
   725  0016A4  B4D8               	btfsc	status,2,c
   726  0016A6  D010               	goto	l2364
   727  0016A8                     l2356:
   728  0016A8  0E03               	movlw	3
   729  0016AA  1826               	xorwf	main@x,w,c
   730  0016AC  A4D8               	btfss	status,2,c
   731  0016AE  D004               	goto	l2360
   732  0016B0  0E02               	movlw	2
   733  0016B2  1825               	xorwf	main@y,w,c
   734  0016B4  B4D8               	btfsc	status,2,c
   735  0016B6  D008               	goto	l2364
   736  0016B8                     l2360:
   737  0016B8  0E06               	movlw	6
   738  0016BA  1826               	xorwf	main@x,w,c
   739  0016BC  A4D8               	btfss	status,2,c
   740  0016BE  D00B               	goto	l2368
   741  0016C0  0E02               	movlw	2
   742  0016C2  1825               	xorwf	main@y,w,c
   743  0016C4  A4D8               	btfss	status,2,c
   744  0016C6  D007               	goto	l2368
   745  0016C8                     l2364:
   746                           
   747                           ;main.c: 123: lcd_setcursor_vb(0,0);
   748  0016C8  0E00               	movlw	0
   749  0016CA  6E05               	movwf	lcd_setcursor_vb@blink,c
   750  0016CC  0E00               	movlw	0
   751  0016CE  EC7B  F00E         	call	_lcd_setcursor_vb
   752                           
   753                           ;main.c: 124: x++;
   754  0016D2  2A26               	incf	main@x,f,c
   755  0016D4  D000               	goto	l2368
   756  0016D6                     l2368:
   757                           
   758                           ;main.c: 125: }
   759                           ;main.c: 127: if (x == 17){
   760  0016D6  0E11               	movlw	17
   761  0016D8  1826               	xorwf	main@x,w,c
   762  0016DA  A4D8               	btfss	status,2,c
   763  0016DC  D005               	goto	l2372
   764                           
   765                           ;main.c: 128: x = 1;
   766  0016DE  0E01               	movlw	1
   767  0016E0  6E26               	movwf	main@x,c
   768                           
   769                           ;main.c: 129: y = 2;
   770  0016E2  0E02               	movlw	2
   771  0016E4  6E25               	movwf	main@y,c
   772  0016E6  D000               	goto	l2372
   773  0016E8                     l2372:
   774                           
   775                           ;main.c: 130: }
   776                           ;main.c: 132: if(y == 2 && x == 9){
   777  0016E8  0E02               	movlw	2
   778  0016EA  1825               	xorwf	main@y,w,c
   779  0016EC  A4D8               	btfss	status,2,c
   780  0016EE  D008               	goto	l159
   781  0016F0  0E09               	movlw	9
   782  0016F2  1826               	xorwf	main@x,w,c
   783  0016F4  A4D8               	btfss	status,2,c
   784  0016F6  D004               	goto	l159
   785                           
   786                           ;main.c: 133: y = 1;
   787  0016F8  0E01               	movlw	1
   788  0016FA  6E25               	movwf	main@y,c
   789                           
   790                           ;main.c: 134: }
   791                           ;main.c: 135: }
   792  0016FC  D001               	goto	l159
   793  0016FE                     l147:
   794                           
   795                           ;main.c: 136: else LATBbits.LATB1 = 0;;
   796  0016FE  928A               	bcf	3978,1,c	;volatile
   797  001700                     l159:
   798                           
   799                           ;main.c: 138: if(PORTAbits.RA0 == 0)
   800  001700  B080               	btfsc	3968,0,c	;volatile
   801  001702  D002               	goto	l160
   802                           
   803                           ;main.c: 139: {
   804                           ;main.c: 140: LATBbits.LATB0 = 1;;
   805  001704  808A               	bsf	3978,0,c	;volatile
   806                           
   807                           ;main.c: 141: }
   808  001706  D002               	goto	l2380
   809  001708                     l160:
   810                           
   811                           ;main.c: 142: else LATBbits.LATB0 = 0;;
   812  001708  908A               	bcf	3978,0,c	;volatile
   813  00170A  D000               	goto	l2380
   814  00170C                     l2380:
   815                           
   816                           ;main.c: 144: _delay((unsigned long)((98)*(8000000/4000.0)));
   817  00170C  0EFF               	movlw	255
   818  00170E  6E24               	movwf	??_main& (0+255),c
   819  001710  0E8A               	movlw	138
   820  001712                     u1787:
   821  001712  2EE8               	decfsz	wreg,f,c
   822  001714  D7FE               	goto	u1787
   823  001716  2E24               	decfsz	??_main& (0+255),f,c
   824  001718  D7FC               	goto	u1787
   825  00171A  D000               	nop2	
   826  00171C  D79A               	goto	l2332
   827                           
   828                           ;main.c: 146: }
   829                           ;main.c: 147: return 0;
   830                           ;	Return value of _main is never used
   831  00171E  EF00  F000         	goto	start
   832  001722                     __end_of_main:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           postinc0	equ	0xFEE
   839                           wreg	equ	0xFE8
   840                           postdec1	equ	0xFE5
   841                           fsr1l	equ	0xFE1
   842                           status	equ	0xFD8
   843                           
   844 ;; *************** function _lcd_setcursor_vb *****************
   845 ;; Defined at:
   846 ;;		line 210 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  visible         1    wreg     unsigned char 
   849 ;;  blink           1    4[COMRAM] unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  visible         1    5[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;		None               void
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   861 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   865 ;;Total ram usage:        2 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    2
   868 ;; This function calls:
   869 ;;		_lcd_send_byte
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text1
   876  001CF6                     __ptext1:
   877                           	opt stack 0
   878  001CF6                     _lcd_setcursor_vb:
   879                           	opt stack 28
   880                           
   881                           ;incstack = 0
   882                           ;lcd_setcursor_vb@visible stored from wreg
   883  001CF6  6E06               	movwf	lcd_setcursor_vb@visible,c
   884                           
   885                           ;unmc_lcd_216.c: 211: lcd_send_byte(0, 0xC|(visible<<1)|blink);
   886  001CF8  5006               	movf	lcd_setcursor_vb@visible,w,c
   887  001CFA  2406               	addwf	lcd_setcursor_vb@visible,w,c
   888  001CFC  1005               	iorwf	lcd_setcursor_vb@blink,w,c
   889  001CFE  090C               	iorlw	12
   890  001D00  6E03               	movwf	lcd_send_byte@n,c
   891  001D02  0E00               	movlw	0
   892  001D04  EC2B  F00E         	call	_lcd_send_byte
   893  001D08  0012               	return		;funcret
   894  001D0A                     __end_of_lcd_setcursor_vb:
   895                           	opt stack 0
   896                           tblptru	equ	0xFF8
   897                           tblptrh	equ	0xFF7
   898                           tblptrl	equ	0xFF6
   899                           tablat	equ	0xFF5
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           postdec1	equ	0xFE5
   903                           fsr1l	equ	0xFE1
   904                           status	equ	0xFD8
   905                           
   906 ;; *************** function _caratula *****************
   907 ;; Defined at:
   908 ;;		line 36 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;		None               void
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   926 ;;Total ram usage:        0 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    5
   929 ;; This function calls:
   930 ;;		_lcd_comand
   931 ;;		_lcd_gotoxy
   932 ;;		_lcd_putrs
   933 ;;		_sprintf
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text2
   940  00153A                     __ptext2:
   941                           	opt stack 0
   942  00153A                     _caratula:
   943                           	opt stack 25
   944                           
   945                           ;main.c: 38: lcd_comand(0b00001100);
   946                           
   947                           ;incstack = 0
   948  00153A  0E0C               	movlw	12
   949  00153C  ECA0  F00E         	call	_lcd_comand
   950                           
   951                           ;main.c: 39: lcd_gotoxy(1,1);
   952  001540  0E01               	movlw	1
   953  001542  6E05               	movwf	lcd_gotoxy@y,c
   954  001544  0E01               	movlw	1
   955  001546  EC58  F00E         	call	_lcd_gotoxy
   956                           
   957                           ;main.c: 40: lcd_putrs("UNIMIC");
   958  00154A  0E34               	movlw	low STR_1
   959  00154C  6E09               	movwf	lcd_putrs@ptr,c
   960  00154E  0E0F               	movlw	high STR_1
   961  001550  6E0A               	movwf	lcd_putrs@ptr+1,c
   962  001552  EC6F  F00D         	call	_lcd_putrs	;wreg free
   963                           
   964                           ;main.c: 41: sprintf(buffer2,"%02u/%02u/%02u",dia,mes,anio);
   965  001556  0E78               	movlw	low _buffer2
   966  001558  6E0D               	movwf	sprintf@sp,c
   967  00155A  0E00               	movlw	high _buffer2
   968  00155C  6E0E               	movwf	sprintf@sp+1,c
   969  00155E  0E0F               	movlw	low STR_2
   970  001560  6E0F               	movwf	sprintf@f,c
   971  001562  0E0F               	movlw	high STR_2
   972  001564  6E10               	movwf	sprintf@f+1,c
   973  001566  C050  F011         	movff	_dia,?_sprintf+4
   974  00156A  C051  F012         	movff	_dia+1,?_sprintf+5
   975  00156E  C056  F013         	movff	_mes,?_sprintf+6
   976  001572  C057  F014         	movff	_mes+1,?_sprintf+7
   977  001576  C04E  F015         	movff	_anio,?_sprintf+8
   978  00157A  C04F  F016         	movff	_anio+1,?_sprintf+9
   979  00157E  EC9E  F007         	call	_sprintf	;wreg free
   980                           
   981                           ;main.c: 42: lcd_gotoxy(9,1);
   982  001582  0E01               	movlw	1
   983  001584  6E05               	movwf	lcd_gotoxy@y,c
   984  001586  0E09               	movlw	9
   985  001588  EC58  F00E         	call	_lcd_gotoxy
   986                           
   987                           ;main.c: 43: lcd_putrs(buffer2);
   988  00158C  0E78               	movlw	low _buffer2
   989  00158E  6E09               	movwf	lcd_putrs@ptr,c
   990  001590  0E00               	movlw	high _buffer2
   991  001592  6E0A               	movwf	lcd_putrs@ptr+1,c
   992  001594  EC6F  F00D         	call	_lcd_putrs	;wreg free
   993                           
   994                           ;main.c: 44: sprintf(buffer2,"%02u:%02u:%02u",hora,minuto,segundo);
   995  001598  0E78               	movlw	low _buffer2
   996  00159A  6E0D               	movwf	sprintf@sp,c
   997  00159C  0E00               	movlw	high _buffer2
   998  00159E  6E0E               	movwf	sprintf@sp+1,c
   999  0015A0  0E1E               	movlw	low STR_3
  1000  0015A2  6E0F               	movwf	sprintf@f,c
  1001  0015A4  0E0F               	movlw	high STR_3
  1002  0015A6  6E10               	movwf	sprintf@f+1,c
  1003  0015A8  C054  F011         	movff	_hora,?_sprintf+4
  1004  0015AC  C055  F012         	movff	_hora+1,?_sprintf+5
  1005  0015B0  C058  F013         	movff	_minuto,?_sprintf+6
  1006  0015B4  C059  F014         	movff	_minuto+1,?_sprintf+7
  1007  0015B8  C037  F015         	movff	_segundo,?_sprintf+8
  1008  0015BC  C038  F016         	movff	_segundo+1,?_sprintf+9
  1009  0015C0  EC9E  F007         	call	_sprintf	;wreg free
  1010                           
  1011                           ;main.c: 45: lcd_gotoxy(1,2);
  1012  0015C4  0E02               	movlw	2
  1013  0015C6  6E05               	movwf	lcd_gotoxy@y,c
  1014  0015C8  0E01               	movlw	1
  1015  0015CA  EC58  F00E         	call	_lcd_gotoxy
  1016                           
  1017                           ;main.c: 47: b=b++;
  1018  0015CE  0E78               	movlw	low _buffer2
  1019  0015D0  6E09               	movwf	lcd_putrs@ptr,c
  1020  0015D2  0E00               	movlw	high _buffer2
  1021  0015D4  6E0A               	movwf	lcd_putrs@ptr+1,c
  1022  0015D6  EC6F  F00D         	call	_lcd_putrs	;wreg free
  1023  0015DA  4A2D               	infsnz	_b,f,c
  1024  0015DC  2A2E               	incf	_b+1,f,c
  1025                           
  1026                           ;main.c: 48: if(b<7)
  1027  0015DE  BE2E               	btfsc	_b+1,7,c
  1028  0015E0  D006               	goto	l2288
  1029  0015E2  502E               	movf	_b+1,w,c
  1030  0015E4  E110               	bnz	l2292
  1031  0015E6  0E07               	movlw	7
  1032  0015E8  5C2D               	subwf	_b,w,c
  1033  0015EA  B0D8               	btfsc	status,0,c
  1034  0015EC  D00C               	goto	l2292
  1035  0015EE                     l2288:
  1036                           
  1037                           ;main.c: 49: {
  1038                           ;main.c: 50: lcd_gotoxy(1,1);
  1039  0015EE  0E01               	movlw	1
  1040  0015F0  6E05               	movwf	lcd_gotoxy@y,c
  1041  0015F2  0E01               	movlw	1
  1042  0015F4  EC58  F00E         	call	_lcd_gotoxy
  1043                           
  1044                           ;main.c: 51: lcd_putrs("UNIMIC");
  1045  0015F8  0E34               	movlw	low STR_1
  1046  0015FA  6E09               	movwf	lcd_putrs@ptr,c
  1047  0015FC  0E0F               	movlw	high STR_1
  1048  0015FE  6E0A               	movwf	lcd_putrs@ptr+1,c
  1049  001600  EC6F  F00D         	call	_lcd_putrs	;wreg free
  1050  001604  D000               	goto	l2292
  1051  001606                     l2292:
  1052                           
  1053                           ;main.c: 52: }
  1054                           ;main.c: 53: if(b>6)
  1055  001606  BE2E               	btfsc	_b+1,7,c
  1056  001608  0012               	return	
  1057  00160A  502E               	movf	_b+1,w,c
  1058  00160C  E104               	bnz	u1610
  1059  00160E  0E07               	movlw	7
  1060  001610  5C2D               	subwf	_b,w,c
  1061  001612  A0D8               	btfss	status,0,c
  1062  001614  0012               	return	
  1063  001616                     u1610:
  1064                           
  1065                           ;main.c: 54: {
  1066                           ;main.c: 55: if(b==11){b=0;}
  1067  001616  0E0B               	movlw	11
  1068  001618  182D               	xorwf	_b,w,c
  1069  00161A  102E               	iorwf	_b+1,w,c
  1070  00161C  A4D8               	btfss	status,2,c
  1071  00161E  D005               	goto	l2298
  1072  001620  0E00               	movlw	0
  1073  001622  6E2E               	movwf	_b+1,c
  1074  001624  0E00               	movlw	0
  1075  001626  6E2D               	movwf	_b,c
  1076  001628  D000               	goto	l2298
  1077  00162A                     l2298:
  1078                           
  1079                           ;main.c: 56: lcd_gotoxy(1,1);
  1080  00162A  0E01               	movlw	1
  1081  00162C  6E05               	movwf	lcd_gotoxy@y,c
  1082  00162E  0E01               	movlw	1
  1083  001630  EC58  F00E         	call	_lcd_gotoxy
  1084                           
  1085                           ;main.c: 57: lcd_putrs("      ");
  1086  001634  0E2D               	movlw	low STR_5
  1087  001636  6E09               	movwf	lcd_putrs@ptr,c
  1088  001638  0E0F               	movlw	high STR_5
  1089  00163A  6E0A               	movwf	lcd_putrs@ptr+1,c
  1090  00163C  EC6F  F00D         	call	_lcd_putrs	;wreg free
  1091  001640  0012               	return	
  1092  001642  0012               	return		;funcret
  1093  001644                     __end_of_caratula:
  1094                           	opt stack 0
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           postinc0	equ	0xFEE
  1100                           wreg	equ	0xFE8
  1101                           postdec1	equ	0xFE5
  1102                           fsr1l	equ	0xFE1
  1103                           status	equ	0xFD8
  1104                           
  1105 ;; *************** function _sprintf *****************
  1106 ;; Defined at:
  1107 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1110 ;;		 -> buffer2(20), 
  1111 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1112 ;;		 -> STR_3(15), STR_2(15), 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  tmpval          4    0        struct .
  1115 ;;  cp              3    0        PTR const unsigned char 
  1116 ;;  width           2   32[COMRAM] int 
  1117 ;;  val             2   29[COMRAM] unsigned int 
  1118 ;;  ap              2   26[COMRAM] PTR void [1]
  1119 ;;		 -> ?_sprintf(2), 
  1120 ;;  len             2    0        unsigned int 
  1121 ;;  c               1   34[COMRAM] char 
  1122 ;;  prec            1   31[COMRAM] char 
  1123 ;;  flag            1   28[COMRAM] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2   12[COMRAM] int 
  1126 ;; Registers used:
  1127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1133 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1134 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1135 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1136 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1137 ;;Total ram usage:       23 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    1
  1140 ;; This function calls:
  1141 ;;		___lwdiv
  1142 ;;		___lwmod
  1143 ;;		___wmul
  1144 ;;		_isdigit
  1145 ;; This function is called by:
  1146 ;;		_caratula
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text3
  1151  000F3C                     __ptext3:
  1152                           	opt stack 0
  1153  000F3C                     _sprintf:
  1154                           	opt stack 28
  1155                           
  1156                           ;doprnt.c: 494: va_list ap;
  1157                           ;doprnt.c: 499: signed char c;
  1158                           ;doprnt.c: 501: int width;
  1159                           ;doprnt.c: 506: signed char prec;
  1160                           ;doprnt.c: 508: unsigned char flag;
  1161                           ;doprnt.c: 523: union {
  1162                           ;doprnt.c: 524: unsigned long vd;
  1163                           ;doprnt.c: 525: double integ;
  1164                           ;doprnt.c: 526: } tmpval;
  1165                           ;doprnt.c: 528: unsigned int val;
  1166                           ;doprnt.c: 529: unsigned len;
  1167                           ;doprnt.c: 530: const char * cp;
  1168                           ;doprnt.c: 533: *ap = __va_start();
  1169                           
  1170                           ;incstack = 0
  1171  000F3C  0E11               	movlw	low (?_sprintf+4)
  1172  000F3E  6E1B               	movwf	sprintf@ap,c
  1173  000F40  0E00               	movlw	high (?_sprintf+4)
  1174  000F42  6E1C               	movwf	sprintf@ap+1,c
  1175                           
  1176                           ;doprnt.c: 536: while(c = *f++) {
  1177  000F44  D117               	goto	l2190
  1178  000F46                     l2108:
  1179                           
  1180                           ;doprnt.c: 538: if(c != '%')
  1181  000F46  0E25               	movlw	37
  1182  000F48  1823               	xorwf	sprintf@c,w,c
  1183  000F4A  B4D8               	btfsc	status,2,c
  1184  000F4C  D009               	goto	l2114
  1185                           
  1186                           ;doprnt.c: 540: {
  1187                           ;doprnt.c: 541: ((*sp++ = (c)));
  1188  000F4E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1189  000F52  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1190  000F56  C023  FFDF         	movff	sprintf@c,indf2
  1191  000F5A  4A0D               	infsnz	sprintf@sp,f,c
  1192  000F5C  2A0E               	incf	sprintf@sp+1,f,c
  1193                           
  1194                           ;doprnt.c: 542: continue;
  1195  000F5E  D10A               	goto	l2190
  1196  000F60                     l2114:
  1197                           
  1198                           ;doprnt.c: 543: }
  1199                           ;doprnt.c: 546: width = 0;
  1200  000F60  0E00               	movlw	0
  1201  000F62  6E22               	movwf	sprintf@width+1,c
  1202  000F64  0E00               	movlw	0
  1203  000F66  6E21               	movwf	sprintf@width,c
  1204                           
  1205                           ;doprnt.c: 548: flag = 0;
  1206  000F68  0E00               	movlw	0
  1207  000F6A  6E1D               	movwf	sprintf@flag,c
  1208                           
  1209                           ;doprnt.c: 551: switch(*f) {
  1210                           
  1211                           ;doprnt.c: 550: for(;;) {
  1212  000F6C  D005               	goto	l2120
  1213  000F6E                     l2116:
  1214                           
  1215                           ;doprnt.c: 580: flag |= 0x04;
  1216  000F6E  841D               	bsf	sprintf@flag,2,c
  1217                           
  1218                           ;doprnt.c: 581: f++;
  1219  000F70  4A0F               	infsnz	sprintf@f,f,c
  1220  000F72  2A10               	incf	sprintf@f+1,f,c
  1221                           
  1222                           ;doprnt.c: 582: continue;
  1223  000F74  D001               	goto	l2120
  1224                           
  1225                           ;doprnt.c: 584: }
  1226  000F76  D00B               	goto	l2122
  1227  000F78                     l2120:
  1228  000F78  C00F  FFF6         	movff	sprintf@f,tblptrl
  1229  000F7C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1230  000F80                     	if	0	;tblptru may be non-zero
  1231  000F80                     	endif
  1232  000F80                     	if	0	;tblptru may be non-zero
  1233  000F80                     	endif
  1234  000F80  0008               	tblrd		*
  1235  000F82  50F5               	movf	tablat,w,c
  1236                           
  1237                           ; Switch size 1, requested type "space"
  1238                           ; Number of cases is 1, Range of values is 48 to 48
  1239                           ; switch strategies available:
  1240                           ; Name         Instructions Cycles
  1241                           ; simple_byte            4     3 (average)
  1242                           ;	Chosen strategy is simple_byte
  1243  000F84  0A30               	xorlw	48	; case 48
  1244  000F86  B4D8               	btfsc	status,2,c
  1245  000F88  D7F2               	goto	l2116
  1246                           
  1247                           ;doprnt.c: 585: break;
  1248  000F8A  D001               	goto	l2122
  1249                           
  1250                           ;doprnt.c: 586: }
  1251  000F8C  D7F5               	goto	l2120
  1252  000F8E                     l2122:
  1253                           
  1254                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1255  000F8E  C00F  FFF6         	movff	sprintf@f,tblptrl
  1256  000F92  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1257  000F96                     	if	0	;tblptru may be non-zero
  1258  000F96                     	endif
  1259  000F96                     	if	0	;tblptru may be non-zero
  1260  000F96                     	endif
  1261  000F96  0008               	tblrd		*
  1262  000F98  50F5               	movf	tablat,w,c
  1263  000F9A  EC6A  F00E         	call	_isdigit
  1264  000F9E  A0D8               	btfss	status,0,c
  1265  000FA0  D03A               	goto	l2138
  1266                           
  1267                           ;doprnt.c: 598: width = 0;
  1268  000FA2  0E00               	movlw	0
  1269  000FA4  6E22               	movwf	sprintf@width+1,c
  1270  000FA6  0E00               	movlw	0
  1271  000FA8  6E21               	movwf	sprintf@width,c
  1272  000FAA  D000               	goto	l2126
  1273  000FAC                     l2126:
  1274                           
  1275                           ;doprnt.c: 600: width *= 10;
  1276  000FAC  C021  F001         	movff	sprintf@width,___wmul@multiplier
  1277  000FB0  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1278  000FB4  0E00               	movlw	0
  1279  000FB6  6E04               	movwf	___wmul@multiplicand+1,c
  1280  000FB8  0E0A               	movlw	10
  1281  000FBA  6E03               	movwf	___wmul@multiplicand,c
  1282  000FBC  EC44  F00E         	call	___wmul	;wreg free
  1283  000FC0  C001  F021         	movff	?___wmul,sprintf@width
  1284  000FC4  C002  F022         	movff	?___wmul+1,sprintf@width+1
  1285                           
  1286                           ;doprnt.c: 601: width += *f++ - '0';
  1287  000FC8  0ED0               	movlw	208
  1288  000FCA  6E17               	movwf	??_sprintf& (0+255),c
  1289  000FCC  0EFF               	movlw	255
  1290  000FCE  6E18               	movwf	(??_sprintf+1)& (0+255),c
  1291  000FD0  C00F  FFF6         	movff	sprintf@f,tblptrl
  1292  000FD4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1293  000FD8                     	if	0	;tblptru may be non-zero
  1294  000FD8                     	endif
  1295  000FD8                     	if	0	;tblptru may be non-zero
  1296  000FD8                     	endif
  1297  000FD8  0008               	tblrd		*
  1298  000FDA  50F5               	movf	tablat,w,c
  1299  000FDC  6E19               	movwf	(??_sprintf+2)& (0+255),c
  1300  000FDE  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  1301  000FE0  5017               	movf	??_sprintf,w,c
  1302  000FE2  2619               	addwf	??_sprintf+2,f,c
  1303  000FE4  5018               	movf	??_sprintf+1,w,c
  1304  000FE6  221A               	addwfc	??_sprintf+3,f,c
  1305  000FE8  5019               	movf	??_sprintf+2,w,c
  1306  000FEA  2621               	addwf	sprintf@width,f,c
  1307  000FEC  501A               	movf	??_sprintf+3,w,c
  1308  000FEE  2222               	addwfc	sprintf@width+1,f,c
  1309  000FF0  4A0F               	infsnz	sprintf@f,f,c
  1310  000FF2  2A10               	incf	sprintf@f+1,f,c
  1311                           
  1312                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1313  000FF4  C00F  FFF6         	movff	sprintf@f,tblptrl
  1314  000FF8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1315  000FFC                     	if	0	;tblptru may be non-zero
  1316  000FFC                     	endif
  1317  000FFC                     	if	0	;tblptru may be non-zero
  1318  000FFC                     	endif
  1319  000FFC  0008               	tblrd		*
  1320  000FFE  50F5               	movf	tablat,w,c
  1321  001000  EC6A  F00E         	call	_isdigit
  1322  001004  A0D8               	btfss	status,0,c
  1323  001006  D007               	goto	l2138
  1324  001008  D7D1               	goto	l2126
  1325                           
  1326                           ;doprnt.c: 608: }
  1327                           ;doprnt.c: 635: switch(c = *f++) {
  1328  00100A  D005               	goto	l2138
  1329                           
  1330                           ;doprnt.c: 638: goto alldone;
  1331                           
  1332                           ;doprnt.c: 637: case 0:
  1333  00100C  D0C1               	goto	l2192
  1334                           
  1335                           ;doprnt.c: 813: continue;
  1336                           
  1337                           ;doprnt.c: 802: default:
  1338  00100E  D0B2               	goto	l2190
  1339  001010                     l2134:
  1340                           
  1341                           ;doprnt.c: 818: flag |= 0xC0;
  1342  001010  0EC0               	movlw	192
  1343  001012  121D               	iorwf	sprintf@flag,f,c
  1344                           
  1345                           ;doprnt.c: 822: }
  1346                           
  1347                           ;doprnt.c: 819: break;
  1348  001014  D011               	goto	l2140
  1349  001016                     l2138:
  1350  001016  C00F  FFF6         	movff	sprintf@f,tblptrl
  1351  00101A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1352  00101E  4A0F               	infsnz	sprintf@f,f,c
  1353  001020  2A10               	incf	sprintf@f+1,f,c
  1354  001022                     	if	0	;tblptru may be non-zero
  1355  001022                     	endif
  1356  001022                     	if	0	;tblptru may be non-zero
  1357  001022                     	endif
  1358  001022  0008               	tblrd		*
  1359  001024  CFF5 F023          	movff	tablat,sprintf@c
  1360  001028  5023               	movf	sprintf@c,w,c
  1361                           
  1362                           ; Switch size 1, requested type "space"
  1363                           ; Number of cases is 2, Range of values is 0 to 117
  1364                           ; switch strategies available:
  1365                           ; Name         Instructions Cycles
  1366                           ; simple_byte            7     4 (average)
  1367                           ;	Chosen strategy is simple_byte
  1368  00102A  0A00               	xorlw	0	; case 0
  1369  00102C  B4D8               	btfsc	status,2,c
  1370  00102E  D0B0               	goto	l2192
  1371  001030  0A75               	xorlw	117	; case 117
  1372  001032  B4D8               	btfsc	status,2,c
  1373  001034  D7ED               	goto	l2134
  1374  001036  D09E               	goto	l2190
  1375  001038                     l2140:
  1376                           
  1377                           ;doprnt.c: 1273: {
  1378                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1379  001038  C01B  FFD9         	movff	sprintf@ap,fsr2l
  1380  00103C  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  1381  001040  CFDE F01E          	movff	postinc2,sprintf@val
  1382  001044  CFDD F01F          	movff	postdec2,sprintf@val+1
  1383  001048  0E02               	movlw	2
  1384  00104A  261B               	addwf	sprintf@ap,f,c
  1385  00104C  0E00               	movlw	0
  1386  00104E  221C               	addwfc	sprintf@ap+1,f,c
  1387                           
  1388                           ;doprnt.c: 1287: }
  1389                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1390  001050  0E01               	movlw	1
  1391  001052  6E23               	movwf	sprintf@c,c
  1392  001054                     l2146:
  1393  001054  0E05               	movlw	5
  1394  001056  1823               	xorwf	sprintf@c,w,c
  1395  001058  B4D8               	btfsc	status,2,c
  1396  00105A  D016               	goto	l2158
  1397  00105C  D001               	goto	l2150
  1398  00105E  D014               	goto	l2158
  1399  001060                     l2150:
  1400                           
  1401                           ;doprnt.c: 1306: if(val < dpowers[c])
  1402  001060  5023               	movf	sprintf@c,w,c
  1403  001062  0D02               	mullw	2
  1404  001064  0E01               	movlw	low _dpowers
  1405  001066  24F3               	addwf	prodl,w,c
  1406  001068  6EF6               	movwf	tblptrl,c
  1407  00106A  0E0F               	movlw	high _dpowers
  1408  00106C  20F4               	addwfc	prodh,w,c
  1409  00106E  6EF7               	movwf	tblptrh,c
  1410  001070                     	if	0	;There are less than 3 active tblptr bytes
  1411  001070                     	endif
  1412  001070  0009               	tblrd		*+
  1413  001072  50F5               	movf	tablat,w,c
  1414  001074  5C1E               	subwf	sprintf@val,w,c
  1415  001076  0009               	tblrd		*+
  1416  001078  50F5               	movf	tablat,w,c
  1417  00107A  581F               	subwfb	sprintf@val+1,w,c
  1418  00107C  A0D8               	btfss	status,0,c
  1419  00107E  D004               	goto	l2158
  1420  001080  D001               	goto	l2154
  1421                           
  1422                           ;doprnt.c: 1307: break;
  1423  001082  D002               	goto	l2158
  1424  001084                     l2154:
  1425  001084  2A23               	incf	sprintf@c,f,c
  1426  001086  D7E6               	goto	l2146
  1427  001088                     l2158:
  1428                           
  1429                           ;doprnt.c: 1381: if(width > c)
  1430  001088  0E80               	movlw	128
  1431  00108A  BE23               	btfsc	sprintf@c,7,c
  1432  00108C  0E7F               	movlw	127
  1433  00108E  6E17               	movwf	??_sprintf& (0+255),c
  1434  001090  5021               	movf	sprintf@width,w,c
  1435  001092  5C23               	subwf	sprintf@c,w,c
  1436  001094  5022               	movf	sprintf@width+1,w,c
  1437  001096  0A80               	xorlw	128
  1438  001098  5817               	subwfb	??_sprintf& (0+255),w,c
  1439  00109A  B0D8               	btfsc	status,0,c
  1440  00109C  D007               	goto	l2162
  1441                           
  1442                           ;doprnt.c: 1382: width -= c;
  1443  00109E  5023               	movf	sprintf@c,w,c
  1444  0010A0  5E21               	subwf	sprintf@width,f,c
  1445  0010A2  0E00               	movlw	0
  1446  0010A4  BE23               	btfsc	sprintf@c,7,c
  1447  0010A6  0EFF               	movlw	255
  1448  0010A8  5A22               	subwfb	sprintf@width+1,f,c
  1449  0010AA  D005               	goto	l2164
  1450  0010AC                     l2162:
  1451                           
  1452                           ;doprnt.c: 1383: else
  1453                           ;doprnt.c: 1384: width = 0;
  1454  0010AC  0E00               	movlw	0
  1455  0010AE  6E22               	movwf	sprintf@width+1,c
  1456  0010B0  0E00               	movlw	0
  1457  0010B2  6E21               	movwf	sprintf@width,c
  1458  0010B4  D000               	goto	l2164
  1459  0010B6                     l2164:
  1460                           
  1461                           ;doprnt.c: 1387: if(flag & 0x04) {
  1462  0010B6  A41D               	btfss	sprintf@flag,2,c
  1463  0010B8  D015               	goto	l2174
  1464                           
  1465                           ;doprnt.c: 1415: if(width)
  1466  0010BA  5021               	movf	sprintf@width,w,c
  1467  0010BC  1022               	iorwf	sprintf@width+1,w,c
  1468  0010BE  B4D8               	btfsc	status,2,c
  1469  0010C0  D026               	goto	l261
  1470  0010C2                     l2168:
  1471                           
  1472                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1473  0010C2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1474  0010C6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1475  0010CA  0E30               	movlw	48
  1476  0010CC  6EDF               	movwf	indf2,c
  1477  0010CE  4A0D               	infsnz	sprintf@sp,f,c
  1478  0010D0  2A0E               	incf	sprintf@sp+1,f,c
  1479                           
  1480                           ;doprnt.c: 1418: while(--width);
  1481  0010D2  0621               	decf	sprintf@width,f,c
  1482  0010D4  A0D8               	btfss	status,0,c
  1483  0010D6  0622               	decf	sprintf@width+1,f,c
  1484  0010D8  5021               	movf	sprintf@width,w,c
  1485  0010DA  1022               	iorwf	sprintf@width+1,w,c
  1486  0010DC  B4D8               	btfsc	status,2,c
  1487  0010DE  D017               	goto	l261
  1488  0010E0  D7F0               	goto	l2168
  1489                           
  1490                           ;doprnt.c: 1420: } else
  1491  0010E2  D015               	goto	l261
  1492  0010E4                     l2174:
  1493                           
  1494                           ;doprnt.c: 1422: {
  1495                           ;doprnt.c: 1424: if(width
  1496                           ;doprnt.c: 1428: )
  1497  0010E4  5021               	movf	sprintf@width,w,c
  1498  0010E6  1022               	iorwf	sprintf@width+1,w,c
  1499  0010E8  B4D8               	btfsc	status,2,c
  1500  0010EA  D011               	goto	l261
  1501  0010EC                     l2176:
  1502                           
  1503                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1504  0010EC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1505  0010F0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1506  0010F4  0E20               	movlw	32
  1507  0010F6  6EDF               	movwf	indf2,c
  1508  0010F8  4A0D               	infsnz	sprintf@sp,f,c
  1509  0010FA  2A0E               	incf	sprintf@sp+1,f,c
  1510                           
  1511                           ;doprnt.c: 1431: while(--width);
  1512  0010FC  0621               	decf	sprintf@width,f,c
  1513  0010FE  A0D8               	btfss	status,0,c
  1514  001100  0622               	decf	sprintf@width+1,f,c
  1515  001102  5021               	movf	sprintf@width,w,c
  1516  001104  1022               	iorwf	sprintf@width+1,w,c
  1517  001106  B4D8               	btfsc	status,2,c
  1518  001108  D002               	goto	l261
  1519  00110A  D7F0               	goto	l2176
  1520  00110C  D000               	goto	l261
  1521  00110E                     l261:
  1522                           
  1523                           ;doprnt.c: 1469: }
  1524                           ;doprnt.c: 1472: prec = c;
  1525  00110E  C023  F020         	movff	sprintf@c,sprintf@prec
  1526                           
  1527                           ;doprnt.c: 1474: while(prec--) {
  1528  001112  D02A               	goto	l2188
  1529  001114                     l2182:
  1530                           
  1531                           ;doprnt.c: 1478: {
  1532                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1533  001114  5020               	movf	sprintf@prec,w,c
  1534  001116  0D02               	mullw	2
  1535  001118  0E01               	movlw	low _dpowers
  1536  00111A  24F3               	addwf	prodl,w,c
  1537  00111C  6EF6               	movwf	tblptrl,c
  1538  00111E  0E0F               	movlw	high _dpowers
  1539  001120  20F4               	addwfc	prodh,w,c
  1540  001122  6EF7               	movwf	tblptrh,c
  1541  001124                     	if	0	;There are less than 3 active tblptr bytes
  1542  001124                     	endif
  1543  001124  0009               	tblrd		*+
  1544  001126  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1545  00112A  000A               	tblrd		*-
  1546  00112C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1547  001130  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  1548  001134  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1549  001138  EC41  F00D         	call	___lwdiv	;wreg free
  1550  00113C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1551  001140  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1552  001144  0E00               	movlw	0
  1553  001146  6E0B               	movwf	___lwmod@divisor+1,c
  1554  001148  0E0A               	movlw	10
  1555  00114A  6E0A               	movwf	___lwmod@divisor,c
  1556  00114C  EC99  F00D         	call	___lwmod	;wreg free
  1557  001150  5008               	movf	?___lwmod,w,c
  1558  001152  0F30               	addlw	48
  1559  001154  6E23               	movwf	sprintf@c,c
  1560                           
  1561                           ;doprnt.c: 1523: }
  1562                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1563  001156  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1564  00115A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1565  00115E  C023  FFDF         	movff	sprintf@c,indf2
  1566  001162  4A0D               	infsnz	sprintf@sp,f,c
  1567  001164  2A0E               	incf	sprintf@sp+1,f,c
  1568  001166  D000               	goto	l2188
  1569  001168                     l2188:
  1570  001168  0620               	decf	sprintf@prec,f,c
  1571  00116A  2820               	incf	sprintf@prec,w,c
  1572  00116C  B4D8               	btfsc	status,2,c
  1573  00116E  D002               	goto	l2190
  1574  001170  D7D1               	goto	l2182
  1575  001172  D000               	goto	l2190
  1576  001174                     l2190:
  1577  001174  C00F  FFF6         	movff	sprintf@f,tblptrl
  1578  001178  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1579  00117C  4A0F               	infsnz	sprintf@f,f,c
  1580  00117E  2A10               	incf	sprintf@f+1,f,c
  1581  001180                     	if	0	;tblptru may be non-zero
  1582  001180                     	endif
  1583  001180                     	if	0	;tblptru may be non-zero
  1584  001180                     	endif
  1585  001180  0008               	tblrd		*
  1586  001182  CFF5 F023          	movff	tablat,sprintf@c
  1587  001186  5023               	movf	sprintf@c,w,c
  1588  001188  B4D8               	btfsc	status,2,c
  1589  00118A  D002               	goto	l2192
  1590  00118C  D6DC               	goto	l2108
  1591  00118E  D000               	goto	l2192
  1592  001190                     l2192:
  1593                           
  1594                           ;doprnt.c: 1538: *sp = 0;
  1595  001190  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1596  001194  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1597  001198  0E00               	movlw	0
  1598  00119A  6EDF               	movwf	indf2,c
  1599  00119C  0012               	return	
  1600                           
  1601                           ;doprnt.c: 1540: return 0;
  1602                           ;	Return value of _sprintf is never used
  1603  00119E  0012               	return		;funcret
  1604  0011A0                     __end_of_sprintf:
  1605                           	opt stack 0
  1606                           tblptru	equ	0xFF8
  1607                           tblptrh	equ	0xFF7
  1608                           tblptrl	equ	0xFF6
  1609                           tablat	equ	0xFF5
  1610                           prodh	equ	0xFF4
  1611                           prodl	equ	0xFF3
  1612                           postinc0	equ	0xFEE
  1613                           wreg	equ	0xFE8
  1614                           postdec1	equ	0xFE5
  1615                           fsr1l	equ	0xFE1
  1616                           indf2	equ	0xFDF
  1617                           postinc2	equ	0xFDE
  1618                           postdec2	equ	0xFDD
  1619                           fsr2h	equ	0xFDA
  1620                           fsr2l	equ	0xFD9
  1621                           status	equ	0xFD8
  1622                           
  1623 ;; *************** function _isdigit *****************
  1624 ;; Defined at:
  1625 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  c               1    wreg     unsigned char 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  c               1    2[COMRAM] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;		None               void
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;Total ram usage:        3 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_sprintf
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text4
  1653  001CD4                     __ptext4:
  1654                           	opt stack 0
  1655  001CD4                     _isdigit:
  1656                           	opt stack 28
  1657                           
  1658                           ;incstack = 0
  1659                           ;isdigit@c stored from wreg
  1660  001CD4  6E03               	movwf	isdigit@c,c
  1661  001CD6  0E00               	movlw	0
  1662  001CD8  6E02               	movwf	_isdigit$1822,c
  1663  001CDA  0E3A               	movlw	58
  1664  001CDC  6003               	cpfslt	isdigit@c,c
  1665  001CDE  D006               	goto	l1896
  1666  001CE0  0E2F               	movlw	47
  1667  001CE2  6403               	cpfsgt	isdigit@c,c
  1668  001CE4  D003               	goto	l1896
  1669  001CE6  0E01               	movlw	1
  1670  001CE8  6E02               	movwf	_isdigit$1822,c
  1671  001CEA  D000               	goto	l1896
  1672  001CEC                     l1896:
  1673  001CEC  C002  F001         	movff	_isdigit$1822,??_isdigit
  1674  001CF0  3001               	rrcf	??_isdigit,w,c
  1675  001CF2  0012               	return	
  1676  001CF4  0012               	return		;funcret
  1677  001CF6                     __end_of_isdigit:
  1678                           	opt stack 0
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           prodh	equ	0xFF4
  1684                           prodl	equ	0xFF3
  1685                           postinc0	equ	0xFEE
  1686                           wreg	equ	0xFE8
  1687                           postdec1	equ	0xFE5
  1688                           fsr1l	equ	0xFE1
  1689                           indf2	equ	0xFDF
  1690                           postinc2	equ	0xFDE
  1691                           postdec2	equ	0xFDD
  1692                           fsr2h	equ	0xFDA
  1693                           fsr2l	equ	0xFD9
  1694                           status	equ	0xFD8
  1695                           
  1696 ;; *************** function ___wmul *****************
  1697 ;; Defined at:
  1698 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  multiplier      2    0[COMRAM] unsigned int 
  1701 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  product         2    4[COMRAM] unsigned int 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2    0[COMRAM] unsigned int 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, prodl, prodh
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;Total ram usage:        6 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_sprintf
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text5
  1727  001C88                     __ptext5:
  1728                           	opt stack 0
  1729  001C88                     ___wmul:
  1730                           	opt stack 28
  1731                           
  1732                           ;incstack = 0
  1733  001C88  5001               	movf	___wmul@multiplier,w,c
  1734  001C8A  0203               	mulwf	___wmul@multiplicand,c
  1735  001C8C  CFF3 F005          	movff	prodl,___wmul@product
  1736  001C90  CFF4 F006          	movff	prodh,___wmul@product+1
  1737  001C94  5001               	movf	___wmul@multiplier,w,c
  1738  001C96  0204               	mulwf	___wmul@multiplicand+1,c
  1739  001C98  50F3               	movf	prodl,w,c
  1740  001C9A  2606               	addwf	___wmul@product+1,f,c
  1741  001C9C  5002               	movf	___wmul@multiplier+1,w,c
  1742  001C9E  0203               	mulwf	___wmul@multiplicand,c
  1743  001CA0  50F3               	movf	prodl,w,c
  1744  001CA2  2606               	addwf	___wmul@product+1,f,c
  1745  001CA4  C005  F001         	movff	___wmul@product,?___wmul
  1746  001CA8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1747  001CAC  0012               	return	
  1748  001CAE  0012               	return		;funcret
  1749  001CB0                     __end_of___wmul:
  1750                           	opt stack 0
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           prodh	equ	0xFF4
  1756                           prodl	equ	0xFF3
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           postdec1	equ	0xFE5
  1760                           fsr1l	equ	0xFE1
  1761                           indf2	equ	0xFDF
  1762                           postinc2	equ	0xFDE
  1763                           postdec2	equ	0xFDD
  1764                           fsr2h	equ	0xFDA
  1765                           fsr2l	equ	0xFD9
  1766                           status	equ	0xFD8
  1767                           
  1768 ;; *************** function ___lwmod *****************
  1769 ;; Defined at:
  1770 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  dividend        2    7[COMRAM] unsigned int 
  1773 ;;  divisor         2    9[COMRAM] unsigned int 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  counter         1   11[COMRAM] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  2    7[COMRAM] unsigned int 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1789 ;;Total ram usage:        5 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_sprintf
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text6
  1799  001B32                     __ptext6:
  1800                           	opt stack 0
  1801  001B32                     ___lwmod:
  1802                           	opt stack 28
  1803                           
  1804                           ;incstack = 0
  1805  001B32  500A               	movf	___lwmod@divisor,w,c
  1806  001B34  100B               	iorwf	___lwmod@divisor+1,w,c
  1807  001B36  B4D8               	btfsc	status,2,c
  1808  001B38  D01D               	goto	l915
  1809  001B3A  0E01               	movlw	1
  1810  001B3C  6E0C               	movwf	___lwmod@counter,c
  1811  001B3E  D005               	goto	l1978
  1812  001B40                     l1976:
  1813  001B40  90D8               	bcf	status,0,c
  1814  001B42  360A               	rlcf	___lwmod@divisor,f,c
  1815  001B44  360B               	rlcf	___lwmod@divisor+1,f,c
  1816  001B46  2A0C               	incf	___lwmod@counter,f,c
  1817  001B48  D000               	goto	l1978
  1818  001B4A                     l1978:
  1819  001B4A  BE0B               	btfsc	___lwmod@divisor+1,7,c
  1820  001B4C  D002               	goto	l1980
  1821  001B4E  D7F8               	goto	l1976
  1822  001B50  D000               	goto	l1980
  1823  001B52                     l1980:
  1824  001B52  500A               	movf	___lwmod@divisor,w,c
  1825  001B54  5C08               	subwf	___lwmod@dividend,w,c
  1826  001B56  500B               	movf	___lwmod@divisor+1,w,c
  1827  001B58  5809               	subwfb	___lwmod@dividend+1,w,c
  1828  001B5A  A0D8               	btfss	status,0,c
  1829  001B5C  D005               	goto	l1984
  1830  001B5E  500A               	movf	___lwmod@divisor,w,c
  1831  001B60  5E08               	subwf	___lwmod@dividend,f,c
  1832  001B62  500B               	movf	___lwmod@divisor+1,w,c
  1833  001B64  5A09               	subwfb	___lwmod@dividend+1,f,c
  1834  001B66  D000               	goto	l1984
  1835  001B68                     l1984:
  1836  001B68  90D8               	bcf	status,0,c
  1837  001B6A  320B               	rrcf	___lwmod@divisor+1,f,c
  1838  001B6C  320A               	rrcf	___lwmod@divisor,f,c
  1839  001B6E  2E0C               	decfsz	___lwmod@counter,f,c
  1840  001B70  D7F0               	goto	l1980
  1841  001B72  D000               	goto	l915
  1842  001B74                     l915:
  1843  001B74  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1844  001B78  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1845  001B7C  0012               	return		;funcret
  1846  001B7E                     __end_of___lwmod:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           prodh	equ	0xFF4
  1853                           prodl	equ	0xFF3
  1854                           postinc0	equ	0xFEE
  1855                           wreg	equ	0xFE8
  1856                           postdec1	equ	0xFE5
  1857                           fsr1l	equ	0xFE1
  1858                           indf2	equ	0xFDF
  1859                           postinc2	equ	0xFDE
  1860                           postdec2	equ	0xFDD
  1861                           fsr2h	equ	0xFDA
  1862                           fsr2l	equ	0xFD9
  1863                           status	equ	0xFD8
  1864                           
  1865 ;; *************** function ___lwdiv *****************
  1866 ;; Defined at:
  1867 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  dividend        2    0[COMRAM] unsigned int 
  1870 ;;  divisor         2    2[COMRAM] unsigned int 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  quotient        2    4[COMRAM] unsigned int 
  1873 ;;  counter         1    6[COMRAM] unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2    0[COMRAM] unsigned int 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1884 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;Total ram usage:        7 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_sprintf
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text7
  1897  001A82                     __ptext7:
  1898                           	opt stack 0
  1899  001A82                     ___lwdiv:
  1900                           	opt stack 28
  1901                           
  1902                           ;incstack = 0
  1903  001A82  0E00               	movlw	0
  1904  001A84  6E06               	movwf	___lwdiv@quotient+1,c
  1905  001A86  0E00               	movlw	0
  1906  001A88  6E05               	movwf	___lwdiv@quotient,c
  1907  001A8A  5003               	movf	___lwdiv@divisor,w,c
  1908  001A8C  1004               	iorwf	___lwdiv@divisor+1,w,c
  1909  001A8E  B4D8               	btfsc	status,2,c
  1910  001A90  D021               	goto	l905
  1911  001A92  0E01               	movlw	1
  1912  001A94  6E07               	movwf	___lwdiv@counter,c
  1913  001A96  D005               	goto	l1958
  1914  001A98                     l1956:
  1915  001A98  90D8               	bcf	status,0,c
  1916  001A9A  3603               	rlcf	___lwdiv@divisor,f,c
  1917  001A9C  3604               	rlcf	___lwdiv@divisor+1,f,c
  1918  001A9E  2A07               	incf	___lwdiv@counter,f,c
  1919  001AA0  D000               	goto	l1958
  1920  001AA2                     l1958:
  1921  001AA2  BE04               	btfsc	___lwdiv@divisor+1,7,c
  1922  001AA4  D002               	goto	l1960
  1923  001AA6  D7F8               	goto	l1956
  1924  001AA8  D000               	goto	l1960
  1925  001AAA                     l1960:
  1926  001AAA  90D8               	bcf	status,0,c
  1927  001AAC  3605               	rlcf	___lwdiv@quotient,f,c
  1928  001AAE  3606               	rlcf	___lwdiv@quotient+1,f,c
  1929  001AB0  5003               	movf	___lwdiv@divisor,w,c
  1930  001AB2  5C01               	subwf	___lwdiv@dividend,w,c
  1931  001AB4  5004               	movf	___lwdiv@divisor+1,w,c
  1932  001AB6  5802               	subwfb	___lwdiv@dividend+1,w,c
  1933  001AB8  A0D8               	btfss	status,0,c
  1934  001ABA  D006               	goto	l1968
  1935  001ABC  5003               	movf	___lwdiv@divisor,w,c
  1936  001ABE  5E01               	subwf	___lwdiv@dividend,f,c
  1937  001AC0  5004               	movf	___lwdiv@divisor+1,w,c
  1938  001AC2  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1939  001AC4  8005               	bsf	___lwdiv@quotient,0,c
  1940  001AC6  D000               	goto	l1968
  1941  001AC8                     l1968:
  1942  001AC8  90D8               	bcf	status,0,c
  1943  001ACA  3204               	rrcf	___lwdiv@divisor+1,f,c
  1944  001ACC  3203               	rrcf	___lwdiv@divisor,f,c
  1945  001ACE  2E07               	decfsz	___lwdiv@counter,f,c
  1946  001AD0  D7EC               	goto	l1960
  1947  001AD2  D000               	goto	l905
  1948  001AD4                     l905:
  1949  001AD4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1950  001AD8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1951  001ADC  0012               	return		;funcret
  1952  001ADE                     __end_of___lwdiv:
  1953                           	opt stack 0
  1954                           tblptru	equ	0xFF8
  1955                           tblptrh	equ	0xFF7
  1956                           tblptrl	equ	0xFF6
  1957                           tablat	equ	0xFF5
  1958                           prodh	equ	0xFF4
  1959                           prodl	equ	0xFF3
  1960                           postinc0	equ	0xFEE
  1961                           wreg	equ	0xFE8
  1962                           postdec1	equ	0xFE5
  1963                           fsr1l	equ	0xFE1
  1964                           indf2	equ	0xFDF
  1965                           postinc2	equ	0xFDE
  1966                           postdec2	equ	0xFDD
  1967                           fsr2h	equ	0xFDA
  1968                           fsr2l	equ	0xFD9
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function _lcd_putrs *****************
  1972 ;; Defined at:
  1973 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  1976 ;;		 -> STR_5(7), STR_4(7), buffer2(20), STR_1(7), 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;		None               void
  1981 ;; Registers used:
  1982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;Total ram usage:        2 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    4
  1995 ;; This function calls:
  1996 ;;		_lcd_putc
  1997 ;; This function is called by:
  1998 ;;		_caratula
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text8
  2003  001ADE                     __ptext8:
  2004                           	opt stack 0
  2005  001ADE                     _lcd_putrs:
  2006                           	opt stack 25
  2007                           
  2008                           ;unmc_lcd_216.c: 223: while(*ptr){
  2009                           
  2010                           ;incstack = 0
  2011  001ADE  D015               	goto	l2104
  2012  001AE0                     l2100:
  2013                           
  2014                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  2015  001AE0  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2016  001AE4  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2017  001AE8  6AF8               	clrf	tblptru,c
  2018  001AEA  0E0E               	movlw	(high __ramtop+-1)
  2019  001AEC  64F7               	cpfsgt	tblptrh,c
  2020  001AEE  D003               	bra	u1397
  2021  001AF0  0008               	tblrd		*
  2022  001AF2  50F5               	movf	tablat,w,c
  2023  001AF4  D005               	bra	u1390
  2024  001AF6                     u1397:
  2025  001AF6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2026  001AFA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2027  001AFE  50EF               	movf	indf0,w,c
  2028  001B00                     u1390:
  2029  001B00  ECBF  F00D         	call	_lcd_putc
  2030  001B04  4A09               	infsnz	lcd_putrs@ptr,f,c
  2031  001B06  2A0A               	incf	lcd_putrs@ptr+1,f,c
  2032  001B08  D000               	goto	l2104
  2033  001B0A                     l2104:
  2034  001B0A  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2035  001B0E  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2036  001B12  6AF8               	clrf	tblptru,c
  2037  001B14  0E0E               	movlw	(high __ramtop+-1)
  2038  001B16  64F7               	cpfsgt	tblptrh,c
  2039  001B18  D003               	bra	u1407
  2040  001B1A  0008               	tblrd		*
  2041  001B1C  50F5               	movf	tablat,w,c
  2042  001B1E  D005               	bra	u1400
  2043  001B20                     u1407:
  2044  001B20  CFF6 FFE9          	movff	tblptrl,fsr0l
  2045  001B24  CFF7 FFEA          	movff	tblptrh,fsr0h
  2046  001B28  50EF               	movf	indf0,w,c
  2047  001B2A                     u1400:
  2048  001B2A  0900               	iorlw	0
  2049  001B2C  A4D8               	btfss	status,2,c
  2050  001B2E  D7D8               	goto	l2100
  2051  001B30  0012               	return		;funcret
  2052  001B32                     __end_of_lcd_putrs:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           prodh	equ	0xFF4
  2059                           prodl	equ	0xFF3
  2060                           indf0	equ	0xFEF
  2061                           postinc0	equ	0xFEE
  2062                           fsr0h	equ	0xFEA
  2063                           fsr0l	equ	0xFE9
  2064                           wreg	equ	0xFE8
  2065                           postdec1	equ	0xFE5
  2066                           fsr1l	equ	0xFE1
  2067                           indf2	equ	0xFDF
  2068                           postinc2	equ	0xFDE
  2069                           postdec2	equ	0xFDD
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function _lcd_putc *****************
  2075 ;; Defined at:
  2076 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  c               1    wreg     unsigned char 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  c               1    7[COMRAM] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;		None               void
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2094 ;;Total ram usage:        1 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    3
  2097 ;; This function calls:
  2098 ;;		_lcd_gotoxy
  2099 ;;		_lcd_send_byte
  2100 ;; This function is called by:
  2101 ;;		_lcd_putrs
  2102 ;;		_lcd_puts
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text9
  2107  001B7E                     __ptext9:
  2108                           	opt stack 0
  2109  001B7E                     _lcd_putc:
  2110                           	opt stack 25
  2111                           
  2112                           ;incstack = 0
  2113                           ;lcd_putc@c stored from wreg
  2114  001B7E  6E08               	movwf	lcd_putc@c,c
  2115                           
  2116                           ;unmc_lcd_216.c: 173: switch(c){
  2117  001B80  D018               	goto	l1886
  2118  001B82                     l1876:
  2119                           
  2120                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  2121  001B82  0E01               	movlw	1
  2122  001B84  6E03               	movwf	lcd_send_byte@n,c
  2123  001B86  0E00               	movlw	0
  2124  001B88  EC2B  F00E         	call	_lcd_send_byte
  2125                           
  2126                           ;unmc_lcd_216.c: 176: break;
  2127  001B8C  0012               	return	
  2128  001B8E                     l1878:
  2129                           
  2130                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  2131  001B8E  0E02               	movlw	2
  2132  001B90  6E05               	movwf	lcd_gotoxy@y,c
  2133  001B92  0E01               	movlw	1
  2134  001B94  EC58  F00E         	call	_lcd_gotoxy
  2135                           
  2136                           ;unmc_lcd_216.c: 179: break;
  2137  001B98  0012               	return	
  2138  001B9A                     l1880:
  2139                           
  2140                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  2141  001B9A  0E10               	movlw	16
  2142  001B9C  6E03               	movwf	lcd_send_byte@n,c
  2143  001B9E  0E00               	movlw	0
  2144  001BA0  EC2B  F00E         	call	_lcd_send_byte
  2145                           
  2146                           ;unmc_lcd_216.c: 182: break;
  2147  001BA4  0012               	return	
  2148  001BA6                     l1882:
  2149                           
  2150                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  2151  001BA6  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  2152  001BAA  0E01               	movlw	1
  2153  001BAC  EC2B  F00E         	call	_lcd_send_byte
  2154                           
  2155                           ;unmc_lcd_216.c: 186: }
  2156                           
  2157                           ;unmc_lcd_216.c: 185: break;
  2158  001BB0  0012               	return	
  2159  001BB2                     l1886:
  2160  001BB2  5008               	movf	lcd_putc@c,w,c
  2161                           
  2162                           ; Switch size 1, requested type "space"
  2163                           ; Number of cases is 3, Range of values is 8 to 12
  2164                           ; switch strategies available:
  2165                           ; Name         Instructions Cycles
  2166                           ; simple_byte           10     6 (average)
  2167                           ;	Chosen strategy is simple_byte
  2168  001BB4  0A08               	xorlw	8	; case 8
  2169  001BB6  B4D8               	btfsc	status,2,c
  2170  001BB8  D7F0               	goto	l1880
  2171  001BBA  0A02               	xorlw	2	; case 10
  2172  001BBC  B4D8               	btfsc	status,2,c
  2173  001BBE  D7E7               	goto	l1878
  2174  001BC0  0A06               	xorlw	6	; case 12
  2175  001BC2  B4D8               	btfsc	status,2,c
  2176  001BC4  D7DE               	goto	l1876
  2177  001BC6  D7EF               	goto	l1882
  2178  001BC8  0012               	return		;funcret
  2179  001BCA                     __end_of_lcd_putc:
  2180                           	opt stack 0
  2181                           tblptru	equ	0xFF8
  2182                           tblptrh	equ	0xFF7
  2183                           tblptrl	equ	0xFF6
  2184                           tablat	equ	0xFF5
  2185                           prodh	equ	0xFF4
  2186                           prodl	equ	0xFF3
  2187                           indf0	equ	0xFEF
  2188                           postinc0	equ	0xFEE
  2189                           fsr0h	equ	0xFEA
  2190                           fsr0l	equ	0xFE9
  2191                           wreg	equ	0xFE8
  2192                           postdec1	equ	0xFE5
  2193                           fsr1l	equ	0xFE1
  2194                           indf2	equ	0xFDF
  2195                           postinc2	equ	0xFDE
  2196                           postdec2	equ	0xFDD
  2197                           fsr2h	equ	0xFDA
  2198                           fsr2l	equ	0xFD9
  2199                           status	equ	0xFD8
  2200                           
  2201 ;; *************** function _lcd_gotoxy *****************
  2202 ;; Defined at:
  2203 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  x               1    wreg     unsigned char 
  2206 ;;  y               1    4[COMRAM] unsigned char 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  x               1    5[COMRAM] unsigned char 
  2209 ;;  address         1    6[COMRAM] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;		None               void
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2219 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2222 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2223 ;;Total ram usage:        3 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    2
  2226 ;; This function calls:
  2227 ;;		_lcd_send_byte
  2228 ;; This function is called by:
  2229 ;;		_caratula
  2230 ;;		_main
  2231 ;;		_lcd_putc
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text10
  2236  001CB0                     __ptext10:
  2237                           	opt stack 0
  2238  001CB0                     _lcd_gotoxy:
  2239                           	opt stack 28
  2240                           
  2241                           ;incstack = 0
  2242                           ;lcd_gotoxy@x stored from wreg
  2243  001CB0  6E06               	movwf	lcd_gotoxy@x,c
  2244                           
  2245                           ;unmc_lcd_216.c: 159: int8 address;
  2246                           ;unmc_lcd_216.c: 161: if(y != 1)
  2247  001CB2  0405               	decf	lcd_gotoxy@y,w,c
  2248  001CB4  B4D8               	btfsc	status,2,c
  2249  001CB6  D002               	goto	l1732
  2250                           
  2251                           ;unmc_lcd_216.c: 162: address = 0x40;
  2252  001CB8  0E40               	movlw	64
  2253  001CBA  D001               	goto	L1
  2254  001CBC                     l1732:
  2255                           
  2256                           ;unmc_lcd_216.c: 163: else
  2257                           ;unmc_lcd_216.c: 164: address=0;
  2258  001CBC  0E00               	movlw	0
  2259  001CBE                     L1:
  2260  001CBE  6E07               	movwf	lcd_gotoxy@address,c
  2261  001CC0  D000               	goto	l1734
  2262  001CC2                     l1734:
  2263                           
  2264                           ;unmc_lcd_216.c: 166: address += x-1;
  2265  001CC2  0406               	decf	lcd_gotoxy@x,w,c
  2266  001CC4  2607               	addwf	lcd_gotoxy@address,f,c
  2267                           
  2268                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2269  001CC6  5007               	movf	lcd_gotoxy@address,w,c
  2270  001CC8  0980               	iorlw	128
  2271  001CCA  6E03               	movwf	lcd_send_byte@n,c
  2272  001CCC  0E00               	movlw	0
  2273  001CCE  EC2B  F00E         	call	_lcd_send_byte
  2274  001CD2  0012               	return		;funcret
  2275  001CD4                     __end_of_lcd_gotoxy:
  2276                           	opt stack 0
  2277                           tblptru	equ	0xFF8
  2278                           tblptrh	equ	0xFF7
  2279                           tblptrl	equ	0xFF6
  2280                           tablat	equ	0xFF5
  2281                           prodh	equ	0xFF4
  2282                           prodl	equ	0xFF3
  2283                           indf0	equ	0xFEF
  2284                           postinc0	equ	0xFEE
  2285                           fsr0h	equ	0xFEA
  2286                           fsr0l	equ	0xFE9
  2287                           wreg	equ	0xFE8
  2288                           postdec1	equ	0xFE5
  2289                           fsr1l	equ	0xFE1
  2290                           indf2	equ	0xFDF
  2291                           postinc2	equ	0xFDE
  2292                           postdec2	equ	0xFDD
  2293                           fsr2h	equ	0xFDA
  2294                           fsr2l	equ	0xFD9
  2295                           status	equ	0xFD8
  2296                           
  2297 ;; *************** function _Setup *****************
  2298 ;; Defined at:
  2299 ;;		line 67 in file "main.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;		None
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;		None               void
  2306 ;; Registers used:
  2307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2317 ;;Total ram usage:        0 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    3
  2320 ;; This function calls:
  2321 ;;		_Write_RTC
  2322 ;;		_lcd_comand
  2323 ;;		_lcd_init
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text11
  2330  001BCA                     __ptext11:
  2331                           	opt stack 0
  2332  001BCA                     _Setup:
  2333                           	opt stack 27
  2334                           
  2335                           ;main.c: 69: OSCTUNEbits.INTSRC=1;
  2336                           
  2337                           ;incstack = 0
  2338  001BCA  8E9B               	bsf	3995,7,c	;volatile
  2339                           
  2340                           ;main.c: 70: OSCTUNEbits.PLLEN=0;
  2341  001BCC  9C9B               	bcf	3995,6,c	;volatile
  2342                           
  2343                           ;main.c: 71: OSCCONbits.IRCF0=1;
  2344  001BCE  88D3               	bsf	4051,4,c	;volatile
  2345                           
  2346                           ;main.c: 72: OSCCONbits.IRCF1=1;
  2347  001BD0  8AD3               	bsf	4051,5,c	;volatile
  2348                           
  2349                           ;main.c: 73: OSCCONbits.IRCF2=1;
  2350  001BD2  8CD3               	bsf	4051,6,c	;volatile
  2351                           
  2352                           ;main.c: 74: OSCCONbits.SCS0=0;
  2353  001BD4  90D3               	bcf	4051,0,c	;volatile
  2354                           
  2355                           ;main.c: 75: OSCCONbits.SCS1=0;
  2356  001BD6  92D3               	bcf	4051,1,c	;volatile
  2357                           
  2358                           ;main.c: 76: TRISA = 0b11111111;
  2359  001BD8  6892               	setf	3986,c	;volatile
  2360                           
  2361                           ;main.c: 77: TRISB = 0;
  2362  001BDA  0E00               	movlw	0
  2363  001BDC  6E93               	movwf	3987,c	;volatile
  2364                           
  2365                           ;main.c: 78: TRISC = 0b00000111;
  2366  001BDE  0E07               	movlw	7
  2367  001BE0  6E94               	movwf	3988,c	;volatile
  2368                           
  2369                           ;main.c: 82: ANCON0=0b11111111;
  2370  001BE2  010F               	movlb	15	; () banked
  2371  001BE4  6948               	setf	72,b	;volatile
  2372                           
  2373                           ;main.c: 83: ANCON0=0b10010111;
  2374  001BE6  0E97               	movlw	151
  2375  001BE8  010F               	movlb	15	; () banked
  2376  001BEA  6F48               	movwf	72,b	;volatile
  2377                           
  2378                           ;main.c: 84: ADCON0=0b00101101;
  2379  001BEC  0E2D               	movlw	45
  2380  001BEE  6EC2               	movwf	4034,c	;volatile
  2381                           
  2382                           ;main.c: 85: ADCON1=0b00010000;
  2383  001BF0  0E10               	movlw	16
  2384  001BF2  6EC1               	movwf	4033,c	;volatile
  2385                           
  2386                           ; BSR set to: 15
  2387                           ;main.c: 86: RTCCFGbits.RTCEN=1;
  2388  001BF4  010F               	movlb	15	; () banked
  2389  001BF6  8F3F               	bsf	63,7,b	;volatile
  2390                           
  2391                           ; BSR set to: 15
  2392                           ;main.c: 87: RTCCFGbits.RTCWREN=1;
  2393  001BF8  010F               	movlb	15	; () banked
  2394  001BFA  8B3F               	bsf	63,5,b	;volatile
  2395                           
  2396                           ; BSR set to: 15
  2397                           ;main.c: 88: T1CONbits.T1OSCEN=1;
  2398  001BFC  86CD               	bsf	4045,3,c	;volatile
  2399                           
  2400                           ; BSR set to: 15
  2401                           ;main.c: 89: Write_RTC();
  2402  001BFE  ECD0  F008         	call	_Write_RTC	;wreg free
  2403                           
  2404                           ;main.c: 90: lcd_init();
  2405  001C02  EC8F  F00C         	call	_lcd_init	;wreg free
  2406                           
  2407                           ;main.c: 91: lcd_comand(0b00001111);
  2408  001C06  0E0F               	movlw	15
  2409  001C08  ECA0  F00E         	call	_lcd_comand
  2410                           
  2411                           ;main.c: 92: LATBbits.LATB1 = 0;;
  2412  001C0C  928A               	bcf	3978,1,c	;volatile
  2413                           
  2414                           ;main.c: 93: LATBbits.LATB0 = 0;;
  2415  001C0E  908A               	bcf	3978,0,c	;volatile
  2416  001C10  0012               	return		;funcret
  2417  001C12                     __end_of_Setup:
  2418                           	opt stack 0
  2419                           tblptru	equ	0xFF8
  2420                           tblptrh	equ	0xFF7
  2421                           tblptrl	equ	0xFF6
  2422                           tablat	equ	0xFF5
  2423                           prodh	equ	0xFF4
  2424                           prodl	equ	0xFF3
  2425                           indf0	equ	0xFEF
  2426                           postinc0	equ	0xFEE
  2427                           fsr0h	equ	0xFEA
  2428                           fsr0l	equ	0xFE9
  2429                           wreg	equ	0xFE8
  2430                           postdec1	equ	0xFE5
  2431                           fsr1l	equ	0xFE1
  2432                           indf2	equ	0xFDF
  2433                           postinc2	equ	0xFDE
  2434                           postdec2	equ	0xFDD
  2435                           fsr2h	equ	0xFDA
  2436                           fsr2l	equ	0xFD9
  2437                           status	equ	0xFD8
  2438                           
  2439 ;; *************** function _lcd_init *****************
  2440 ;; Defined at:
  2441 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  i               1    4[COMRAM] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;		None               void
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2459 ;;Total ram usage:        1 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    2
  2462 ;; This function calls:
  2463 ;;		_Delay1KTCYx
  2464 ;;		_lcd_send_byte
  2465 ;;		_lcd_send_nibble
  2466 ;; This function is called by:
  2467 ;;		_Setup
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text12
  2472  00191E                     __ptext12:
  2473                           	opt stack 0
  2474  00191E                     _lcd_init:
  2475                           	opt stack 27
  2476                           
  2477                           ;unmc_lcd_216.c: 120: int8 i;
  2478                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2479                           
  2480                           ;incstack = 0
  2481  00191E  9693               	bcf	3987,3,c	;volatile
  2482                           
  2483                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2484  001920  9493               	bcf	3987,2,c	;volatile
  2485                           
  2486                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2487  001922  968A               	bcf	3978,3,c	;volatile
  2488                           
  2489                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2490  001924  948A               	bcf	3978,2,c	;volatile
  2491                           
  2492                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2493  001926  9893               	bcf	3987,4,c	;volatile
  2494                           
  2495                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2496  001928  9A93               	bcf	3987,5,c	;volatile
  2497                           
  2498                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2499  00192A  9C93               	bcf	3987,6,c	;volatile
  2500                           
  2501                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2502  00192C  9E93               	bcf	3987,7,c	;volatile
  2503                           
  2504                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2505  00192E  0E0A               	movlw	10
  2506  001930  EC85  F00E         	call	_Delay1KTCYx
  2507                           
  2508                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2509  001934  0E0A               	movlw	10
  2510  001936  EC85  F00E         	call	_Delay1KTCYx
  2511                           
  2512                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2513  00193A  0E0A               	movlw	10
  2514  00193C  EC85  F00E         	call	_Delay1KTCYx
  2515                           
  2516                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2517  001940  0E00               	movlw	0
  2518  001942  6E05               	movwf	lcd_init@i,c
  2519  001944                     l2202:
  2520  001944  0E02               	movlw	2
  2521  001946  6405               	cpfsgt	lcd_init@i,c
  2522  001948  D001               	goto	l2206
  2523  00194A  D008               	goto	l2212
  2524  00194C                     l2206:
  2525                           
  2526                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2527  00194C  0E03               	movlw	3
  2528  00194E  ECCF  F00C         	call	_lcd_send_nibble
  2529                           
  2530                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2531  001952  0E0A               	movlw	10
  2532  001954  EC85  F00E         	call	_Delay1KTCYx
  2533  001958  2A05               	incf	lcd_init@i,f,c
  2534  00195A  D7F4               	goto	l2202
  2535  00195C                     l2212:
  2536                           
  2537                           ;unmc_lcd_216.c: 146: }
  2538                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2539  00195C  0E02               	movlw	2
  2540  00195E  ECCF  F00C         	call	_lcd_send_nibble
  2541                           
  2542                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2543  001962  0E00               	movlw	0
  2544  001964  6E05               	movwf	lcd_init@i,c
  2545  001966  0E03               	movlw	3
  2546  001968  6405               	cpfsgt	lcd_init@i,c
  2547  00196A  D002               	goto	l2220
  2548  00196C  0012               	return	
  2549  00196E  0012               	return	
  2550  001970                     l2220:
  2551                           
  2552                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2553  001970  5005               	movf	lcd_init@i,w,c
  2554  001972  0D01               	mullw	1
  2555  001974  0E0B               	movlw	low _LCD_INIT_STRING
  2556  001976  24F3               	addwf	prodl,w,c
  2557  001978  6EF6               	movwf	tblptrl,c
  2558  00197A  0E0F               	movlw	high _LCD_INIT_STRING
  2559  00197C  20F4               	addwfc	prodh,w,c
  2560  00197E  6EF7               	movwf	tblptrh,c
  2561  001980                     	if	0	;There are less than 3 active tblptr bytes
  2562  001980                     	endif
  2563  001980  0008               	tblrd		*
  2564  001982  CFF5 F003          	movff	tablat,lcd_send_byte@n
  2565  001986  0E00               	movlw	0
  2566  001988  EC2B  F00E         	call	_lcd_send_byte
  2567                           
  2568                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2569  00198C  0E0A               	movlw	10
  2570  00198E  EC85  F00E         	call	_Delay1KTCYx
  2571  001992  2A05               	incf	lcd_init@i,f,c
  2572  001994  0E03               	movlw	3
  2573  001996  6405               	cpfsgt	lcd_init@i,c
  2574  001998  D7EB               	goto	l2220
  2575  00199A  0012               	return	
  2576  00199C  0012               	return		;funcret
  2577  00199E                     __end_of_lcd_init:
  2578                           	opt stack 0
  2579                           tblptru	equ	0xFF8
  2580                           tblptrh	equ	0xFF7
  2581                           tblptrl	equ	0xFF6
  2582                           tablat	equ	0xFF5
  2583                           prodh	equ	0xFF4
  2584                           prodl	equ	0xFF3
  2585                           indf0	equ	0xFEF
  2586                           postinc0	equ	0xFEE
  2587                           fsr0h	equ	0xFEA
  2588                           fsr0l	equ	0xFE9
  2589                           wreg	equ	0xFE8
  2590                           postdec1	equ	0xFE5
  2591                           fsr1l	equ	0xFE1
  2592                           indf2	equ	0xFDF
  2593                           postinc2	equ	0xFDE
  2594                           postdec2	equ	0xFDD
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8
  2598                           
  2599 ;; *************** function _Delay1KTCYx *****************
  2600 ;; Defined at:
  2601 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  unit            1    wreg     unsigned char 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  unit            1    0[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		wreg
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;Total ram usage:        1 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_lcd_init
  2625 ;;		_DelayPORXLCD
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text13
  2630  001D0A                     __ptext13:
  2631                           	opt stack 0
  2632  001D0A                     _Delay1KTCYx:
  2633                           	opt stack 28
  2634                           
  2635                           ;incstack = 0
  2636                           ;Delay1KTCYx@unit stored from wreg
  2637  001D0A  6E01               	movwf	Delay1KTCYx@unit,c
  2638  001D0C  0EFA               	movlw	250
  2639  001D0E                     u1797:
  2640  001D0E  F000               	nop	
  2641  001D10  2EE8               	decfsz	wreg,f,c
  2642  001D12  D7FD               	goto	u1797
  2643  001D14  2E01               	decfsz	Delay1KTCYx@unit,f,c
  2644  001D16  D7FA               	goto	l1034
  2645  001D18  0012               	return	
  2646  001D1A  0012               	return		;funcret
  2647  001D1C                     __end_of_Delay1KTCYx:
  2648                           	opt stack 0
  2649                           tblptru	equ	0xFF8
  2650                           tblptrh	equ	0xFF7
  2651                           tblptrl	equ	0xFF6
  2652                           tablat	equ	0xFF5
  2653                           prodh	equ	0xFF4
  2654                           prodl	equ	0xFF3
  2655                           indf0	equ	0xFEF
  2656                           postinc0	equ	0xFEE
  2657                           fsr0h	equ	0xFEA
  2658                           fsr0l	equ	0xFE9
  2659                           wreg	equ	0xFE8
  2660                           postdec1	equ	0xFE5
  2661                           fsr1l	equ	0xFE1
  2662                           indf2	equ	0xFDF
  2663                           postinc2	equ	0xFDE
  2664                           postdec2	equ	0xFDD
  2665                           fsr2h	equ	0xFDA
  2666                           fsr2l	equ	0xFD9
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _lcd_comand *****************
  2670 ;; Defined at:
  2671 ;;		line 189 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  d               1    wreg     unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  d               1    4[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;		None               void
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;Total ram usage:        1 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    2
  2692 ;; This function calls:
  2693 ;;		_lcd_send_byte
  2694 ;; This function is called by:
  2695 ;;		_caratula
  2696 ;;		_Setup
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text14
  2701  001D40                     __ptext14:
  2702                           	opt stack 0
  2703  001D40                     _lcd_comand:
  2704                           	opt stack 27
  2705                           
  2706                           ;incstack = 0
  2707                           ;lcd_comand@d stored from wreg
  2708  001D40  6E05               	movwf	lcd_comand@d,c
  2709                           
  2710                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  2711  001D42  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  2712  001D46  0E00               	movlw	0
  2713  001D48  EC2B  F00E         	call	_lcd_send_byte
  2714  001D4C  0012               	return		;funcret
  2715  001D4E                     __end_of_lcd_comand:
  2716                           	opt stack 0
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           prodh	equ	0xFF4
  2722                           prodl	equ	0xFF3
  2723                           indf0	equ	0xFEF
  2724                           postinc0	equ	0xFEE
  2725                           fsr0h	equ	0xFEA
  2726                           fsr0l	equ	0xFE9
  2727                           wreg	equ	0xFE8
  2728                           postdec1	equ	0xFE5
  2729                           fsr1l	equ	0xFE1
  2730                           indf2	equ	0xFDF
  2731                           postinc2	equ	0xFDE
  2732                           postdec2	equ	0xFDD
  2733                           fsr2h	equ	0xFDA
  2734                           fsr2l	equ	0xFD9
  2735                           status	equ	0xFD8
  2736                           
  2737 ;; *************** function _lcd_send_byte *****************
  2738 ;; Defined at:
  2739 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  address         1    wreg     unsigned char 
  2742 ;;  n               1    2[COMRAM] unsigned char 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  address         1    3[COMRAM] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;		None               void
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2754 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;Total ram usage:        2 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		_Delay100TCYx
  2763 ;;		_lcd_send_nibble
  2764 ;; This function is called by:
  2765 ;;		_lcd_init
  2766 ;;		_lcd_gotoxy
  2767 ;;		_lcd_putc
  2768 ;;		_lcd_comand
  2769 ;;		_lcd_setcursor_vb
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text15
  2774  001C56                     __ptext15:
  2775                           	opt stack 0
  2776  001C56                     _lcd_send_byte:
  2777                           	opt stack 28
  2778                           
  2779                           ;incstack = 0
  2780                           ;lcd_send_byte@address stored from wreg
  2781  001C56  6E04               	movwf	lcd_send_byte@address,c
  2782                           
  2783                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  2784  001C58  968A               	bcf	3978,3,c	;volatile
  2785                           
  2786                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  2787  001C5A  0E02               	movlw	2
  2788  001C5C  EC8E  F00E         	call	_Delay100TCYx
  2789                           
  2790                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  2791  001C60  9893               	bcf	3987,4,c	;volatile
  2792                           
  2793                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  2794  001C62  9A93               	bcf	3987,5,c	;volatile
  2795                           
  2796                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  2797  001C64  9C93               	bcf	3987,6,c	;volatile
  2798                           
  2799                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  2800  001C66  9E93               	bcf	3987,7,c	;volatile
  2801                           
  2802                           ;unmc_lcd_216.c: 101: if(address)
  2803  001C68  5004               	movf	lcd_send_byte@address,w,c
  2804  001C6A  B4D8               	btfsc	status,2,c
  2805  001C6C  D002               	goto	l182
  2806                           
  2807                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  2808  001C6E  868A               	bsf	3978,3,c	;volatile
  2809  001C70  D001               	goto	l183
  2810  001C72                     l182:
  2811                           
  2812                           ;unmc_lcd_216.c: 103: else
  2813                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  2814  001C72  968A               	bcf	3978,3,c	;volatile
  2815  001C74                     l183:
  2816                           
  2817                           ;unmc_lcd_216.c: 106: __nop();
  2818  001C74  F000               	nop	
  2819                           
  2820                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  2821  001C76  3803               	swapf	lcd_send_byte@n,w,c
  2822  001C78  0B0F               	andlw	15
  2823  001C7A  ECCF  F00C         	call	_lcd_send_nibble
  2824                           
  2825                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  2826  001C7E  5003               	movf	lcd_send_byte@n,w,c
  2827  001C80  0B0F               	andlw	15
  2828  001C82  ECCF  F00C         	call	_lcd_send_nibble
  2829  001C86  0012               	return		;funcret
  2830  001C88                     __end_of_lcd_send_byte:
  2831                           	opt stack 0
  2832                           tblptru	equ	0xFF8
  2833                           tblptrh	equ	0xFF7
  2834                           tblptrl	equ	0xFF6
  2835                           tablat	equ	0xFF5
  2836                           prodh	equ	0xFF4
  2837                           prodl	equ	0xFF3
  2838                           indf0	equ	0xFEF
  2839                           postinc0	equ	0xFEE
  2840                           fsr0h	equ	0xFEA
  2841                           fsr0l	equ	0xFE9
  2842                           wreg	equ	0xFE8
  2843                           postdec1	equ	0xFE5
  2844                           fsr1l	equ	0xFE1
  2845                           indf2	equ	0xFDF
  2846                           postinc2	equ	0xFDE
  2847                           postdec2	equ	0xFDD
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _lcd_send_nibble *****************
  2853 ;; Defined at:
  2854 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  nibble          1    wreg     unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  nibble          1    1[COMRAM] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;		None               void
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2872 ;;Total ram usage:        2 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_lcd_send_byte
  2878 ;;		_lcd_init
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text16
  2883  00199E                     __ptext16:
  2884                           	opt stack 0
  2885  00199E                     _lcd_send_nibble:
  2886                           	opt stack 28
  2887                           
  2888                           ;incstack = 0
  2889                           ;lcd_send_nibble@nibble stored from wreg
  2890  00199E  6E02               	movwf	lcd_send_nibble@nibble,c
  2891                           
  2892                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  2893  0019A0  A002               	btfss	lcd_send_nibble@nibble,0,c
  2894  0019A2  D003               	goto	u890
  2895  0019A4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2896  0019A6  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2897  0019A8  D001               	goto	u908
  2898  0019AA                     u890:
  2899  0019AA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2900  0019AC                     u908:
  2901  0019AC  3A01               	swapf	??_lcd_send_nibble,f,c
  2902  0019AE  508A               	movf	3978,w,c	;volatile
  2903  0019B0  1801               	xorwf	??_lcd_send_nibble,w,c
  2904  0019B2  0BEF               	andlw	-17
  2905  0019B4  1801               	xorwf	??_lcd_send_nibble,w,c
  2906  0019B6  6E8A               	movwf	3978,c	;volatile
  2907                           
  2908                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  2909  0019B8  A202               	btfss	lcd_send_nibble@nibble,1,c
  2910  0019BA  D003               	goto	u910
  2911  0019BC  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2912  0019BE  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2913  0019C0  D001               	goto	u928
  2914  0019C2                     u910:
  2915  0019C2  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2916  0019C4                     u928:
  2917  0019C4  3A01               	swapf	??_lcd_send_nibble,f,c
  2918  0019C6  4601               	rlncf	??_lcd_send_nibble,f,c
  2919  0019C8  508A               	movf	3978,w,c	;volatile
  2920  0019CA  1801               	xorwf	??_lcd_send_nibble,w,c
  2921  0019CC  0BDF               	andlw	-33
  2922  0019CE  1801               	xorwf	??_lcd_send_nibble,w,c
  2923  0019D0  6E8A               	movwf	3978,c	;volatile
  2924                           
  2925                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  2926  0019D2  A402               	btfss	lcd_send_nibble@nibble,2,c
  2927  0019D4  D003               	goto	u930
  2928  0019D6  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2929  0019D8  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2930  0019DA  D001               	goto	u948
  2931  0019DC                     u930:
  2932  0019DC  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2933  0019DE                     u948:
  2934  0019DE  3A01               	swapf	??_lcd_send_nibble,f,c
  2935  0019E0  4601               	rlncf	??_lcd_send_nibble,f,c
  2936  0019E2  4601               	rlncf	??_lcd_send_nibble,f,c
  2937  0019E4  508A               	movf	3978,w,c	;volatile
  2938  0019E6  1801               	xorwf	??_lcd_send_nibble,w,c
  2939  0019E8  0BBF               	andlw	-65
  2940  0019EA  1801               	xorwf	??_lcd_send_nibble,w,c
  2941  0019EC  6E8A               	movwf	3978,c	;volatile
  2942                           
  2943                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  2944  0019EE  A602               	btfss	lcd_send_nibble@nibble,3,c
  2945  0019F0  D003               	goto	u950
  2946  0019F2  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2947  0019F4  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  2948  0019F6  D001               	goto	u968
  2949  0019F8                     u950:
  2950  0019F8  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  2951  0019FA                     u968:
  2952  0019FA  3201               	rrcf	??_lcd_send_nibble,f,c
  2953  0019FC  3201               	rrcf	??_lcd_send_nibble,f,c
  2954  0019FE  508A               	movf	3978,w,c	;volatile
  2955  001A00  1801               	xorwf	??_lcd_send_nibble,w,c
  2956  001A02  0B7F               	andlw	-129
  2957  001A04  1801               	xorwf	??_lcd_send_nibble,w,c
  2958  001A06  6E8A               	movwf	3978,c	;volatile
  2959                           
  2960                           ;unmc_lcd_216.c: 32: __nop();
  2961  001A08  F000               	nop	
  2962                           
  2963                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  2964  001A0A  848A               	bsf	3978,2,c	;volatile
  2965                           
  2966                           ;unmc_lcd_216.c: 34: __nop();__nop();
  2967  001A0C  F000               	nop	
  2968  001A0E  F000               	nop	
  2969                           
  2970                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  2971  001A10  948A               	bcf	3978,2,c	;volatile
  2972  001A12  0012               	return		;funcret
  2973  001A14                     __end_of_lcd_send_nibble:
  2974                           	opt stack 0
  2975                           tblptru	equ	0xFF8
  2976                           tblptrh	equ	0xFF7
  2977                           tblptrl	equ	0xFF6
  2978                           tablat	equ	0xFF5
  2979                           prodh	equ	0xFF4
  2980                           prodl	equ	0xFF3
  2981                           indf0	equ	0xFEF
  2982                           postinc0	equ	0xFEE
  2983                           fsr0h	equ	0xFEA
  2984                           fsr0l	equ	0xFE9
  2985                           wreg	equ	0xFE8
  2986                           postdec1	equ	0xFE5
  2987                           fsr1l	equ	0xFE1
  2988                           indf2	equ	0xFDF
  2989                           postinc2	equ	0xFDE
  2990                           postdec2	equ	0xFDD
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _Delay100TCYx *****************
  2996 ;; Defined at:
  2997 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  unit            1    wreg     unsigned char 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  unit            1    0[COMRAM] unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;		None               void
  3004 ;; Registers used:
  3005 ;;		wreg
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3015 ;;Total ram usage:        1 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_lcd_send_byte
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text17
  3025  001D1C                     __ptext17:
  3026                           	opt stack 0
  3027  001D1C                     _Delay100TCYx:
  3028                           	opt stack 28
  3029                           
  3030                           ;incstack = 0
  3031                           ;Delay100TCYx@unit stored from wreg
  3032  001D1C  6E01               	movwf	Delay100TCYx@unit,c
  3033  001D1E  0E21               	movlw	33
  3034  001D20                     u1807:
  3035  001D20  2EE8               	decfsz	wreg,f,c
  3036  001D22  D7FE               	goto	u1807
  3037  001D24  F000               	nop	
  3038  001D26  2E01               	decfsz	Delay100TCYx@unit,f,c
  3039  001D28  D7FA               	goto	l1706
  3040  001D2A  0012               	return	
  3041  001D2C  0012               	return		;funcret
  3042  001D2E                     __end_of_Delay100TCYx:
  3043                           	opt stack 0
  3044                           tblptru	equ	0xFF8
  3045                           tblptrh	equ	0xFF7
  3046                           tblptrl	equ	0xFF6
  3047                           tablat	equ	0xFF5
  3048                           prodh	equ	0xFF4
  3049                           prodl	equ	0xFF3
  3050                           indf0	equ	0xFEF
  3051                           postinc0	equ	0xFEE
  3052                           fsr0h	equ	0xFEA
  3053                           fsr0l	equ	0xFE9
  3054                           wreg	equ	0xFE8
  3055                           postdec1	equ	0xFE5
  3056                           fsr1l	equ	0xFE1
  3057                           indf2	equ	0xFDF
  3058                           postinc2	equ	0xFDE
  3059                           postdec2	equ	0xFDD
  3060                           fsr2h	equ	0xFDA
  3061                           fsr2l	equ	0xFD9
  3062                           status	equ	0xFD8
  3063                           
  3064 ;; *************** function _Write_RTC *****************
  3065 ;; Defined at:
  3066 ;;		line 74 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;		None               void
  3073 ;; Registers used:
  3074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3084 ;;Total ram usage:        0 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    2
  3087 ;; This function calls:
  3088 ;;		_RtccWrOn
  3089 ;;		_RtccWriteDate
  3090 ;;		_RtccWriteTime
  3091 ;;		___awdiv
  3092 ;; This function is called by:
  3093 ;;		_Setup
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text18
  3098  0011A0                     __ptext18:
  3099                           	opt stack 0
  3100  0011A0                     _Write_RTC:
  3101                           	opt stack 27
  3102                           
  3103                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  3104                           
  3105                           ;incstack = 0
  3106  0011A0  EC97  F00E         	call	_RtccWrOn	;wreg free
  3107                           
  3108                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  3109  0011A4  80A3               	bsf	4003,0,c	;volatile
  3110                           
  3111                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  3112  0011A6  C037  F001         	movff	_segundo,___awdiv@dividend
  3113  0011AA  C038  F002         	movff	_segundo+1,___awdiv@dividend+1
  3114  0011AE  0E00               	movlw	0
  3115  0011B0  6E04               	movwf	___awdiv@divisor+1,c
  3116  0011B2  0E0A               	movlw	10
  3117  0011B4  6E03               	movwf	___awdiv@divisor,c
  3118  0011B6  ECFD  F00B         	call	___awdiv	;wreg free
  3119  0011BA  5001               	movf	?___awdiv,w,c
  3120  0011BC  6E4C               	movwf	_segundo_d,c
  3121                           
  3122                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  3123  0011BE  504C               	movf	_segundo_d,w,c
  3124  0011C0  0D0A               	mullw	10
  3125  0011C2  50F3               	movf	prodl,w,c
  3126  0011C4  0800               	sublw	0
  3127  0011C6  2437               	addwf	_segundo,w,c
  3128  0011C8  6E4D               	movwf	_segundo_u,c
  3129                           
  3130                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  3131  0011CA  504C               	movf	_segundo_d,w,c
  3132  0011CC  0D10               	mullw	16
  3133  0011CE  50F3               	movf	prodl,w,c
  3134  0011D0  244D               	addwf	_segundo_u,w,c
  3135  0011D2  6E3E               	movwf	_RtccTime+1,c
  3136                           
  3137                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  3138  0011D4  C058  F001         	movff	_minuto,___awdiv@dividend
  3139  0011D8  C059  F002         	movff	_minuto+1,___awdiv@dividend+1
  3140  0011DC  0E00               	movlw	0
  3141  0011DE  6E04               	movwf	___awdiv@divisor+1,c
  3142  0011E0  0E0A               	movlw	10
  3143  0011E2  6E03               	movwf	___awdiv@divisor,c
  3144  0011E4  ECFD  F00B         	call	___awdiv	;wreg free
  3145  0011E8  5001               	movf	?___awdiv,w,c
  3146  0011EA  6E4A               	movwf	_minuto_d,c
  3147                           
  3148                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  3149  0011EC  504A               	movf	_minuto_d,w,c
  3150  0011EE  0D0A               	mullw	10
  3151  0011F0  50F3               	movf	prodl,w,c
  3152  0011F2  0800               	sublw	0
  3153  0011F4  2458               	addwf	_minuto,w,c
  3154  0011F6  6E4B               	movwf	_minuto_u,c
  3155                           
  3156                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  3157  0011F8  504A               	movf	_minuto_d,w,c
  3158  0011FA  0D10               	mullw	16
  3159  0011FC  50F3               	movf	prodl,w,c
  3160  0011FE  244B               	addwf	_minuto_u,w,c
  3161  001200  6E3F               	movwf	_RtccTime+2,c
  3162                           
  3163                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  3164  001202  C054  F001         	movff	_hora,___awdiv@dividend
  3165  001206  C055  F002         	movff	_hora+1,___awdiv@dividend+1
  3166  00120A  0E00               	movlw	0
  3167  00120C  6E04               	movwf	___awdiv@divisor+1,c
  3168  00120E  0E0A               	movlw	10
  3169  001210  6E03               	movwf	___awdiv@divisor,c
  3170  001212  ECFD  F00B         	call	___awdiv	;wreg free
  3171  001216  5001               	movf	?___awdiv,w,c
  3172  001218  6E46               	movwf	_hora_d,c
  3173                           
  3174                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  3175  00121A  5046               	movf	_hora_d,w,c
  3176  00121C  0D0A               	mullw	10
  3177  00121E  50F3               	movf	prodl,w,c
  3178  001220  0800               	sublw	0
  3179  001222  2454               	addwf	_hora,w,c
  3180  001224  6E47               	movwf	_hora_u,c
  3181                           
  3182                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  3183  001226  5046               	movf	_hora_d,w,c
  3184  001228  0D10               	mullw	16
  3185  00122A  50F3               	movf	prodl,w,c
  3186  00122C  2447               	addwf	_hora_u,w,c
  3187  00122E  6E40               	movwf	_RtccTime+3,c
  3188                           
  3189                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  3190  001230  C04E  F001         	movff	_anio,___awdiv@dividend
  3191  001234  C04F  F002         	movff	_anio+1,___awdiv@dividend+1
  3192  001238  0E00               	movlw	0
  3193  00123A  6E04               	movwf	___awdiv@divisor+1,c
  3194  00123C  0E0A               	movlw	10
  3195  00123E  6E03               	movwf	___awdiv@divisor,c
  3196  001240  ECFD  F00B         	call	___awdiv	;wreg free
  3197  001244  5001               	movf	?___awdiv,w,c
  3198  001246  6E41               	movwf	_anio_d,c
  3199                           
  3200                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  3201  001248  5041               	movf	_anio_d,w,c
  3202  00124A  0D0A               	mullw	10
  3203  00124C  50F3               	movf	prodl,w,c
  3204  00124E  0800               	sublw	0
  3205  001250  244E               	addwf	_anio,w,c
  3206  001252  6E42               	movwf	_anio_u,c
  3207                           
  3208                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  3209  001254  5041               	movf	_anio_d,w,c
  3210  001256  0D10               	mullw	16
  3211  001258  50F3               	movf	prodl,w,c
  3212  00125A  2442               	addwf	_anio_u,w,c
  3213  00125C  6E3C               	movwf	_RtccDate+3,c
  3214                           
  3215                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  3216  00125E  C056  F001         	movff	_mes,___awdiv@dividend
  3217  001262  C057  F002         	movff	_mes+1,___awdiv@dividend+1
  3218  001266  0E00               	movlw	0
  3219  001268  6E04               	movwf	___awdiv@divisor+1,c
  3220  00126A  0E0A               	movlw	10
  3221  00126C  6E03               	movwf	___awdiv@divisor,c
  3222  00126E  ECFD  F00B         	call	___awdiv	;wreg free
  3223  001272  5001               	movf	?___awdiv,w,c
  3224  001274  6E48               	movwf	_mes_d,c
  3225                           
  3226                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  3227  001276  5048               	movf	_mes_d,w,c
  3228  001278  0D0A               	mullw	10
  3229  00127A  50F3               	movf	prodl,w,c
  3230  00127C  0800               	sublw	0
  3231  00127E  2456               	addwf	_mes,w,c
  3232  001280  6E49               	movwf	_mes_u,c
  3233                           
  3234                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  3235  001282  5048               	movf	_mes_d,w,c
  3236  001284  0D10               	mullw	16
  3237  001286  50F3               	movf	prodl,w,c
  3238  001288  2449               	addwf	_mes_u,w,c
  3239  00128A  6E3B               	movwf	_RtccDate+2,c
  3240                           
  3241                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  3242  00128C  C050  F001         	movff	_dia,___awdiv@dividend
  3243  001290  C051  F002         	movff	_dia+1,___awdiv@dividend+1
  3244  001294  0E00               	movlw	0
  3245  001296  6E04               	movwf	___awdiv@divisor+1,c
  3246  001298  0E0A               	movlw	10
  3247  00129A  6E03               	movwf	___awdiv@divisor,c
  3248  00129C  ECFD  F00B         	call	___awdiv	;wreg free
  3249  0012A0  5001               	movf	?___awdiv,w,c
  3250  0012A2  6E44               	movwf	_fecha_d,c
  3251                           
  3252                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  3253  0012A4  5044               	movf	_fecha_d,w,c
  3254  0012A6  0D0A               	mullw	10
  3255  0012A8  50F3               	movf	prodl,w,c
  3256  0012AA  0800               	sublw	0
  3257  0012AC  2450               	addwf	_dia,w,c
  3258  0012AE  6E45               	movwf	_fecha_u,c
  3259                           
  3260                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  3261  0012B0  5044               	movf	_fecha_d,w,c
  3262  0012B2  0D10               	mullw	16
  3263  0012B4  50F3               	movf	prodl,w,c
  3264  0012B6  2445               	addwf	_fecha_u,w,c
  3265  0012B8  6E3A               	movwf	_RtccDate+1,c
  3266                           
  3267                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  3268  0012BA  C052  F043         	movff	_diasem,_dia_semana
  3269                           
  3270                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  3271  0012BE  C052  F039         	movff	_diasem,_RtccDate
  3272                           
  3273                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  3274  0012C2  0E3D               	movlw	low _RtccTime
  3275  0012C4  6E01               	movwf	RtccWriteTime@pTm,c
  3276  0012C6  0E00               	movlw	high _RtccTime
  3277  0012C8  6E02               	movwf	RtccWriteTime@pTm+1,c
  3278  0012CA  0E01               	movlw	1
  3279  0012CC  6E03               	movwf	RtccWriteTime@di,c
  3280  0012CE  EC17  F00A         	call	_RtccWriteTime	;wreg free
  3281                           
  3282                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  3283  0012D2  0E39               	movlw	low _RtccDate
  3284  0012D4  6E01               	movwf	RtccWriteDate@pDt,c
  3285  0012D6  0E00               	movlw	high _RtccDate
  3286  0012D8  6E02               	movwf	RtccWriteDate@pDt+1,c
  3287  0012DA  0E01               	movlw	1
  3288  0012DC  6E03               	movwf	RtccWriteDate@di,c
  3289  0012DE  EC74  F009         	call	_RtccWriteDate	;wreg free
  3290                           
  3291                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  3292  0012E2  010F               	movlb	15	; () banked
  3293  0012E4  8F3F               	bsf	63,7,b	;volatile
  3294                           
  3295                           ; BSR set to: 15
  3296  0012E6  0012               	return		;funcret
  3297  0012E8                     __end_of_Write_RTC:
  3298                           	opt stack 0
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           prodh	equ	0xFF4
  3304                           prodl	equ	0xFF3
  3305                           indf0	equ	0xFEF
  3306                           postinc0	equ	0xFEE
  3307                           fsr0h	equ	0xFEA
  3308                           fsr0l	equ	0xFE9
  3309                           wreg	equ	0xFE8
  3310                           postdec1	equ	0xFE5
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           postinc2	equ	0xFDE
  3314                           postdec2	equ	0xFDD
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8
  3318                           
  3319 ;; *************** function ___awdiv *****************
  3320 ;; Defined at:
  3321 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  dividend        2    0[COMRAM] int 
  3324 ;;  divisor         2    2[COMRAM] int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  quotient        2    6[COMRAM] int 
  3327 ;;  sign            1    5[COMRAM] unsigned char 
  3328 ;;  counter         1    4[COMRAM] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2    0[COMRAM] int 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3339 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3341 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3342 ;;Total ram usage:        8 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_Write_RTC
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text19
  3352  0017FA                     __ptext19:
  3353                           	opt stack 0
  3354  0017FA                     ___awdiv:
  3355                           	opt stack 28
  3356                           
  3357                           ; BSR set to: 15
  3358                           ;incstack = 0
  3359  0017FA  0E00               	movlw	0
  3360  0017FC  6E06               	movwf	___awdiv@sign,c
  3361  0017FE  AE04               	btfss	___awdiv@divisor+1,7,c
  3362  001800  D007               	goto	l1914
  3363  001802  6C03               	negf	___awdiv@divisor,c
  3364  001804  1E04               	comf	___awdiv@divisor+1,f,c
  3365  001806  B0D8               	btfsc	status,0,c
  3366  001808  2A04               	incf	___awdiv@divisor+1,f,c
  3367  00180A  0E01               	movlw	1
  3368  00180C  6E06               	movwf	___awdiv@sign,c
  3369  00180E  D000               	goto	l1914
  3370  001810                     l1914:
  3371  001810  AE02               	btfss	___awdiv@dividend+1,7,c
  3372  001812  D007               	goto	l1920
  3373  001814  6C01               	negf	___awdiv@dividend,c
  3374  001816  1E02               	comf	___awdiv@dividend+1,f,c
  3375  001818  B0D8               	btfsc	status,0,c
  3376  00181A  2A02               	incf	___awdiv@dividend+1,f,c
  3377  00181C  0E01               	movlw	1
  3378  00181E  1A06               	xorwf	___awdiv@sign,f,c
  3379  001820  D000               	goto	l1920
  3380  001822                     l1920:
  3381  001822  0E00               	movlw	0
  3382  001824  6E08               	movwf	___awdiv@quotient+1,c
  3383  001826  0E00               	movlw	0
  3384  001828  6E07               	movwf	___awdiv@quotient,c
  3385  00182A  5003               	movf	___awdiv@divisor,w,c
  3386  00182C  1004               	iorwf	___awdiv@divisor+1,w,c
  3387  00182E  B4D8               	btfsc	status,2,c
  3388  001830  D021               	goto	l1942
  3389  001832  0E01               	movlw	1
  3390  001834  6E05               	movwf	___awdiv@counter,c
  3391  001836  D005               	goto	l1928
  3392  001838                     l1926:
  3393  001838  90D8               	bcf	status,0,c
  3394  00183A  3603               	rlcf	___awdiv@divisor,f,c
  3395  00183C  3604               	rlcf	___awdiv@divisor+1,f,c
  3396  00183E  2A05               	incf	___awdiv@counter,f,c
  3397  001840  D000               	goto	l1928
  3398  001842                     l1928:
  3399  001842  BE04               	btfsc	___awdiv@divisor+1,7,c
  3400  001844  D002               	goto	l1930
  3401  001846  D7F8               	goto	l1926
  3402  001848  D000               	goto	l1930
  3403  00184A                     l1930:
  3404  00184A  90D8               	bcf	status,0,c
  3405  00184C  3607               	rlcf	___awdiv@quotient,f,c
  3406  00184E  3608               	rlcf	___awdiv@quotient+1,f,c
  3407  001850  5003               	movf	___awdiv@divisor,w,c
  3408  001852  5C01               	subwf	___awdiv@dividend,w,c
  3409  001854  5004               	movf	___awdiv@divisor+1,w,c
  3410  001856  5802               	subwfb	___awdiv@dividend+1,w,c
  3411  001858  A0D8               	btfss	status,0,c
  3412  00185A  D006               	goto	l1938
  3413  00185C  5003               	movf	___awdiv@divisor,w,c
  3414  00185E  5E01               	subwf	___awdiv@dividend,f,c
  3415  001860  5004               	movf	___awdiv@divisor+1,w,c
  3416  001862  5A02               	subwfb	___awdiv@dividend+1,f,c
  3417  001864  8007               	bsf	___awdiv@quotient,0,c
  3418  001866  D000               	goto	l1938
  3419  001868                     l1938:
  3420  001868  90D8               	bcf	status,0,c
  3421  00186A  3204               	rrcf	___awdiv@divisor+1,f,c
  3422  00186C  3203               	rrcf	___awdiv@divisor,f,c
  3423  00186E  2E05               	decfsz	___awdiv@counter,f,c
  3424  001870  D7EC               	goto	l1930
  3425  001872  D000               	goto	l1942
  3426  001874                     l1942:
  3427  001874  5006               	movf	___awdiv@sign,w,c
  3428  001876  B4D8               	btfsc	status,2,c
  3429  001878  D005               	goto	l1946
  3430  00187A  6C07               	negf	___awdiv@quotient,c
  3431  00187C  1E08               	comf	___awdiv@quotient+1,f,c
  3432  00187E  B0D8               	btfsc	status,0,c
  3433  001880  2A08               	incf	___awdiv@quotient+1,f,c
  3434  001882  D000               	goto	l1946
  3435  001884                     l1946:
  3436  001884  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3437  001888  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3438  00188C  0012               	return	
  3439  00188E  0012               	return		;funcret
  3440  001890                     __end_of___awdiv:
  3441                           	opt stack 0
  3442                           tblptru	equ	0xFF8
  3443                           tblptrh	equ	0xFF7
  3444                           tblptrl	equ	0xFF6
  3445                           tablat	equ	0xFF5
  3446                           prodh	equ	0xFF4
  3447                           prodl	equ	0xFF3
  3448                           indf0	equ	0xFEF
  3449                           postinc0	equ	0xFEE
  3450                           fsr0h	equ	0xFEA
  3451                           fsr0l	equ	0xFE9
  3452                           wreg	equ	0xFE8
  3453                           postdec1	equ	0xFE5
  3454                           fsr1l	equ	0xFE1
  3455                           indf2	equ	0xFDF
  3456                           postinc2	equ	0xFDE
  3457                           postdec2	equ	0xFDD
  3458                           fsr2h	equ	0xFDA
  3459                           fsr2l	equ	0xFD9
  3460                           status	equ	0xFD8
  3461                           
  3462 ;; *************** function _RtccWriteTime *****************
  3463 ;; Defined at:
  3464 ;;		line 34 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  pTm             2    0[COMRAM] PTR const struct .
  3467 ;;		 -> RtccTime(4), 
  3468 ;;  di              1    2[COMRAM] enum E7121
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  tempHourWDay    2    9[COMRAM] struct .
  3471 ;;  tempMinSec      2    7[COMRAM] struct .
  3472 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3473 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3474 ;;  wasOn           1    4[COMRAM] enum E7121
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      enum E7337
  3477 ;; Registers used:
  3478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3484 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3485 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3487 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3488 ;;Total ram usage:       11 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    1
  3491 ;; This function calls:
  3492 ;;		_RtccWrOn
  3493 ;; This function is called by:
  3494 ;;		_Write_RTC
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text20
  3499  00142E                     __ptext20:
  3500                           	opt stack 0
  3501  00142E                     _RtccWriteTime:
  3502                           	opt stack 27
  3503                           
  3504                           ;incstack = 0
  3505  00142E  0E00               	movlw	0
  3506  001430  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3507  001432  EE20 F002          	lfsr	2,2
  3508  001436  5001               	movf	RtccWriteTime@pTm,w,c
  3509  001438  26D9               	addwf	fsr2l,f,c
  3510  00143A  5002               	movf	RtccWriteTime@pTm+1,w,c
  3511  00143C  22DA               	addwfc	fsr2h,f,c
  3512  00143E  0E5A               	movlw	90
  3513  001440  60DF               	cpfslt	indf2,c
  3514  001442  0012               	return	
  3515  001444  EE20 F001          	lfsr	2,1
  3516  001448  5001               	movf	RtccWriteTime@pTm,w,c
  3517  00144A  26D9               	addwf	fsr2l,f,c
  3518  00144C  5002               	movf	RtccWriteTime@pTm+1,w,c
  3519  00144E  22DA               	addwfc	fsr2h,f,c
  3520  001450  0E5A               	movlw	90
  3521  001452  60DF               	cpfslt	indf2,c
  3522  001454  0012               	return	
  3523  001456  EE20 F003          	lfsr	2,3
  3524  00145A  5001               	movf	RtccWriteTime@pTm,w,c
  3525  00145C  26D9               	addwf	fsr2l,f,c
  3526  00145E  5002               	movf	RtccWriteTime@pTm+1,w,c
  3527  001460  22DA               	addwfc	fsr2h,f,c
  3528  001462  0E24               	movlw	36
  3529  001464  64DF               	cpfsgt	indf2,c
  3530  001466  D002               	goto	l1746
  3531  001468  0012               	return	
  3532                           
  3533                           ;	Return value of _RtccWriteTime is never used
  3534  00146A  0012               	return	
  3535  00146C                     l1746:
  3536  00146C  EE20 F002          	lfsr	2,2
  3537  001470  5001               	movf	RtccWriteTime@pTm,w,c
  3538  001472  26D9               	addwf	fsr2l,f,c
  3539  001474  5002               	movf	RtccWriteTime@pTm+1,w,c
  3540  001476  22DA               	addwfc	fsr2h,f,c
  3541  001478  50DF               	movf	indf2,w,c
  3542  00147A  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3543  00147C  EE20 F001          	lfsr	2,1
  3544  001480  5001               	movf	RtccWriteTime@pTm,w,c
  3545  001482  26D9               	addwf	fsr2l,f,c
  3546  001484  5002               	movf	RtccWriteTime@pTm+1,w,c
  3547  001486  22DA               	addwfc	fsr2h,f,c
  3548  001488  50DF               	movf	indf2,w,c
  3549  00148A  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3550  00148C  5003               	movf	RtccWriteTime@di,w,c
  3551  00148E  B4D8               	btfsc	status,2,c
  3552  001490  D002               	goto	l1752
  3553  001492  9CF2               	bcf	intcon,6,c	;volatile
  3554  001494  D000               	goto	l1752
  3555  001496                     l1752:
  3556  001496  0E00               	movlw	0
  3557  001498  BB3F               	btfsc	63,5,b	;volatile
  3558  00149A  0E01               	movlw	1
  3559  00149C  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3560  00149E  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3561  0014A0  A4D8               	btfss	status,2,c
  3562  0014A2  D003               	goto	l1756
  3563  0014A4  EC97  F00E         	call	_RtccWrOn	;wreg free
  3564  0014A8  D000               	goto	l1756
  3565  0014AA                     l1756:
  3566  0014AA  0E00               	movlw	0
  3567  0014AC  BF3F               	btfsc	63,7,b	;volatile
  3568  0014AE  0E01               	movlw	1
  3569  0014B0  6E05               	movwf	RtccWriteTime@wasOn,c
  3570  0014B2  5005               	movf	RtccWriteTime@wasOn,w,c
  3571  0014B4  B4D8               	btfsc	status,2,c
  3572  0014B6  D007               	goto	l1762
  3573  0014B8  0E00               	movlw	0
  3574  0014BA  BE91               	btfsc	3985,7,c	;volatile
  3575  0014BC  0E01               	movlw	1
  3576  0014BE  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3577  0014C0  010F               	movlb	15	; () banked
  3578  0014C2  9F3F               	bcf	63,7,b	;volatile
  3579  0014C4  D000               	goto	l1762
  3580  0014C6                     l1762:
  3581  0014C6  0EFC               	movlw	252
  3582  0014C8  010F               	movlb	15	; () banked
  3583  0014CA  173F               	andwf	63,f,b	;volatile
  3584  0014CC  010F               	movlb	15	; () banked
  3585  0014CE  813F               	bsf	63,0,b	;volatile
  3586                           
  3587                           ; BSR set to: 15
  3588  0014D0  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3589                           
  3590                           ; BSR set to: 15
  3591  0014D4  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3592                           
  3593                           ; BSR set to: 15
  3594  0014D8  EE20 F003          	lfsr	2,3
  3595  0014DC  5001               	movf	RtccWriteTime@pTm,w,c
  3596  0014DE  26D9               	addwf	fsr2l,f,c
  3597  0014E0  5002               	movf	RtccWriteTime@pTm+1,w,c
  3598  0014E2  22DA               	addwfc	fsr2h,f,c
  3599  0014E4  50DF               	movf	indf2,w,c
  3600  0014E6  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3601                           
  3602                           ; BSR set to: 15
  3603  0014E8  0EFC               	movlw	252
  3604  0014EA  010F               	movlb	15	; () banked
  3605  0014EC  173F               	andwf	63,f,b	;volatile
  3606                           
  3607                           ; BSR set to: 15
  3608  0014EE  010F               	movlb	15	; () banked
  3609  0014F0  813F               	bsf	63,0,b	;volatile
  3610                           
  3611                           ; BSR set to: 15
  3612  0014F2  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3613                           
  3614                           ; BSR set to: 15
  3615  0014F6  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3616                           
  3617                           ; BSR set to: 15
  3618  0014FA  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3619                           
  3620                           ; BSR set to: 15
  3621  0014FE  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3622                           
  3623                           ; BSR set to: 15
  3624  001502  5005               	movf	RtccWriteTime@wasOn,w,c
  3625  001504  B4D8               	btfsc	status,2,c
  3626  001506  D00D               	goto	l1794
  3627                           
  3628                           ; BSR set to: 15
  3629  001508  010F               	movlb	15	; () banked
  3630  00150A  8F3F               	bsf	63,7,b	;volatile
  3631                           
  3632                           ; BSR set to: 15
  3633  00150C  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3634  00150E  B4D8               	btfsc	status,2,c
  3635  001510  D002               	goto	l1790
  3636                           
  3637                           ; BSR set to: 15
  3638  001512  8E91               	bsf	3985,7,c	;volatile
  3639  001514  D000               	goto	l1790
  3640  001516                     l1790:
  3641                           
  3642                           ; BSR set to: 15
  3643  001516  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3644  001518  B4D8               	btfsc	status,2,c
  3645  00151A  D009               	goto	l1798
  3646                           
  3647                           ; BSR set to: 15
  3648  00151C  EC97  F00E         	call	_RtccWrOn	;wreg free
  3649  001520  D006               	goto	l1798
  3650  001522                     l1794:
  3651  001522  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3652  001524  A4D8               	btfss	status,2,c
  3653  001526  D003               	goto	l1798
  3654  001528  010F               	movlb	15	; () banked
  3655  00152A  9B3F               	bcf	63,5,b	;volatile
  3656                           
  3657                           ; BSR set to: 15
  3658  00152C  D000               	goto	l1798
  3659  00152E                     l1798:
  3660  00152E  5003               	movf	RtccWriteTime@di,w,c
  3661  001530  B4D8               	btfsc	status,2,c
  3662  001532  0012               	return	
  3663  001534  8CF2               	bsf	intcon,6,c	;volatile
  3664  001536  0012               	return	
  3665                           
  3666                           ;	Return value of _RtccWriteTime is never used
  3667  001538  0012               	return		;funcret
  3668  00153A                     __end_of_RtccWriteTime:
  3669                           	opt stack 0
  3670                           tblptru	equ	0xFF8
  3671                           tblptrh	equ	0xFF7
  3672                           tblptrl	equ	0xFF6
  3673                           tablat	equ	0xFF5
  3674                           prodh	equ	0xFF4
  3675                           prodl	equ	0xFF3
  3676                           intcon	equ	0xFF2
  3677                           indf0	equ	0xFEF
  3678                           postinc0	equ	0xFEE
  3679                           fsr0h	equ	0xFEA
  3680                           fsr0l	equ	0xFE9
  3681                           wreg	equ	0xFE8
  3682                           postdec1	equ	0xFE5
  3683                           fsr1l	equ	0xFE1
  3684                           indf2	equ	0xFDF
  3685                           postinc2	equ	0xFDE
  3686                           postdec2	equ	0xFDD
  3687                           fsr2h	equ	0xFDA
  3688                           fsr2l	equ	0xFD9
  3689                           status	equ	0xFD8
  3690                           
  3691 ;; *************** function _RtccWriteDate *****************
  3692 ;; Defined at:
  3693 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  pDt             2    0[COMRAM] PTR const struct .
  3696 ;;		 -> RtccDate(4), 
  3697 ;;  di              1    2[COMRAM] enum E7121
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  tempHourWDay    2   11[COMRAM] struct .
  3700 ;;  tempDayMonth    2    9[COMRAM] struct .
  3701 ;;  tempYear        2    6[COMRAM] struct .
  3702 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3703 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3704 ;;  wasOn           1    4[COMRAM] enum E7121
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      enum E7337
  3707 ;; Registers used:
  3708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3714 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;Total ram usage:       13 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    1
  3721 ;; This function calls:
  3722 ;;		_RtccWrOn
  3723 ;; This function is called by:
  3724 ;;		_Write_RTC
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text21
  3729  0012E8                     __ptext21:
  3730                           	opt stack 0
  3731  0012E8                     _RtccWriteDate:
  3732                           	opt stack 27
  3733                           
  3734                           ;incstack = 0
  3735  0012E8  0E00               	movlw	0
  3736  0012EA  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3737  0012EC  EE20 F002          	lfsr	2,2
  3738  0012F0  5001               	movf	RtccWriteDate@pDt,w,c
  3739  0012F2  26D9               	addwf	fsr2l,f,c
  3740  0012F4  5002               	movf	RtccWriteDate@pDt+1,w,c
  3741  0012F6  22DA               	addwfc	fsr2h,f,c
  3742  0012F8  0E13               	movlw	19
  3743  0012FA  60DF               	cpfslt	indf2,c
  3744  0012FC  0012               	return	
  3745  0012FE  EE20 F002          	lfsr	2,2
  3746  001302  5001               	movf	RtccWriteDate@pDt,w,c
  3747  001304  26D9               	addwf	fsr2l,f,c
  3748  001306  5002               	movf	RtccWriteDate@pDt+1,w,c
  3749  001308  22DA               	addwfc	fsr2h,f,c
  3750  00130A  50DF               	movf	indf2,w,c
  3751  00130C  B4D8               	btfsc	status,2,c
  3752  00130E  0012               	return	
  3753  001310  EE20 F001          	lfsr	2,1
  3754  001314  5001               	movf	RtccWriteDate@pDt,w,c
  3755  001316  26D9               	addwf	fsr2l,f,c
  3756  001318  5002               	movf	RtccWriteDate@pDt+1,w,c
  3757  00131A  22DA               	addwfc	fsr2h,f,c
  3758  00131C  0E32               	movlw	50
  3759  00131E  60DF               	cpfslt	indf2,c
  3760  001320  0012               	return	
  3761  001322  EE20 F001          	lfsr	2,1
  3762  001326  5001               	movf	RtccWriteDate@pDt,w,c
  3763  001328  26D9               	addwf	fsr2l,f,c
  3764  00132A  5002               	movf	RtccWriteDate@pDt+1,w,c
  3765  00132C  22DA               	addwfc	fsr2h,f,c
  3766  00132E  50DF               	movf	indf2,w,c
  3767  001330  B4D8               	btfsc	status,2,c
  3768  001332  0012               	return	
  3769  001334  EE20 F003          	lfsr	2,3
  3770  001338  5001               	movf	RtccWriteDate@pDt,w,c
  3771  00133A  26D9               	addwf	fsr2l,f,c
  3772  00133C  5002               	movf	RtccWriteDate@pDt+1,w,c
  3773  00133E  22DA               	addwfc	fsr2h,f,c
  3774  001340  0E99               	movlw	153
  3775  001342  64DF               	cpfsgt	indf2,c
  3776  001344  D002               	goto	l1814
  3777  001346  0012               	return	
  3778                           
  3779                           ;	Return value of _RtccWriteDate is never used
  3780  001348  0012               	return	
  3781  00134A                     l1814:
  3782  00134A  EE20 F003          	lfsr	2,3
  3783  00134E  5001               	movf	RtccWriteDate@pDt,w,c
  3784  001350  26D9               	addwf	fsr2l,f,c
  3785  001352  5002               	movf	RtccWriteDate@pDt+1,w,c
  3786  001354  22DA               	addwfc	fsr2h,f,c
  3787  001356  50DF               	movf	indf2,w,c
  3788  001358  6E07               	movwf	RtccWriteDate@tempYear,c
  3789  00135A  EE20 F001          	lfsr	2,1
  3790  00135E  5001               	movf	RtccWriteDate@pDt,w,c
  3791  001360  26D9               	addwf	fsr2l,f,c
  3792  001362  5002               	movf	RtccWriteDate@pDt+1,w,c
  3793  001364  22DA               	addwfc	fsr2h,f,c
  3794  001366  50DF               	movf	indf2,w,c
  3795  001368  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  3796  00136A  EE20 F002          	lfsr	2,2
  3797  00136E  5001               	movf	RtccWriteDate@pDt,w,c
  3798  001370  26D9               	addwf	fsr2l,f,c
  3799  001372  5002               	movf	RtccWriteDate@pDt+1,w,c
  3800  001374  22DA               	addwfc	fsr2h,f,c
  3801  001376  50DF               	movf	indf2,w,c
  3802  001378  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  3803  00137A  5003               	movf	RtccWriteDate@di,w,c
  3804  00137C  B4D8               	btfsc	status,2,c
  3805  00137E  D002               	goto	l1820
  3806  001380  9CF2               	bcf	intcon,6,c	;volatile
  3807  001382  D000               	goto	l1820
  3808  001384                     l1820:
  3809  001384  0E00               	movlw	0
  3810  001386  BB3F               	btfsc	63,5,b	;volatile
  3811  001388  0E01               	movlw	1
  3812  00138A  6E09               	movwf	RtccWriteDate@wasWrEn,c
  3813  00138C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3814  00138E  A4D8               	btfss	status,2,c
  3815  001390  D003               	goto	l1824
  3816  001392  EC97  F00E         	call	_RtccWrOn	;wreg free
  3817  001396  D000               	goto	l1824
  3818  001398                     l1824:
  3819  001398  0E00               	movlw	0
  3820  00139A  BF3F               	btfsc	63,7,b	;volatile
  3821  00139C  0E01               	movlw	1
  3822  00139E  6E05               	movwf	RtccWriteDate@wasOn,c
  3823  0013A0  5005               	movf	RtccWriteDate@wasOn,w,c
  3824  0013A2  B4D8               	btfsc	status,2,c
  3825  0013A4  D007               	goto	l1830
  3826  0013A6  0E00               	movlw	0
  3827  0013A8  BE91               	btfsc	3985,7,c	;volatile
  3828  0013AA  0E01               	movlw	1
  3829  0013AC  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3830  0013AE  010F               	movlb	15	; () banked
  3831  0013B0  9F3F               	bcf	63,7,b	;volatile
  3832  0013B2  D000               	goto	l1830
  3833  0013B4                     l1830:
  3834  0013B4  0EFC               	movlw	252
  3835  0013B6  010F               	movlb	15	; () banked
  3836  0013B8  173F               	andwf	63,f,b	;volatile
  3837  0013BA  010F               	movlb	15	; () banked
  3838  0013BC  813F               	bsf	63,0,b	;volatile
  3839                           
  3840                           ; BSR set to: 15
  3841  0013BE  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3842                           
  3843                           ; BSR set to: 15
  3844  0013C2  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3845                           
  3846                           ; BSR set to: 15
  3847  0013C6  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3848  0013CA  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3849  0013CE  50DF               	movf	indf2,w,c
  3850  0013D0  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  3851                           
  3852                           ; BSR set to: 15
  3853  0013D2  0EFC               	movlw	252
  3854  0013D4  010F               	movlb	15	; () banked
  3855  0013D6  173F               	andwf	63,f,b	;volatile
  3856                           
  3857                           ; BSR set to: 15
  3858  0013D8  0E03               	movlw	3
  3859  0013DA  010F               	movlb	15	; () banked
  3860  0013DC  133F               	iorwf	63,f,b	;volatile
  3861                           
  3862                           ; BSR set to: 15
  3863  0013DE  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3864                           
  3865                           ; BSR set to: 15
  3866  0013E2  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3867                           
  3868                           ; BSR set to: 15
  3869  0013E6  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3870                           
  3871                           ; BSR set to: 15
  3872  0013EA  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3873                           
  3874                           ; BSR set to: 15
  3875  0013EE  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3876                           
  3877                           ; BSR set to: 15
  3878  0013F2  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3879                           
  3880                           ; BSR set to: 15
  3881  0013F6  5005               	movf	RtccWriteDate@wasOn,w,c
  3882  0013F8  B4D8               	btfsc	status,2,c
  3883  0013FA  D00D               	goto	l1866
  3884                           
  3885                           ; BSR set to: 15
  3886  0013FC  010F               	movlb	15	; () banked
  3887  0013FE  8F3F               	bsf	63,7,b	;volatile
  3888                           
  3889                           ; BSR set to: 15
  3890  001400  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3891  001402  B4D8               	btfsc	status,2,c
  3892  001404  D002               	goto	l1862
  3893                           
  3894                           ; BSR set to: 15
  3895  001406  8E91               	bsf	3985,7,c	;volatile
  3896  001408  D000               	goto	l1862
  3897  00140A                     l1862:
  3898                           
  3899                           ; BSR set to: 15
  3900  00140A  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3901  00140C  B4D8               	btfsc	status,2,c
  3902  00140E  D009               	goto	l1870
  3903                           
  3904                           ; BSR set to: 15
  3905  001410  EC97  F00E         	call	_RtccWrOn	;wreg free
  3906  001414  D006               	goto	l1870
  3907  001416                     l1866:
  3908  001416  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3909  001418  A4D8               	btfss	status,2,c
  3910  00141A  D003               	goto	l1870
  3911  00141C  010F               	movlb	15	; () banked
  3912  00141E  9B3F               	bcf	63,5,b	;volatile
  3913                           
  3914                           ; BSR set to: 15
  3915  001420  D000               	goto	l1870
  3916  001422                     l1870:
  3917  001422  5003               	movf	RtccWriteDate@di,w,c
  3918  001424  B4D8               	btfsc	status,2,c
  3919  001426  0012               	return	
  3920  001428  9CF2               	bcf	intcon,6,c	;volatile
  3921  00142A  0012               	return	
  3922                           
  3923                           ;	Return value of _RtccWriteDate is never used
  3924  00142C  0012               	return		;funcret
  3925  00142E                     __end_of_RtccWriteDate:
  3926                           	opt stack 0
  3927                           tblptru	equ	0xFF8
  3928                           tblptrh	equ	0xFF7
  3929                           tblptrl	equ	0xFF6
  3930                           tablat	equ	0xFF5
  3931                           prodh	equ	0xFF4
  3932                           prodl	equ	0xFF3
  3933                           intcon	equ	0xFF2
  3934                           indf0	equ	0xFEF
  3935                           postinc0	equ	0xFEE
  3936                           fsr0h	equ	0xFEA
  3937                           fsr0l	equ	0xFE9
  3938                           wreg	equ	0xFE8
  3939                           postdec1	equ	0xFE5
  3940                           fsr1l	equ	0xFE1
  3941                           indf2	equ	0xFDF
  3942                           postinc2	equ	0xFDE
  3943                           postdec2	equ	0xFDD
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _RtccWrOn *****************
  3949 ;; Defined at:
  3950 ;;		line 21 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  data            2    0        unsigned int 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;		None               void
  3957 ;; Registers used:
  3958 ;;		wreg, status,2
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_Write_RTC
  3974 ;;		_RtccWriteDate
  3975 ;;		_RtccWriteTime
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text22
  3980  001D2E                     __ptext22:
  3981                           	opt stack 0
  3982  001D2E                     _RtccWrOn:
  3983                           	opt stack 27
  3984                           
  3985                           ;incstack = 0
  3986  001D2E  9CF2               	bcf	intcon,6,c	;volatile
  3987  001D30  0E55               	movlw	85
  3988  001D32  6EA7               	movwf	4007,c	;volatile
  3989  001D34  0EAA               	movlw	170
  3990  001D36  6EA7               	movwf	4007,c	;volatile
  3991  001D38  010F               	movlb	15	; () banked
  3992  001D3A  8B3F               	bsf	63,5,b	;volatile
  3993                           
  3994                           ; BSR set to: 15
  3995  001D3C  8CF2               	bsf	intcon,6,c	;volatile
  3996                           
  3997                           ; BSR set to: 15
  3998  001D3E  0012               	return		;funcret
  3999  001D40                     __end_of_RtccWrOn:
  4000                           	opt stack 0
  4001                           tblptru	equ	0xFF8
  4002                           tblptrh	equ	0xFF7
  4003                           tblptrl	equ	0xFF6
  4004                           tablat	equ	0xFF5
  4005                           prodh	equ	0xFF4
  4006                           prodl	equ	0xFF3
  4007                           intcon	equ	0xFF2
  4008                           indf0	equ	0xFEF
  4009                           postinc0	equ	0xFEE
  4010                           fsr0h	equ	0xFEA
  4011                           fsr0l	equ	0xFE9
  4012                           wreg	equ	0xFE8
  4013                           postdec1	equ	0xFE5
  4014                           fsr1l	equ	0xFE1
  4015                           indf2	equ	0xFDF
  4016                           postinc2	equ	0xFDE
  4017                           postdec2	equ	0xFDD
  4018                           fsr2h	equ	0xFDA
  4019                           fsr2l	equ	0xFD9
  4020                           status	equ	0xFD8
  4021                           
  4022 ;; *************** function _Read_RTC *****************
  4023 ;; Defined at:
  4024 ;;		line 111 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;		None               void
  4031 ;; Registers used:
  4032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4042 ;;Total ram usage:        0 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    1
  4045 ;; This function calls:
  4046 ;;		_RtccReadDate
  4047 ;;		_RtccReadTime
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text23
  4054  001722                     __ptext23:
  4055                           	opt stack 0
  4056  001722                     _Read_RTC:
  4057                           	opt stack 29
  4058                           
  4059                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  4060                           
  4061                           ; BSR set to: 15
  4062                           ;incstack = 0
  4063  001722  0E3D               	movlw	low _RtccTime
  4064  001724  6E01               	movwf	RtccReadTime@pTm,c
  4065  001726  0E00               	movlw	high _RtccTime
  4066  001728  6E02               	movwf	RtccReadTime@pTm+1,c
  4067  00172A  EC0A  F00D         	call	_RtccReadTime	;wreg free
  4068                           
  4069                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  4070  00172E  503E               	movf	_RtccTime+1,w,c
  4071  001730  0B0F               	andlw	15
  4072  001732  6E4D               	movwf	_segundo_u,c
  4073                           
  4074                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  4075  001734  383E               	swapf	_RtccTime+1,w,c
  4076  001736  0B0F               	andlw	15
  4077  001738  0B0F               	andlw	15
  4078  00173A  6E4C               	movwf	_segundo_d,c
  4079                           
  4080                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  4081  00173C  503F               	movf	_RtccTime+2,w,c
  4082  00173E  0B0F               	andlw	15
  4083  001740  6E4B               	movwf	_minuto_u,c
  4084                           
  4085                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  4086  001742  383F               	swapf	_RtccTime+2,w,c
  4087  001744  0B0F               	andlw	15
  4088  001746  0B0F               	andlw	15
  4089  001748  6E4A               	movwf	_minuto_d,c
  4090                           
  4091                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  4092  00174A  5040               	movf	_RtccTime+3,w,c
  4093  00174C  0B0F               	andlw	15
  4094  00174E  6E47               	movwf	_hora_u,c
  4095                           
  4096                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  4097  001750  3840               	swapf	_RtccTime+3,w,c
  4098  001752  0B0F               	andlw	15
  4099  001754  0B0F               	andlw	15
  4100  001756  6E46               	movwf	_hora_d,c
  4101                           
  4102                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  4103  001758  0E39               	movlw	low _RtccDate
  4104  00175A  6E01               	movwf	RtccReadDate@pDt,c
  4105  00175C  0E00               	movlw	high _RtccDate
  4106  00175E  6E02               	movwf	RtccReadDate@pDt+1,c
  4107  001760  EC48  F00C         	call	_RtccReadDate	;wreg free
  4108                           
  4109                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  4110  001764  503A               	movf	_RtccDate+1,w,c
  4111  001766  0B0F               	andlw	15
  4112  001768  6E45               	movwf	_fecha_u,c
  4113                           
  4114                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  4115  00176A  383A               	swapf	_RtccDate+1,w,c
  4116  00176C  0B0F               	andlw	15
  4117  00176E  0B0F               	andlw	15
  4118  001770  6E44               	movwf	_fecha_d,c
  4119                           
  4120                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  4121  001772  503B               	movf	_RtccDate+2,w,c
  4122  001774  0B0F               	andlw	15
  4123  001776  6E49               	movwf	_mes_u,c
  4124                           
  4125                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  4126  001778  383B               	swapf	_RtccDate+2,w,c
  4127  00177A  0B0F               	andlw	15
  4128  00177C  0B0F               	andlw	15
  4129  00177E  6E48               	movwf	_mes_d,c
  4130                           
  4131                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  4132  001780  C039  F043         	movff	_RtccDate,_dia_semana
  4133                           
  4134                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  4135  001784  503C               	movf	_RtccDate+3,w,c
  4136  001786  0B0F               	andlw	15
  4137  001788  6E42               	movwf	_anio_u,c
  4138                           
  4139                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  4140  00178A  383C               	swapf	_RtccDate+3,w,c
  4141  00178C  0B0F               	andlw	15
  4142  00178E  0B0F               	andlw	15
  4143  001790  6E41               	movwf	_anio_d,c
  4144                           
  4145                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  4146  001792  504C               	movf	_segundo_d,w,c
  4147  001794  0D0A               	mullw	10
  4148  001796  504D               	movf	_segundo_u,w,c
  4149  001798  24F3               	addwf	prodl,w,c
  4150  00179A  6E37               	movwf	_segundo,c
  4151  00179C  0E00               	movlw	0
  4152  00179E  20F4               	addwfc	prodh,w,c
  4153  0017A0  6E38               	movwf	_segundo+1,c
  4154                           
  4155                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  4156  0017A2  504A               	movf	_minuto_d,w,c
  4157  0017A4  0D0A               	mullw	10
  4158  0017A6  504B               	movf	_minuto_u,w,c
  4159  0017A8  24F3               	addwf	prodl,w,c
  4160  0017AA  6E58               	movwf	_minuto,c
  4161  0017AC  0E00               	movlw	0
  4162  0017AE  20F4               	addwfc	prodh,w,c
  4163  0017B0  6E59               	movwf	_minuto+1,c
  4164                           
  4165                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  4166  0017B2  5046               	movf	_hora_d,w,c
  4167  0017B4  0D0A               	mullw	10
  4168  0017B6  5047               	movf	_hora_u,w,c
  4169  0017B8  24F3               	addwf	prodl,w,c
  4170  0017BA  6E54               	movwf	_hora,c
  4171  0017BC  0E00               	movlw	0
  4172  0017BE  20F4               	addwfc	prodh,w,c
  4173  0017C0  6E55               	movwf	_hora+1,c
  4174                           
  4175                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  4176  0017C2  5044               	movf	_fecha_d,w,c
  4177  0017C4  0D0A               	mullw	10
  4178  0017C6  5045               	movf	_fecha_u,w,c
  4179  0017C8  24F3               	addwf	prodl,w,c
  4180  0017CA  6E50               	movwf	_dia,c
  4181  0017CC  0E00               	movlw	0
  4182  0017CE  20F4               	addwfc	prodh,w,c
  4183  0017D0  6E51               	movwf	_dia+1,c
  4184                           
  4185                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  4186  0017D2  C043  F052         	movff	_dia_semana,_diasem
  4187  0017D6  6A53               	clrf	_diasem+1,c
  4188                           
  4189                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  4190  0017D8  5048               	movf	_mes_d,w,c
  4191  0017DA  0D0A               	mullw	10
  4192  0017DC  5049               	movf	_mes_u,w,c
  4193  0017DE  24F3               	addwf	prodl,w,c
  4194  0017E0  6E56               	movwf	_mes,c
  4195  0017E2  0E00               	movlw	0
  4196  0017E4  20F4               	addwfc	prodh,w,c
  4197  0017E6  6E57               	movwf	_mes+1,c
  4198                           
  4199                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  4200  0017E8  5041               	movf	_anio_d,w,c
  4201  0017EA  0D0A               	mullw	10
  4202  0017EC  5042               	movf	_anio_u,w,c
  4203  0017EE  24F3               	addwf	prodl,w,c
  4204  0017F0  6E4E               	movwf	_anio,c
  4205  0017F2  0E00               	movlw	0
  4206  0017F4  20F4               	addwfc	prodh,w,c
  4207  0017F6  6E4F               	movwf	_anio+1,c
  4208  0017F8  0012               	return		;funcret
  4209  0017FA                     __end_of_Read_RTC:
  4210                           	opt stack 0
  4211                           tblptru	equ	0xFF8
  4212                           tblptrh	equ	0xFF7
  4213                           tblptrl	equ	0xFF6
  4214                           tablat	equ	0xFF5
  4215                           prodh	equ	0xFF4
  4216                           prodl	equ	0xFF3
  4217                           intcon	equ	0xFF2
  4218                           indf0	equ	0xFEF
  4219                           postinc0	equ	0xFEE
  4220                           fsr0h	equ	0xFEA
  4221                           fsr0l	equ	0xFE9
  4222                           wreg	equ	0xFE8
  4223                           postdec1	equ	0xFE5
  4224                           fsr1l	equ	0xFE1
  4225                           indf2	equ	0xFDF
  4226                           postinc2	equ	0xFDE
  4227                           postdec2	equ	0xFDD
  4228                           fsr2h	equ	0xFDA
  4229                           fsr2l	equ	0xFD9
  4230                           status	equ	0xFD8
  4231                           
  4232 ;; *************** function _RtccReadTime *****************
  4233 ;; Defined at:
  4234 ;;		line 23 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  pTm             2    0[COMRAM] PTR struct .
  4237 ;;		 -> RtccTime(4), 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  rTD0            8   10[COMRAM] struct .
  4240 ;;  rTD1            8    2[COMRAM] struct .
  4241 ;; Return value:  Size  Location     Type
  4242 ;;		None               void
  4243 ;; Registers used:
  4244 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4251 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4253 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4254 ;;Total ram usage:       18 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_Read_RTC
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text24
  4264  001A14                     __ptext24:
  4265                           	opt stack 0
  4266  001A14                     _RtccReadTime:
  4267                           	opt stack 29
  4268  001A14  0EFC               	movlw	252
  4269  001A16  010F               	movlb	15	; () banked
  4270  001A18  173F               	andwf	63,f,b	;volatile
  4271                           
  4272                           ; BSR set to: 15
  4273  001A1A  010F               	movlb	15	; () banked
  4274  001A1C  813F               	bsf	63,0,b	;volatile
  4275                           
  4276                           ; BSR set to: 15
  4277  001A1E  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  4278                           
  4279                           ; BSR set to: 15
  4280  001A22  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  4281                           
  4282                           ; BSR set to: 15
  4283  001A26  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  4284                           
  4285                           ; BSR set to: 15
  4286  001A2A  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  4287                           
  4288                           ; BSR set to: 15
  4289  001A2E  0EFC               	movlw	252
  4290  001A30  010F               	movlb	15	; () banked
  4291  001A32  173F               	andwf	63,f,b	;volatile
  4292  001A34  010F               	movlb	15	; () banked
  4293  001A36  813F               	bsf	63,0,b	;volatile
  4294                           
  4295                           ; BSR set to: 15
  4296  001A38  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  4297                           
  4298                           ; BSR set to: 15
  4299  001A3C  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  4300                           
  4301                           ; BSR set to: 15
  4302  001A40  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  4303                           
  4304                           ; BSR set to: 15
  4305  001A44  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  4306                           
  4307                           ; BSR set to: 15
  4308  001A48  5009               	movf	RtccReadTime@rTD1+6,w,c
  4309  001A4A  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  4310  001A4C  A4D8               	btfss	status,2,c
  4311  001A4E  D7E2               	goto	l2038
  4312                           
  4313                           ; BSR set to: 15
  4314                           
  4315                           ; BSR set to: 15
  4316  001A50  EE20 F003          	lfsr	2,3
  4317  001A54  5001               	movf	RtccReadTime@pTm,w,c
  4318  001A56  26D9               	addwf	fsr2l,f,c
  4319  001A58  5002               	movf	RtccReadTime@pTm+1,w,c
  4320  001A5A  22DA               	addwfc	fsr2h,f,c
  4321  001A5C  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  4322  001A60  EE20 F002          	lfsr	2,2
  4323  001A64  5001               	movf	RtccReadTime@pTm,w,c
  4324  001A66  26D9               	addwf	fsr2l,f,c
  4325  001A68  5002               	movf	RtccReadTime@pTm+1,w,c
  4326  001A6A  22DA               	addwfc	fsr2h,f,c
  4327  001A6C  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  4328  001A70  EE20 F001          	lfsr	2,1
  4329  001A74  5001               	movf	RtccReadTime@pTm,w,c
  4330  001A76  26D9               	addwf	fsr2l,f,c
  4331  001A78  5002               	movf	RtccReadTime@pTm+1,w,c
  4332  001A7A  22DA               	addwfc	fsr2h,f,c
  4333  001A7C  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  4334                           
  4335                           ; BSR set to: 15
  4336  001A80  0012               	return		;funcret
  4337  001A82                     __end_of_RtccReadTime:
  4338                           	opt stack 0
  4339                           tblptru	equ	0xFF8
  4340                           tblptrh	equ	0xFF7
  4341                           tblptrl	equ	0xFF6
  4342                           tablat	equ	0xFF5
  4343                           prodh	equ	0xFF4
  4344                           prodl	equ	0xFF3
  4345                           intcon	equ	0xFF2
  4346                           indf0	equ	0xFEF
  4347                           postinc0	equ	0xFEE
  4348                           fsr0h	equ	0xFEA
  4349                           fsr0l	equ	0xFE9
  4350                           wreg	equ	0xFE8
  4351                           postdec1	equ	0xFE5
  4352                           fsr1l	equ	0xFE1
  4353                           indf2	equ	0xFDF
  4354                           postinc2	equ	0xFDE
  4355                           postdec2	equ	0xFDD
  4356                           fsr2h	equ	0xFDA
  4357                           fsr2l	equ	0xFD9
  4358                           status	equ	0xFD8
  4359                           
  4360 ;; *************** function _RtccReadDate *****************
  4361 ;; Defined at:
  4362 ;;		line 23 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  pDt             2    0[COMRAM] PTR struct .
  4365 ;;		 -> RtccDate(4), 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  rTD0            8   10[COMRAM] struct .
  4368 ;;  rTD1            8    2[COMRAM] struct .
  4369 ;; Return value:  Size  Location     Type
  4370 ;;		None               void
  4371 ;; Registers used:
  4372 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4379 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4381 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4382 ;;Total ram usage:       18 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_Read_RTC
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text25
  4392  001890                     __ptext25:
  4393                           	opt stack 0
  4394  001890                     _RtccReadDate:
  4395                           	opt stack 29
  4396  001890  0EFC               	movlw	252
  4397  001892  010F               	movlb	15	; () banked
  4398  001894  173F               	andwf	63,f,b	;volatile
  4399  001896  0E03               	movlw	3
  4400  001898  010F               	movlb	15	; () banked
  4401  00189A  133F               	iorwf	63,f,b	;volatile
  4402                           
  4403                           ; BSR set to: 15
  4404  00189C  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  4405                           
  4406                           ; BSR set to: 15
  4407  0018A0  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  4408                           
  4409                           ; BSR set to: 15
  4410  0018A4  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  4411                           
  4412                           ; BSR set to: 15
  4413  0018A8  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  4414                           
  4415                           ; BSR set to: 15
  4416  0018AC  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  4417                           
  4418                           ; BSR set to: 15
  4419  0018B0  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  4420  0018B4  0EFC               	movlw	252
  4421  0018B6  010F               	movlb	15	; () banked
  4422  0018B8  173F               	andwf	63,f,b	;volatile
  4423  0018BA  0E03               	movlw	3
  4424  0018BC  010F               	movlb	15	; () banked
  4425  0018BE  133F               	iorwf	63,f,b	;volatile
  4426                           
  4427                           ; BSR set to: 15
  4428  0018C0  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  4429                           
  4430                           ; BSR set to: 15
  4431  0018C4  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  4432                           
  4433                           ; BSR set to: 15
  4434  0018C8  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  4435                           
  4436                           ; BSR set to: 15
  4437  0018CC  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  4438                           
  4439                           ; BSR set to: 15
  4440  0018D0  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  4441                           
  4442                           ; BSR set to: 15
  4443  0018D4  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  4444  0018D8  5005               	movf	RtccReadDate@rTD1+2,w,c
  4445  0018DA  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  4446  0018DC  A4D8               	btfss	status,2,c
  4447  0018DE  D7D8               	goto	l2064
  4448                           
  4449                           ; BSR set to: 15
  4450                           
  4451                           ; BSR set to: 15
  4452  0018E0  EE20 F001          	lfsr	2,1
  4453  0018E4  5001               	movf	RtccReadDate@pDt,w,c
  4454  0018E6  26D9               	addwf	fsr2l,f,c
  4455  0018E8  5002               	movf	RtccReadDate@pDt+1,w,c
  4456  0018EA  22DA               	addwfc	fsr2h,f,c
  4457  0018EC  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  4458  0018F0  EE20 F002          	lfsr	2,2
  4459  0018F4  5001               	movf	RtccReadDate@pDt,w,c
  4460  0018F6  26D9               	addwf	fsr2l,f,c
  4461  0018F8  5002               	movf	RtccReadDate@pDt+1,w,c
  4462  0018FA  22DA               	addwfc	fsr2h,f,c
  4463  0018FC  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  4464                           
  4465                           ; BSR set to: 15
  4466  001900  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  4467  001904  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  4468  001908  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  4469                           
  4470                           ; BSR set to: 15
  4471  00190C  EE20 F003          	lfsr	2,3
  4472  001910  5001               	movf	RtccReadDate@pDt,w,c
  4473  001912  26D9               	addwf	fsr2l,f,c
  4474  001914  5002               	movf	RtccReadDate@pDt+1,w,c
  4475  001916  22DA               	addwfc	fsr2h,f,c
  4476  001918  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  4477                           
  4478                           ; BSR set to: 15
  4479  00191C  0012               	return		;funcret
  4480  00191E                     __end_of_RtccReadDate:
  4481                           	opt stack 0
  4482                           tblptru	equ	0xFF8
  4483                           tblptrh	equ	0xFF7
  4484                           tblptrl	equ	0xFF6
  4485                           tablat	equ	0xFF5
  4486                           prodh	equ	0xFF4
  4487                           prodl	equ	0xFF3
  4488                           intcon	equ	0xFF2
  4489                           indf0	equ	0xFEF
  4490                           postinc0	equ	0xFEE
  4491                           fsr0h	equ	0xFEA
  4492                           fsr0l	equ	0xFE9
  4493                           wreg	equ	0xFE8
  4494                           postdec1	equ	0xFE5
  4495                           fsr1l	equ	0xFE1
  4496                           indf2	equ	0xFDF
  4497                           postinc2	equ	0xFDE
  4498                           postdec2	equ	0xFDD
  4499                           fsr2h	equ	0xFDA
  4500                           fsr2l	equ	0xFD9
  4501                           status	equ	0xFD8
  4502                           tblptru	equ	0xFF8
  4503                           tblptrh	equ	0xFF7
  4504                           tblptrl	equ	0xFF6
  4505                           tablat	equ	0xFF5
  4506                           prodh	equ	0xFF4
  4507                           prodl	equ	0xFF3
  4508                           intcon	equ	0xFF2
  4509                           indf0	equ	0xFEF
  4510                           postinc0	equ	0xFEE
  4511                           fsr0h	equ	0xFEA
  4512                           fsr0l	equ	0xFE9
  4513                           wreg	equ	0xFE8
  4514                           postdec1	equ	0xFE5
  4515                           fsr1l	equ	0xFE1
  4516                           indf2	equ	0xFDF
  4517                           postinc2	equ	0xFDE
  4518                           postdec2	equ	0xFDD
  4519                           fsr2h	equ	0xFDA
  4520                           fsr2l	equ	0xFD9
  4521                           status	equ	0xFD8
  4522                           
  4523                           	psect	rparam
  4524  0000                     tblptru	equ	0xFF8
  4525                           tblptrh	equ	0xFF7
  4526                           tblptrl	equ	0xFF6
  4527                           tablat	equ	0xFF5
  4528                           prodh	equ	0xFF4
  4529                           prodl	equ	0xFF3
  4530                           intcon	equ	0xFF2
  4531                           indf0	equ	0xFEF
  4532                           postinc0	equ	0xFEE
  4533                           fsr0h	equ	0xFEA
  4534                           fsr0l	equ	0xFE9
  4535                           wreg	equ	0xFE8
  4536                           postdec1	equ	0xFE5
  4537                           fsr1l	equ	0xFE1
  4538                           indf2	equ	0xFDF
  4539                           postinc2	equ	0xFDE
  4540                           postdec2	equ	0xFDD
  4541                           fsr2h	equ	0xFDA
  4542                           fsr2l	equ	0xFD9
  4543                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    14
    Data        12
    BSS         70
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      90
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[7]), STR_4(CODE[7]), buffer2(BANK0[20]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _lcd_setcursor_vb->_lcd_send_byte
    _caratula->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13075
                                             35 COMRAM     3     3      0
                           _Read_RTC
                              _Setup
                           _caratula
                         _lcd_gotoxy
                   _lcd_setcursor_vb
 ---------------------------------------------------------------------------------
 (1) _lcd_setcursor_vb                                     2     1      1     796
                                              4 COMRAM     2     1      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0    6005
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    22     10    1916
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    2238
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    1873
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           3     2      1    1205
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3764
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     841
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _caratula
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_setcursor_vb
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     26      5A       1       94.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86       6        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Aug 16 20:51:18 2016

                        _a 002B                          _b 002D                          _c 002F  
                        _i 0031                          _j 0033                          _k 0035  
           ?_lcd_send_byte 0003               ___awdiv@sign 0006        ___wmul@multiplicand 0003  
              lcd_comand@d 0005               __CFG_CP0$OFF 000000                        l160 1708  
                      l147 16FE                        l261 110E                        l182 1C72  
                      l183 1C74                        l159 1700                        l905 1AD4  
                      l915 1B74                        u910 19C2                        u930 19DC  
                      u908 19AC                        u950 19F8                        u928 19C4  
                      u890 19AA                        u948 19DE                        u968 19FA  
                      _dia 0050                        _mes 0056                        wreg 000FE8  
          RtccReadDate@pDt 0001                lcd_gotoxy@x 0006                lcd_gotoxy@y 0005  
                     l1034 1D0C                       l2100 1AE0                       l2104 1B0A  
                     l2120 0F78                       l2202 1944                       l2122 0F8E  
                     l2114 0F60                       l2220 1970                       l2212 195C  
                     l2140 1038                       l2116 0F6E                       l2108 0F46  
                     l2038 1A14                       l2206 194C                       l2150 1060  
                     l2134 1010                       l2126 0FAC                       l2064 1890  
                     l2162 10AC                       l2154 1084                       l2146 1054  
                     l2138 1016                       l2164 10B6                       l2332 1652  
                     l2182 1114                       l2174 10E4                       l2158 1088  
                     l2190 1174                       l2176 10EC                       l2168 10C2  
                     l2192 1190                       l2360 16B8                       l2352 169A  
                     l1706 1D1E                       l1820 1384                       l1732 1CBC  
                     l2188 1168                       l2292 1606                       l2380 170C  
                     l2372 16E8                       l2356 16A8                       l2364 16C8  
                     l1830 13B4                       l1814 134A                       l1734 1CC2  
                     l1824 1398                       l1752 1496                       l1920 1822  
                     l2288 15EE                       l2368 16D6                       l1762 14C6  
                     l1746 146C                       l1930 184A                       l1914 1810  
                     l2298 162A                       l1756 14AA                       l1870 1422  
                     l1862 140A                       l1790 1516                       l1926 1838  
                     l1942 1874                       l1928 1842                       l1880 1B9A  
                     l1960 1AAA                       l1866 1416                       l1794 1522  
                     l1946 1884                       l1938 1868                       l1882 1BA6  
                     l1876 1B82                       l1956 1A98                       l1980 1B52  
                     l1798 152E                       l1878 1B8E                       l1886 1BB2  
                     l1958 1AA2                       l1968 1AC8                       l1984 1B68  
                     l1976 1B40                       l1896 1CEC                       l1978 1B4A  
                     STR_1 0F34                       STR_2 0F0F                       STR_3 0F1E  
                     STR_4 0F34                       STR_5 0F2D                       u1400 1B2A  
                     u1407 1B20                       u1610 1616                       u1390 1B00  
                     u1397 1AF6                       u1807 1D20                       u1777 1684  
                     u1787 1712                       u1797 1D0E           ?_lcd_send_nibble 0001  
                     _anio 004E                       _flag 02D0                       _main 1644  
                     _hora 0054                       fsr0h 000FEA                       indf0 000FEF  
                     fsr0l 000FE9                       fsr2h 000FDA                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9              __CFG_T1DIG$ON 000000  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
            __CFG_IESO$OFF 000000           RtccReadDate@rTD0 000B           RtccReadDate@rTD1 0003  
             ___param_bank 000010            RtccReadTime@pTm 0001                _Delay1KTCYx 1D0A  
            __CFG_PLLDIV$1 000000                      ?_main 0001            __end_of___awdiv 1890  
    __size_of_Delay100TCYx 0012            ___awdiv@divisor 0003            __end_of___lwdiv 1ADE  
          __end_of___lwmod 1B7E            ___awdiv@counter 0005                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94             __CFG_FCMEN$OFF 000000  
                    _Setup 1BCA            __end_of_dpowers 0F0B                      _mes_d 0048  
                    _mes_u 0049            __end_of_isdigit 1CF6                      main@x 0026  
                    main@y 0025             __pbitbssCOMRAM 02D0                      tablat 000FF5  
             lcd_putrs@ptr 0009                      status 000FD8            __end_of_sprintf 11A0  
  __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 1C12               _Delay100TCYx 1D1C  
             __end_of_main 1722            ??_lcd_send_byte 0004           RtccReadTime@rTD0 000B  
         RtccReadTime@rTD1 0003           __end_of_Read_RTC 17FA                     ??_main 0024  
            __activetblptr 000002           __end_of_RtccWrOn 1D40                     ?_Setup 0001  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _EECON2 000FA7  
                   _ANCON0 000F48           ___awdiv@dividend 0001             __CFG_WDTEN$OFF 000000  
         RtccWriteDate@pDt 0001                     _RTCCFG 000F3F             __CFG_WPCFG$OFF 000000  
         __end_of_caratula 1644             __CFG_WPDIS$OFF 000000             __CFG_XINST$OFF 000000  
         __end_of_lcd_init 199E           __end_of_lcd_putc 1BCA          ?_lcd_setcursor_vb 0005  
                   ___wmul 1C88                  ??___awdiv 0005             __CFG_STVREN$ON 000000  
                   _diasem 0052                     _anio_d 0041                     _anio_u 0042  
                ??___lwdiv 0005                  ??___lwmod 000C         ??_lcd_setcursor_vb 0006  
                   _hora_d 0046                     _hora_u 0047                     clear_0 1C18  
                   clear_1 1C26           ___awdiv@quotient 0007                     _minuto 0058  
    __end_of_RtccWriteDate 142E      __end_of_RtccWriteTime 153A           RtccWriteTime@pTm 0001  
             __pdataCOMRAM 004E                  ??_isdigit 0001               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_sprintf 0017                 __accesstop 0060    __end_of__initialization 1C4C  
       __size_of_Write_RTC 0148              ___rparam_used 000001             __pcstackCOMRAM 0001  
            __end_of_Setup 1C12            __CFG_DSWDTPS$G2 000000            __CFG_OSC$INTOSC 000000  
                  ??_Setup 000E          lcd_gotoxy@address 0007         __size_of_lcd_putrs 0054  
             sprintf@width 0021                 __pbssBANK0 0060                  ?_Read_RTC 0001  
               _dia_semana 0043  RtccWriteTime@tempHourWDay 000A                 __pnvCOMRAM 0041  
                ?_RtccWrOn 0001             lcd_send_byte@n 0003                    ?___wmul 0001  
            ?_RtccReadDate 0001              ?_RtccReadTime 0001               ?_Delay1KTCYx 0001  
        __end_of_Write_RTC 12E8                 _lcd_comand 1D40                  ?_caratula 0001  
               _lcd_gotoxy 1CB0                    _RTCVALH 000F99                    _RTCVALL 000F98  
                ?_lcd_init 0001                  ?_lcd_putc 0001                 ??_Read_RTC 0013  
                  __Hparam 0000                    __Lparam 0000   __size_of_lcd_send_nibble 0076  
               ??_RtccWrOn 0001             ??_RtccReadDate 0003             ??_RtccReadTime 0003  
                  ___awdiv 17FA          __end_of_lcd_putrs 1B32            __size_of___wmul 0028  
                  ___lwdiv 1A82                    ___lwmod 1B32               __psmallconst 0F00  
              _RtccTimeVal 0027                    __pcinit 1C12                    _fecha_d 0044  
                  _fecha_u 0045                    __ramtop 0F00                    __ptext0 1644  
                  __ptext1 1CF6                    __ptext2 153A                    __ptext3 0F3C  
                  __ptext4 1CD4                    __ptext5 1C88                    __ptext6 1B32  
                  __ptext7 1A82                    __ptext8 1ADE                    __ptext9 1B7E  
                  _buffer2 0078                  _T1CONbits 000FCD                    _dpowers 0F01  
                  _isdigit 1CD4                 ??_caratula 0024                    _segundo 0037  
                  _sprintf 0F3C                 ??_lcd_init 0005                 ??_lcd_putc 0008  
     end_of_initialization 1C4C       lcd_send_byte@address 0004              __Lmediumconst 0000  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc2 000FDE      __end_of_lcd_send_byte 1C88                  _PORTAbits 000F80  
         __CFG_DSBOREN$OFF 000000                ?_lcd_comand 0001           __CFG_CPUDIV$OSC1 000000  
                _TRISBbits 000F93                ?_lcd_gotoxy 0005  __size_of_lcd_setcursor_vb 0014  
          _LCD_INIT_STRING 0F0B           __CFG_IOL1WAY$OFF 000000  RtccWriteDate@tempDayMonth 000A  
      __CFG_MSSP7B_EN$MSK7 000000           Delay100TCYx@unit 0001             __end_of___wmul 1CB0  
            __pidataCOMRAM 1D4E  RtccWriteDate@tempHourWDay 000C          ??_lcd_send_nibble 0001  
     __size_of_Delay1KTCYx 0012           __CFG_DSWDTEN$OFF 000000        start_initialization 1C12  
     __end_of_RtccReadDate 191E       __end_of_RtccReadTime 1A82       RtccWriteTime@wasAlrm 0006  
     RtccWriteTime@wasWrEn 0007     __size_of_RtccWriteDate 0146            RtccWriteDate@di 0003  
   __size_of_RtccWriteTime 010C          __size_of_Read_RTC 00D8        __size_of_lcd_comand 000E  
      __size_of_lcd_gotoxy 0024                   ??___wmul 0005          __size_of_RtccWrOn 0012  
          RtccWriteTime@di 0003           __CFG_LPT1OSC$OFF 000000                _ALRMCFGbits 000F91  
  __end_of_LCD_INIT_STRING 0F0F                __pbssCOMRAM 0027                  _Write_RTC 11A0  
             _isdigit$1822 0002          __size_of_caratula 010A            Delay1KTCYx@unit 0001  
        __size_of_lcd_init 0080                sprintf@flag 001D          __size_of_lcd_putc 004C  
              sprintf@prec 0020           ___lwdiv@dividend 0001              ?_Delay100TCYx 0001  
                 ?___awdiv 0001                   ?___lwdiv 0001                   ?___lwmod 0008  
  RtccWriteTime@tempMinSec 0008                  _lcd_putrs 1ADE    lcd_setcursor_vb@visible 0006  
            _RtccWriteDate 12E8                __smallconst 0F00              _RtccWriteTime 142E  
                 ?_isdigit 0001       __CFG_RTCOSC$T1OSCREF 000000           _lcd_setcursor_vb 1CF6  
           __size_of_Setup 0048                 ?_Write_RTC 0001           ___lwdiv@quotient 0005  
                 ?_sprintf 000D           _RtccAlrmTimeDate 0060             ___wmul@product 0005  
                 _LATBbits 000F8A                   _PIE3bits 000FA3                  _segundo_d 004C  
           ??_Delay100TCYx 0001                  _segundo_u 004D           __CFG_WDTPS$32768 000000  
       RtccWriteDate@wasOn 0005         _Rtcc_read_TimeDate 0070             ?_RtccWriteDate 0001  
               ?_lcd_putrs 0009          ___wmul@multiplier 0001             ?_RtccWriteTime 0001  
                lcd_init@i 0005      __size_of_RtccReadDate 008E               ??_lcd_comand 0005  
                lcd_putc@c 0008      __size_of_RtccReadTime 006E               ??_lcd_gotoxy 0006  
                copy_data0 1C40                   _Read_RTC 1722            _lcd_send_nibble 199E  
                 __Hrparam 0000                   _RtccDate 0039                   __Lrparam 0000  
                 _RtccTime 003D                   _RtccWrOn 1D2E         __end_of_lcd_comand 1D4E  
       __end_of_lcd_gotoxy 1CD4               _RtccReadDate 1890           __size_of___awdiv 0096  
             _RtccReadTime 1A14           __size_of___lwdiv 005C           __size_of___lwmod 004C  
             _RtccTimeDate 0068                 sprintf@val 001E                   _caratula 153A  
         __size_of_isdigit 0022            ___lwdiv@divisor 0003                ??_Write_RTC 000E  
          ___lwdiv@counter 0007                   __ptext10 1CB0                   __ptext11 1BCA  
                 __ptext20 142E                   __ptext12 191E                   __ptext21 12E8  
                 __ptext13 1D0A                   __ptext22 1D2E                   __ptext14 1D40  
                 __ptext23 1722                   __ptext15 1C56                   __ptext24 1A14  
                 __ptext16 199E                   __ptext25 1890                   __ptext17 1D1C  
                 __ptext18 11A0                   __ptext19 17FA                   _lcd_init 191E  
                 _lcd_putc 1B7E           __size_of_sprintf 0264     __size_of_lcd_send_byte 0032  
            __size_of_main 00DE                   _minuto_d 004A                   _minuto_u 004B  
            ??_Delay1KTCYx 0001            ??_RtccWriteDate 0004            ??_RtccWriteTime 0004  
              ??_lcd_putrs 000B                _OSCTUNEbits 000F9B                 _INTCONbits 000FF2  
       RtccWriteTime@wasOn 0005       __end_of_Delay100TCYx 1D2E                   isdigit@c 0003  
                sprintf@ap 001B    __end_of_lcd_send_nibble 1A14                  sprintf@sp 000D  
    lcd_setcursor_vb@blink 0005           ___lwmod@dividend 0008                 _OSCCONbits 000FD3  
 __end_of_lcd_setcursor_vb 1D0A      RtccWriteDate@tempYear 0007              _lcd_send_byte 1C56  
               _RTCCFGbits 000F3F                   sprintf@c 0023                   sprintf@f 000F  
          ___lwmod@divisor 000A        __end_of_Delay1KTCYx 1D1C            ___lwmod@counter 000C  
     RtccWriteDate@wasAlrm 0006       RtccWriteDate@wasWrEn 0009      lcd_send_nibble@nibble 0002  
