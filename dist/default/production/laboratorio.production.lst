

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Aug 18 19:57:19 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  001E04                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _anio
    49  001E04  000F               	dw	15
    50                           
    51                           ;initializer for _dia
    52  001E06  0008               	dw	8
    53                           
    54                           ;initializer for _diasem
    55  001E08  0003               	dw	3
    56                           
    57                           ;initializer for _hora
    58  001E0A  0012               	dw	18
    59                           
    60                           ;initializer for _mes
    61  001E0C  0009               	dw	9
    62                           
    63                           ;initializer for _minuto
    64  001E0E  001E               	dw	30
    65                           
    66                           	psect	smallconst
    67  000F00                     __psmallconst:
    68                           	opt stack 0
    69  000F00  00                 	db	0
    70  000F01                     _dpowers:
    71                           	opt stack 0
    72  000F01  0001               	dw	1
    73  000F03  000A               	dw	10
    74  000F05  0064               	dw	100
    75  000F07  03E8               	dw	1000
    76  000F09  2710               	dw	10000
    77  000F0B                     __end_of_dpowers:
    78                           	opt stack 0
    79  000F0B                     _LCD_INIT_STRING:
    80                           	opt stack 0
    81  000F0B  28                 	db	40
    82  000F0C  0C                 	db	12
    83  000F0D  01                 	db	1
    84  000F0E  06                 	db	6
    85  000F0F                     __end_of_LCD_INIT_STRING:
    86                           	opt stack 0
    87  000F0F                     STR_2:
    88                           
    89                           ; BSR set to: 15
    90  000F0F  25                 	db	37
    91  000F10  30                 	db	48	;'0'
    92  000F11  32                 	db	50	;'2'
    93  000F12  75                 	db	117	;'u'
    94  000F13  2F                 	db	47
    95  000F14  25                 	db	37
    96  000F15  30                 	db	48	;'0'
    97  000F16  32                 	db	50	;'2'
    98  000F17  75                 	db	117	;'u'
    99  000F18  2F                 	db	47
   100  000F19  25                 	db	37
   101  000F1A  30                 	db	48	;'0'
   102  000F1B  32                 	db	50	;'2'
   103  000F1C  75                 	db	117	;'u'
   104  000F1D  00                 	db	0
   105  000F1E                     STR_3:
   106                           
   107                           ; BSR set to: 15
   108  000F1E  25                 	db	37
   109  000F1F  30                 	db	48	;'0'
   110  000F20  32                 	db	50	;'2'
   111  000F21  75                 	db	117	;'u'
   112  000F22  3A                 	db	58	;':'
   113  000F23  25                 	db	37
   114  000F24  30                 	db	48	;'0'
   115  000F25  32                 	db	50	;'2'
   116  000F26  75                 	db	117	;'u'
   117  000F27  3A                 	db	58	;':'
   118  000F28  25                 	db	37
   119  000F29  30                 	db	48	;'0'
   120  000F2A  32                 	db	50	;'2'
   121  000F2B  75                 	db	117	;'u'
   122  000F2C  00                 	db	0
   123  000F2D                     STR_5:
   124                           
   125                           ; BSR set to: 15
   126  000F2D  20                 	db	32
   127  000F2E  20                 	db	32
   128  000F2F  20                 	db	32
   129  000F30  20                 	db	32
   130  000F31  20                 	db	32
   131  000F32  20                 	db	32
   132  000F33  00                 	db	0
   133  000F34                     STR_1:
   134                           
   135                           ; BSR set to: 15
   136  000F34  55                 	db	85	;'U'
   137  000F35  4E                 	db	78	;'N'
   138  000F36  49                 	db	73	;'I'
   139  000F37  4D                 	db	77	;'M'
   140  000F38  49                 	db	73	;'I'
   141  000F39  43                 	db	67	;'C'
   142  000F3A  00                 	db	0
   143  0000                     
   144                           ; #config settings
   145  000F3B  00                 	db	0	; dummy byte at the end
   146  0000                     
   147                           	psect	nvCOMRAM
   148  000041                     __pnvCOMRAM:
   149                           	opt stack 0
   150  000041                     _anio_d:
   151                           	opt stack 0
   152  000041                     	ds	1
   153  000042                     _anio_u:
   154                           	opt stack 0
   155  000042                     	ds	1
   156  000043                     _dia_semana:
   157                           	opt stack 0
   158  000043                     	ds	1
   159  000044                     _fecha_d:
   160                           	opt stack 0
   161  000044                     	ds	1
   162  000045                     _fecha_u:
   163                           	opt stack 0
   164  000045                     	ds	1
   165  000046                     _hora_d:
   166                           	opt stack 0
   167  000046                     	ds	1
   168  000047                     _hora_u:
   169                           	opt stack 0
   170  000047                     	ds	1
   171  000048                     _mes_d:
   172                           	opt stack 0
   173  000048                     	ds	1
   174  000049                     _mes_u:
   175                           	opt stack 0
   176  000049                     	ds	1
   177  00004A                     _minuto_d:
   178                           	opt stack 0
   179  00004A                     	ds	1
   180  00004B                     _minuto_u:
   181                           	opt stack 0
   182  00004B                     	ds	1
   183  00004C                     _segundo_d:
   184                           	opt stack 0
   185  00004C                     	ds	1
   186  00004D                     _segundo_u:
   187                           	opt stack 0
   188  00004D                     	ds	1
   189  0000                     _ANCON0	set	3912
   190  0000                     _RTCCFG	set	3903
   191  0000                     _RTCCFGbits	set	3903
   192  0000                     _ADCON0	set	4034
   193  0000                     _ADCON1	set	4033
   194  0000                     _ALRMCFGbits	set	3985
   195  0000                     _EECON2	set	4007
   196  0000                     _INTCONbits	set	4082
   197  0000                     _LATBbits	set	3978
   198  0000                     _OSCCONbits	set	4051
   199  0000                     _OSCTUNEbits	set	3995
   200  0000                     _PIE3bits	set	4003
   201  0000                     _PORTAbits	set	3968
   202  0000                     _RTCVALH	set	3993
   203  0000                     _RTCVALL	set	3992
   204  0000                     _T1CONbits	set	4045
   205  0000                     _TRISA	set	3986
   206  0000                     _TRISB	set	3987
   207  0000                     _TRISBbits	set	3987
   208  0000                     _TRISC	set	3988
   209                           
   210                           	psect	cinit
   211  001CC8                     __pcinit:
   212                           	opt stack 0
   213  001CC8                     start_initialization:
   214                           	opt stack 0
   215  001CC8                     __initialization:
   216                           	opt stack 0
   217                           
   218                           ; Clear objects allocated to BANK0 (44 bytes)
   219  001CC8  EE00  F060         	lfsr	0,__pbssBANK0
   220  001CCC  0E2C               	movlw	44
   221  001CCE                     clear_0:
   222  001CCE  6AEE               	clrf	postinc0,c
   223  001CD0  06E8               	decf	wreg,f,c
   224  001CD2  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   227  001CD4  6A5A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   228                           
   229                           ; Clear objects allocated to COMRAM (26 bytes)
   230  001CD6  EE00  F027         	lfsr	0,__pbssCOMRAM
   231  001CDA  0E1A               	movlw	26
   232  001CDC                     clear_1:
   233  001CDC  6AEE               	clrf	postinc0,c
   234  001CDE  06E8               	decf	wreg,f,c
   235  001CE0  E1FD               	bnz	clear_1
   236                           
   237                           ; Initialize objects allocated to COMRAM (12 bytes)
   238                           ; load TBLPTR registers with __pidataCOMRAM
   239  001CE2  0E04               	movlw	low __pidataCOMRAM
   240  001CE4  6EF6               	movwf	tblptrl,c
   241  001CE6  0E1E               	movlw	high __pidataCOMRAM
   242  001CE8  6EF7               	movwf	tblptrh,c
   243  001CEA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   244  001CEC  6EF8               	movwf	tblptru,c
   245  001CEE  EE00  F04E         	lfsr	0,__pdataCOMRAM
   246  001CF2  EE10 F00C          	lfsr	1,12
   247  001CF6                     copy_data0:
   248  001CF6  0009               	tblrd		*+
   249  001CF8  CFF5 FFEE          	movff	tablat,postinc0
   250  001CFC  50E5               	movf	postdec1,w,c
   251  001CFE  50E1               	movf	fsr1l,w,c
   252  001D00  E1FA               	bnz	copy_data0
   253  001D02                     end_of_initialization:
   254                           	opt stack 0
   255  001D02                     __end_of__initialization:
   256                           	opt stack 0
   257  001D02  0E00               	movlw	low (__Lmediumconst shr (0+16))
   258  001D04  6EF8               	movwf	tblptru,c
   259  001D06  0100               	movlb	0
   260  001D08  EF22  F00B         	goto	_main	;jump to C main() function
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           postdec1	equ	0xFE5
   268                           fsr1l	equ	0xFE1
   269                           
   270                           	psect	bitbssCOMRAM
   271  0002D0                     __pbitbssCOMRAM:
   272                           	opt stack 0
   273  0002D0                     _flag:
   274                           	opt stack 0
   275  0002D0                     	ds	1
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           postdec1	equ	0xFE5
   283                           fsr1l	equ	0xFE1
   284                           
   285                           	psect	bssCOMRAM
   286  000027                     __pbssCOMRAM:
   287                           	opt stack 0
   288  000027                     _RtccTimeVal:
   289                           	opt stack 0
   290  000027                     	ds	4
   291  00002B                     _a:
   292                           	opt stack 0
   293  00002B                     	ds	2
   294  00002D                     _b:
   295                           	opt stack 0
   296  00002D                     	ds	2
   297  00002F                     _c:
   298                           	opt stack 0
   299  00002F                     	ds	2
   300  000031                     _i:
   301                           	opt stack 0
   302  000031                     	ds	2
   303  000033                     _j:
   304                           	opt stack 0
   305  000033                     	ds	2
   306  000035                     _k:
   307                           	opt stack 0
   308  000035                     	ds	2
   309  000037                     _segundo:
   310                           	opt stack 0
   311  000037                     	ds	2
   312  000039                     _RtccDate:
   313                           	opt stack 0
   314  000039                     	ds	4
   315  00003D                     _RtccTime:
   316                           	opt stack 0
   317  00003D                     	ds	4
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	dataCOMRAM
   328  00004E                     __pdataCOMRAM:
   329                           	opt stack 0
   330  00004E                     _anio:
   331                           	opt stack 0
   332  00004E                     	ds	2
   333  000050                     _dia:
   334                           	opt stack 0
   335  000050                     	ds	2
   336  000052                     _diasem:
   337                           	opt stack 0
   338  000052                     	ds	2
   339  000054                     _hora:
   340                           	opt stack 0
   341  000054                     	ds	2
   342  000056                     _mes:
   343                           	opt stack 0
   344  000056                     	ds	2
   345  000058                     _minuto:
   346                           	opt stack 0
   347  000058                     	ds	2
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           postinc0	equ	0xFEE
   353                           wreg	equ	0xFE8
   354                           postdec1	equ	0xFE5
   355                           fsr1l	equ	0xFE1
   356                           
   357                           	psect	bssBANK0
   358  000060                     __pbssBANK0:
   359                           	opt stack 0
   360  000060                     _RtccAlrmTimeDate:
   361                           	opt stack 0
   362  000060                     	ds	8
   363  000068                     _RtccTimeDate:
   364                           	opt stack 0
   365  000068                     	ds	8
   366  000070                     _Rtcc_read_TimeDate:
   367                           	opt stack 0
   368  000070                     	ds	8
   369  000078                     _buffer2:
   370                           	opt stack 0
   371  000078                     	ds	20
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	cstackCOMRAM
   382  000001                     __pcstackCOMRAM:
   383                           	opt stack 0
   384  000001                     ??_isdigit:
   385  000001                     ??_lcd_send_nibble:
   386  000001                     ?___wmul:
   387                           	opt stack 0
   388  000001                     ?___awdiv:
   389                           	opt stack 0
   390  000001                     ?___lwdiv:
   391                           	opt stack 0
   392  000001                     Delay100TCYx@unit:
   393                           	opt stack 0
   394  000001                     Delay1KTCYx@unit:
   395                           	opt stack 0
   396  000001                     RtccReadDate@pDt:
   397                           	opt stack 0
   398  000001                     RtccReadTime@pTm:
   399                           	opt stack 0
   400  000001                     RtccWriteDate@pDt:
   401                           	opt stack 0
   402  000001                     RtccWriteTime@pTm:
   403                           	opt stack 0
   404  000001                     ___wmul@multiplier:
   405                           	opt stack 0
   406  000001                     ___awdiv@dividend:
   407                           	opt stack 0
   408  000001                     ___lwdiv@dividend:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x0
   412  000001                     	ds	1
   413  000002                     lcd_send_nibble@nibble:
   414                           	opt stack 0
   415  000002                     _isdigit$1825:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x1
   419  000002                     	ds	1
   420  000003                     lcd_send_byte@n:
   421                           	opt stack 0
   422  000003                     RtccWriteDate@di:
   423                           	opt stack 0
   424  000003                     RtccWriteTime@di:
   425                           	opt stack 0
   426  000003                     isdigit@c:
   427                           	opt stack 0
   428  000003                     ___wmul@multiplicand:
   429                           	opt stack 0
   430  000003                     ___awdiv@divisor:
   431                           	opt stack 0
   432  000003                     ___lwdiv@divisor:
   433                           	opt stack 0
   434  000003                     RtccReadDate@rTD1:
   435                           	opt stack 0
   436  000003                     RtccReadTime@rTD1:
   437                           	opt stack 0
   438                           
   439                           ; 8 bytes @ 0x2
   440  000003                     	ds	1
   441  000004                     lcd_send_byte@address:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x3
   445  000004                     	ds	1
   446  000005                     lcd_init@i:
   447                           	opt stack 0
   448  000005                     lcd_gotoxy@y:
   449                           	opt stack 0
   450  000005                     lcd_comand@d:
   451                           	opt stack 0
   452  000005                     lcd_setcursor_vb@blink:
   453                           	opt stack 0
   454  000005                     RtccWriteDate@wasOn:
   455                           	opt stack 0
   456  000005                     RtccWriteTime@wasOn:
   457                           	opt stack 0
   458  000005                     ___awdiv@counter:
   459                           	opt stack 0
   460  000005                     ___wmul@product:
   461                           	opt stack 0
   462  000005                     ___lwdiv@quotient:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x4
   466  000005                     	ds	1
   467  000006                     lcd_gotoxy@x:
   468                           	opt stack 0
   469  000006                     lcd_setcursor_vb@visible:
   470                           	opt stack 0
   471  000006                     RtccWriteDate@wasAlrm:
   472                           	opt stack 0
   473  000006                     RtccWriteTime@wasAlrm:
   474                           	opt stack 0
   475  000006                     ___awdiv@sign:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x5
   479  000006                     	ds	1
   480  000007                     lcd_gotoxy@address:
   481                           	opt stack 0
   482  000007                     RtccWriteTime@wasWrEn:
   483                           	opt stack 0
   484  000007                     ___lwdiv@counter:
   485                           	opt stack 0
   486  000007                     RtccWriteDate@tempYear:
   487                           	opt stack 0
   488  000007                     ___awdiv@quotient:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x6
   492  000007                     	ds	1
   493  000008                     ?___lwmod:
   494                           	opt stack 0
   495  000008                     lcd_putc@c:
   496                           	opt stack 0
   497  000008                     RtccWriteTime@tempMinSec:
   498                           	opt stack 0
   499  000008                     ___lwmod@dividend:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x7
   503  000008                     	ds	1
   504  000009                     RtccWriteDate@wasWrEn:
   505                           	opt stack 0
   506  000009                     lcd_putrs@ptr:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x8
   510  000009                     	ds	1
   511  00000A                     RtccWriteDate@tempDayMonth:
   512                           	opt stack 0
   513  00000A                     RtccWriteTime@tempHourWDay:
   514                           	opt stack 0
   515  00000A                     ___lwmod@divisor:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x9
   519  00000A                     	ds	1
   520  00000B                     RtccReadDate@rTD0:
   521                           	opt stack 0
   522  00000B                     RtccReadTime@rTD0:
   523                           	opt stack 0
   524                           
   525                           ; 8 bytes @ 0xA
   526  00000B                     	ds	1
   527  00000C                     ___lwmod@counter:
   528                           	opt stack 0
   529  00000C                     RtccWriteDate@tempHourWDay:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0xB
   533  00000C                     	ds	1
   534  00000D                     ?_sprintf:
   535                           	opt stack 0
   536  00000D                     sprintf@sp:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0xC
   540  00000D                     	ds	1
   541  00000E                     ??_setClock:
   542                           
   543                           ; 0 bytes @ 0xD
   544  00000E                     	ds	1
   545  00000F                     setClock@x:
   546                           	opt stack 0
   547  00000F                     sprintf@f:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0xE
   551  00000F                     	ds	4
   552  000013                     
   553                           ; 0 bytes @ 0x12
   554  000013                     	ds	4
   555  000017                     ??_sprintf:
   556                           
   557                           ; 0 bytes @ 0x16
   558  000017                     	ds	4
   559  00001B                     sprintf@ap:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x1A
   563  00001B                     	ds	2
   564  00001D                     sprintf@flag:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x1C
   568  00001D                     	ds	1
   569  00001E                     sprintf@val:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x1D
   573  00001E                     	ds	2
   574  000020                     sprintf@prec:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x1F
   578  000020                     	ds	1
   579  000021                     sprintf@width:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x20
   583  000021                     	ds	2
   584  000023                     sprintf@c:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x22
   588  000023                     	ds	1
   589  000024                     ??_main:
   590                           
   591                           ; 0 bytes @ 0x23
   592  000024                     	ds	1
   593  000025                     main@y:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x24
   597  000025                     	ds	1
   598  000026                     main@x:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0x25
   602  000026                     	ds	1
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           
   612 ;;
   613 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   614 ;;
   615 ;; *************** function _main *****************
   616 ;; Defined at:
   617 ;;		line 140 in file "main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  x               1   37[COMRAM] unsigned char 
   622 ;;  y               1   36[COMRAM] unsigned char 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  2  160[None  ] int 
   625 ;; Registers used:
   626 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   635 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   636 ;;Total ram usage:        3 bytes
   637 ;; Hardware stack levels required when called:    6
   638 ;; This function calls:
   639 ;;		_Read_RTC
   640 ;;		_Setup
   641 ;;		_caratula
   642 ;;		_lcd_gotoxy
   643 ;;		_lcd_setcursor_vb
   644 ;;		_setClock
   645 ;; This function is called by:
   646 ;;		Startup code after reset
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text0
   651  001644                     __ptext0:
   652                           	opt stack 0
   653  001644                     _main:
   654                           	opt stack 25
   655                           
   656                           ;main.c: 142: Setup();
   657                           
   658                           ; BSR set to: 15
   659                           ;incstack = 0
   660  001644  EC40  F00E         	call	_Setup	;wreg free
   661                           
   662                           ;main.c: 143: int8 x = 9;
   663  001648  0E09               	movlw	9
   664  00164A  6E26               	movwf	main@x,c
   665                           
   666                           ;main.c: 144: int8 y = 1;
   667  00164C  0E01               	movlw	1
   668  00164E  6E25               	movwf	main@y,c
   669  001650  D000               	goto	l2419
   670  001652                     l2419:
   671                           
   672                           ;main.c: 147: {
   673                           ;main.c: 148: Read_RTC();
   674  001652  EC90  F00B         	call	_Read_RTC	;wreg free
   675                           
   676                           ;main.c: 149: caratula();
   677  001656  EC9D  F00A         	call	_caratula	;wreg free
   678                           
   679                           ;main.c: 150: lcd_setcursor_vb(1,1);
   680  00165A  0E01               	movlw	1
   681  00165C  6E05               	movwf	lcd_setcursor_vb@blink,c
   682  00165E  0E01               	movlw	1
   683  001660  ECD6  F00E         	call	_lcd_setcursor_vb
   684                           
   685                           ;main.c: 151: lcd_gotoxy(x,y);
   686  001664  C025  F005         	movff	main@y,lcd_gotoxy@y
   687  001668  5026               	movf	main@x,w,c
   688  00166A  ECB3  F00E         	call	_lcd_gotoxy
   689                           
   690                           ;main.c: 152: if(PORTAbits.RA1 == 0)
   691  00166E  B280               	btfsc	3968,1,c	;volatile
   692  001670  D046               	goto	l2465
   693                           
   694                           ;main.c: 153: {
   695                           ;main.c: 154: x++;
   696  001672  2A26               	incf	main@x,f,c
   697                           
   698                           ;main.c: 155: lcd_gotoxy(x,y);
   699  001674  C025  F005         	movff	main@y,lcd_gotoxy@y
   700  001678  5026               	movf	main@x,w,c
   701  00167A  ECB3  F00E         	call	_lcd_gotoxy
   702                           
   703                           ;main.c: 156: _delay((unsigned long)((50)*(8000000/4000.0)));
   704  00167E  0E82               	movlw	130
   705  001680  6E24               	movwf	??_main& (0+255),c
   706  001682  0EDE               	movlw	222
   707  001684                     u1857:
   708  001684  2EE8               	decfsz	wreg,f,c
   709  001686  D7FE               	goto	u1857
   710  001688  2E24               	decfsz	??_main& (0+255),f,c
   711  00168A  D7FC               	goto	u1857
   712                           
   713                           ;main.c: 158: if( (x==11 && y ==1)
   714                           ;main.c: 159: || (x==14 && y ==1)
   715                           ;main.c: 160: || (x==3 && y==2)
   716                           ;main.c: 161: || (x==6 && y==2) ){
   717  00168C  0E0B               	movlw	11
   718  00168E  1826               	xorwf	main@x,w,c
   719  001690  A4D8               	btfss	status,2,c
   720  001692  D003               	goto	l2439
   721  001694  0425               	decf	main@y,w,c
   722  001696  B4D8               	btfsc	status,2,c
   723  001698  D017               	goto	l2451
   724  00169A                     l2439:
   725  00169A  0E0E               	movlw	14
   726  00169C  1826               	xorwf	main@x,w,c
   727  00169E  A4D8               	btfss	status,2,c
   728  0016A0  D003               	goto	l2443
   729  0016A2  0425               	decf	main@y,w,c
   730  0016A4  B4D8               	btfsc	status,2,c
   731  0016A6  D010               	goto	l2451
   732  0016A8                     l2443:
   733  0016A8  0E03               	movlw	3
   734  0016AA  1826               	xorwf	main@x,w,c
   735  0016AC  A4D8               	btfss	status,2,c
   736  0016AE  D004               	goto	l2447
   737  0016B0  0E02               	movlw	2
   738  0016B2  1825               	xorwf	main@y,w,c
   739  0016B4  B4D8               	btfsc	status,2,c
   740  0016B6  D008               	goto	l2451
   741  0016B8                     l2447:
   742  0016B8  0E06               	movlw	6
   743  0016BA  1826               	xorwf	main@x,w,c
   744  0016BC  A4D8               	btfss	status,2,c
   745  0016BE  D00B               	goto	l2455
   746  0016C0  0E02               	movlw	2
   747  0016C2  1825               	xorwf	main@y,w,c
   748  0016C4  A4D8               	btfss	status,2,c
   749  0016C6  D007               	goto	l2455
   750  0016C8                     l2451:
   751                           
   752                           ;main.c: 162: lcd_setcursor_vb(0,0);
   753  0016C8  0E00               	movlw	0
   754  0016CA  6E05               	movwf	lcd_setcursor_vb@blink,c
   755  0016CC  0E00               	movlw	0
   756  0016CE  ECD6  F00E         	call	_lcd_setcursor_vb
   757                           
   758                           ;main.c: 163: x++;
   759  0016D2  2A26               	incf	main@x,f,c
   760  0016D4  D000               	goto	l2455
   761  0016D6                     l2455:
   762                           
   763                           ;main.c: 164: }
   764                           ;main.c: 166: if (x == 17){
   765  0016D6  0E11               	movlw	17
   766  0016D8  1826               	xorwf	main@x,w,c
   767  0016DA  A4D8               	btfss	status,2,c
   768  0016DC  D005               	goto	l2459
   769                           
   770                           ;main.c: 167: x = 1;
   771  0016DE  0E01               	movlw	1
   772  0016E0  6E26               	movwf	main@x,c
   773                           
   774                           ;main.c: 168: y = 2;
   775  0016E2  0E02               	movlw	2
   776  0016E4  6E25               	movwf	main@y,c
   777  0016E6  D000               	goto	l2459
   778  0016E8                     l2459:
   779                           
   780                           ;main.c: 169: }
   781                           ;main.c: 171: if(y == 2 && x == 9){
   782  0016E8  0E02               	movlw	2
   783  0016EA  1825               	xorwf	main@y,w,c
   784  0016EC  A4D8               	btfss	status,2,c
   785  0016EE  D007               	goto	l2465
   786  0016F0  0E09               	movlw	9
   787  0016F2  1826               	xorwf	main@x,w,c
   788  0016F4  A4D8               	btfss	status,2,c
   789  0016F6  D003               	goto	l2465
   790                           
   791                           ;main.c: 172: y = 1;
   792  0016F8  0E01               	movlw	1
   793  0016FA  6E25               	movwf	main@y,c
   794  0016FC  D000               	goto	l2465
   795  0016FE                     l2465:
   796                           
   797                           ;main.c: 173: }
   798                           ;main.c: 174: }
   799                           ;main.c: 176: if(PORTAbits.RA0 == 0){
   800  0016FE  B080               	btfsc	3968,0,c	;volatile
   801  001700  D004               	goto	l2469
   802                           
   803                           ;main.c: 177: setClock(x);
   804  001702  5026               	movf	main@x,w,c
   805  001704  ECFC  F00B         	call	_setClock
   806  001708  D000               	goto	l2469
   807  00170A                     l2469:
   808                           
   809                           ;main.c: 178: }
   810                           ;main.c: 179: _delay((unsigned long)((98)*(8000000/4000.0)));
   811  00170A  0EFF               	movlw	255
   812  00170C  6E24               	movwf	??_main& (0+255),c
   813  00170E  0E8A               	movlw	138
   814  001710                     u1867:
   815  001710  2EE8               	decfsz	wreg,f,c
   816  001712  D7FE               	goto	u1867
   817  001714  2E24               	decfsz	??_main& (0+255),f,c
   818  001716  D7FC               	goto	u1867
   819  001718  D000               	nop2	
   820  00171A  D79B               	goto	l2419
   821                           
   822                           ;main.c: 181: }
   823                           ;main.c: 182: return 0;
   824                           ;	Return value of _main is never used
   825  00171C  EF00  F000         	goto	start
   826  001720                     __end_of_main:
   827                           	opt stack 0
   828                           tblptru	equ	0xFF8
   829                           tblptrh	equ	0xFF7
   830                           tblptrl	equ	0xFF6
   831                           tablat	equ	0xFF5
   832                           postinc0	equ	0xFEE
   833                           wreg	equ	0xFE8
   834                           postdec1	equ	0xFE5
   835                           fsr1l	equ	0xFE1
   836                           status	equ	0xFD8
   837                           
   838 ;; *************** function _setClock *****************
   839 ;; Defined at:
   840 ;;		line 101 in file "main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  x               1    wreg     unsigned char 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  x               1   14[COMRAM] unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;		None               void
   847 ;; Registers used:
   848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   858 ;;Total ram usage:        2 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    3
   861 ;; This function calls:
   862 ;;		_Write_RTC
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text1
   869  0017F8                     __ptext1:
   870                           	opt stack 0
   871  0017F8                     _setClock:
   872                           	opt stack 27
   873                           
   874                           ;incstack = 0
   875                           ;setClock@x stored from wreg
   876  0017F8  6E0F               	movwf	setClock@x,c
   877                           
   878                           ;main.c: 102: switch (x) {
   879  0017FA  D03F               	goto	l2405
   880  0017FC                     l2377:
   881                           
   882                           ;main.c: 104: dia++;
   883  0017FC  4A50               	infsnz	_dia,f,c
   884  0017FE  2A51               	incf	_dia+1,f,c
   885                           
   886                           ;main.c: 105: if(dia > 31){
   887  001800  BE51               	btfsc	_dia+1,7,c
   888  001802  D04C               	goto	l2407
   889  001804  5051               	movf	_dia+1,w,c
   890  001806  E104               	bnz	u1670
   891  001808  0E20               	movlw	32
   892  00180A  5C50               	subwf	_dia,w,c
   893  00180C  A0D8               	btfss	status,0,c
   894  00180E  D046               	goto	l2407
   895  001810                     u1670:
   896                           
   897                           ;main.c: 106: dia = 1;
   898  001810  0E00               	movlw	0
   899  001812  6E51               	movwf	_dia+1,c
   900  001814  0E01               	movlw	1
   901  001816  6E50               	movwf	_dia,c
   902                           
   903                           ;main.c: 107: }
   904                           ;main.c: 108: break;
   905  001818  D041               	goto	l2407
   906  00181A                     l2383:
   907                           
   908                           ;main.c: 110: mes++;
   909  00181A  4A56               	infsnz	_mes,f,c
   910  00181C  2A57               	incf	_mes+1,f,c
   911                           
   912                           ;main.c: 111: if(mes > 12){
   913  00181E  BE57               	btfsc	_mes+1,7,c
   914  001820  D03D               	goto	l2407
   915  001822  5057               	movf	_mes+1,w,c
   916  001824  E104               	bnz	u1680
   917  001826  0E0D               	movlw	13
   918  001828  5C56               	subwf	_mes,w,c
   919  00182A  A0D8               	btfss	status,0,c
   920  00182C  D037               	goto	l2407
   921  00182E                     u1680:
   922                           
   923                           ;main.c: 112: mes = 1;
   924  00182E  0E00               	movlw	0
   925  001830  6E57               	movwf	_mes+1,c
   926  001832  0E01               	movlw	1
   927  001834  6E56               	movwf	_mes,c
   928                           
   929                           ;main.c: 113: }
   930                           ;main.c: 114: break;
   931  001836  D032               	goto	l2407
   932  001838                     l2389:
   933                           
   934                           ;main.c: 116: anio++;
   935  001838  4A4E               	infsnz	_anio,f,c
   936  00183A  2A4F               	incf	_anio+1,f,c
   937                           
   938                           ;main.c: 117: break;
   939  00183C  D02F               	goto	l2407
   940  00183E                     l2391:
   941                           
   942                           ;main.c: 119: hora++;
   943  00183E  4A54               	infsnz	_hora,f,c
   944  001840  2A55               	incf	_hora+1,f,c
   945                           
   946                           ;main.c: 120: if(hora > 23){
   947  001842  BE55               	btfsc	_hora+1,7,c
   948  001844  D02B               	goto	l2407
   949  001846  5055               	movf	_hora+1,w,c
   950  001848  E104               	bnz	u1690
   951  00184A  0E18               	movlw	24
   952  00184C  5C54               	subwf	_hora,w,c
   953  00184E  A0D8               	btfss	status,0,c
   954  001850  D025               	goto	l2407
   955  001852                     u1690:
   956                           
   957                           ;main.c: 121: hora = 0;
   958  001852  0E00               	movlw	0
   959  001854  6E55               	movwf	_hora+1,c
   960  001856  0E00               	movlw	0
   961  001858  6E54               	movwf	_hora,c
   962                           
   963                           ;main.c: 122: }
   964                           ;main.c: 123: break;
   965  00185A  D020               	goto	l2407
   966  00185C                     l2397:
   967                           
   968                           ;main.c: 125: minuto++;
   969  00185C  4A58               	infsnz	_minuto,f,c
   970  00185E  2A59               	incf	_minuto+1,f,c
   971                           
   972                           ;main.c: 126: if(minuto > 59){
   973  001860  BE59               	btfsc	_minuto+1,7,c
   974  001862  D01C               	goto	l2407
   975  001864  5059               	movf	_minuto+1,w,c
   976  001866  E104               	bnz	u1700
   977  001868  0E3C               	movlw	60
   978  00186A  5C58               	subwf	_minuto,w,c
   979  00186C  A0D8               	btfss	status,0,c
   980  00186E  D016               	goto	l2407
   981  001870                     u1700:
   982                           
   983                           ;main.c: 127: minuto = 0;
   984  001870  0E00               	movlw	0
   985  001872  6E59               	movwf	_minuto+1,c
   986  001874  0E00               	movlw	0
   987  001876  6E58               	movwf	_minuto,c
   988                           
   989                           ;main.c: 132: }
   990                           
   991                           ;main.c: 131: break;
   992                           
   993                           ;main.c: 130: default:
   994                           
   995                           ;main.c: 128: }
   996                           ;main.c: 129: break;
   997  001878  D011               	goto	l2407
   998  00187A                     l2405:
   999  00187A  500F               	movf	setClock@x,w,c
  1000                           
  1001                           ; Switch size 1, requested type "space"
  1002                           ; Number of cases is 5, Range of values is 2 to 16
  1003                           ; switch strategies available:
  1004                           ; Name         Instructions Cycles
  1005                           ; simple_byte           16     9 (average)
  1006                           ;	Chosen strategy is simple_byte
  1007  00187C  0A02               	xorlw	2	; case 2
  1008  00187E  B4D8               	btfsc	status,2,c
  1009  001880  D7DE               	goto	l2391
  1010  001882  0A07               	xorlw	7	; case 5
  1011  001884  B4D8               	btfsc	status,2,c
  1012  001886  D7EA               	goto	l2397
  1013  001888  0A0F               	xorlw	15	; case 10
  1014  00188A  B4D8               	btfsc	status,2,c
  1015  00188C  D7B7               	goto	l2377
  1016  00188E  0A07               	xorlw	7	; case 13
  1017  001890  B4D8               	btfsc	status,2,c
  1018  001892  D7C3               	goto	l2383
  1019  001894  0A1D               	xorlw	29	; case 16
  1020  001896  B4D8               	btfsc	status,2,c
  1021  001898  D7CF               	goto	l2389
  1022  00189A  D000               	goto	l2407
  1023  00189C                     l2407:
  1024                           
  1025                           ;main.c: 133: Write_RTC();
  1026  00189C  ECD0  F008         	call	_Write_RTC	;wreg free
  1027                           
  1028                           ;main.c: 134: _delay((unsigned long)((50)*(8000000/4000.0)));
  1029  0018A0  0E82               	movlw	130
  1030  0018A2  6E0E               	movwf	??_setClock& (0+255),c
  1031  0018A4  0EDE               	movlw	222
  1032  0018A6                     u1877:
  1033  0018A6  2EE8               	decfsz	wreg,f,c
  1034  0018A8  D7FE               	goto	u1877
  1035  0018AA  2E0E               	decfsz	??_setClock& (0+255),f,c
  1036  0018AC  D7FC               	goto	u1877
  1037  0018AE  0012               	return		;funcret
  1038  0018B0                     __end_of_setClock:
  1039                           	opt stack 0
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           postinc0	equ	0xFEE
  1045                           wreg	equ	0xFE8
  1046                           postdec1	equ	0xFE5
  1047                           fsr1l	equ	0xFE1
  1048                           status	equ	0xFD8
  1049                           
  1050 ;; *************** function _lcd_setcursor_vb *****************
  1051 ;; Defined at:
  1052 ;;		line 210 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  visible         1    wreg     unsigned char 
  1055 ;;  blink           1    4[COMRAM] unsigned char 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  visible         1    5[COMRAM] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;		None               void
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1067 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1071 ;;Total ram usage:        2 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    2
  1074 ;; This function calls:
  1075 ;;		_lcd_send_byte
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text2
  1082  001DAC                     __ptext2:
  1083                           	opt stack 0
  1084  001DAC                     _lcd_setcursor_vb:
  1085                           	opt stack 28
  1086                           
  1087                           ;incstack = 0
  1088                           ;lcd_setcursor_vb@visible stored from wreg
  1089  001DAC  6E06               	movwf	lcd_setcursor_vb@visible,c
  1090                           
  1091                           ;unmc_lcd_216.c: 211: lcd_send_byte(0, 0xC|(visible<<1)|blink);
  1092  001DAE  5006               	movf	lcd_setcursor_vb@visible,w,c
  1093  001DB0  2406               	addwf	lcd_setcursor_vb@visible,w,c
  1094  001DB2  1005               	iorwf	lcd_setcursor_vb@blink,w,c
  1095  001DB4  090C               	iorlw	12
  1096  001DB6  6E03               	movwf	lcd_send_byte@n,c
  1097  001DB8  0E00               	movlw	0
  1098  001DBA  EC86  F00E         	call	_lcd_send_byte
  1099  001DBE  0012               	return		;funcret
  1100  001DC0                     __end_of_lcd_setcursor_vb:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           status	equ	0xFD8
  1111                           
  1112 ;; *************** function _caratula *****************
  1113 ;; Defined at:
  1114 ;;		line 36 in file "main.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;		None               void
  1121 ;; Registers used:
  1122 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    5
  1135 ;; This function calls:
  1136 ;;		_lcd_comand
  1137 ;;		_lcd_gotoxy
  1138 ;;		_lcd_putrs
  1139 ;;		_sprintf
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text3
  1146  00153A                     __ptext3:
  1147                           	opt stack 0
  1148  00153A                     _caratula:
  1149                           	opt stack 25
  1150                           
  1151                           ;main.c: 38: lcd_comand(0b00001100);
  1152                           
  1153                           ;incstack = 0
  1154  00153A  0E0C               	movlw	12
  1155  00153C  ECFB  F00E         	call	_lcd_comand
  1156                           
  1157                           ;main.c: 39: lcd_gotoxy(1,1);
  1158  001540  0E01               	movlw	1
  1159  001542  6E05               	movwf	lcd_gotoxy@y,c
  1160  001544  0E01               	movlw	1
  1161  001546  ECB3  F00E         	call	_lcd_gotoxy
  1162                           
  1163                           ;main.c: 40: lcd_putrs("UNIMIC");
  1164  00154A  0E34               	movlw	low STR_1
  1165  00154C  6E09               	movwf	lcd_putrs@ptr,c
  1166  00154E  0E0F               	movlw	high STR_1
  1167  001550  6E0A               	movwf	lcd_putrs@ptr+1,c
  1168  001552  ECCA  F00D         	call	_lcd_putrs	;wreg free
  1169                           
  1170                           ;main.c: 41: sprintf(buffer2,"%02u/%02u/%02u",dia,mes,anio);
  1171  001556  0E78               	movlw	low _buffer2
  1172  001558  6E0D               	movwf	sprintf@sp,c
  1173  00155A  0E00               	movlw	high _buffer2
  1174  00155C  6E0E               	movwf	sprintf@sp+1,c
  1175  00155E  0E0F               	movlw	low STR_2
  1176  001560  6E0F               	movwf	sprintf@f,c
  1177  001562  0E0F               	movlw	high STR_2
  1178  001564  6E10               	movwf	sprintf@f+1,c
  1179  001566  C050  F011         	movff	_dia,?_sprintf+4
  1180  00156A  C051  F012         	movff	_dia+1,?_sprintf+5
  1181  00156E  C056  F013         	movff	_mes,?_sprintf+6
  1182  001572  C057  F014         	movff	_mes+1,?_sprintf+7
  1183  001576  C04E  F015         	movff	_anio,?_sprintf+8
  1184  00157A  C04F  F016         	movff	_anio+1,?_sprintf+9
  1185  00157E  EC9E  F007         	call	_sprintf	;wreg free
  1186                           
  1187                           ;main.c: 42: lcd_gotoxy(9,1);
  1188  001582  0E01               	movlw	1
  1189  001584  6E05               	movwf	lcd_gotoxy@y,c
  1190  001586  0E09               	movlw	9
  1191  001588  ECB3  F00E         	call	_lcd_gotoxy
  1192                           
  1193                           ;main.c: 43: lcd_putrs(buffer2);
  1194  00158C  0E78               	movlw	low _buffer2
  1195  00158E  6E09               	movwf	lcd_putrs@ptr,c
  1196  001590  0E00               	movlw	high _buffer2
  1197  001592  6E0A               	movwf	lcd_putrs@ptr+1,c
  1198  001594  ECCA  F00D         	call	_lcd_putrs	;wreg free
  1199                           
  1200                           ;main.c: 44: sprintf(buffer2,"%02u:%02u:%02u",hora,minuto,segundo);
  1201  001598  0E78               	movlw	low _buffer2
  1202  00159A  6E0D               	movwf	sprintf@sp,c
  1203  00159C  0E00               	movlw	high _buffer2
  1204  00159E  6E0E               	movwf	sprintf@sp+1,c
  1205  0015A0  0E1E               	movlw	low STR_3
  1206  0015A2  6E0F               	movwf	sprintf@f,c
  1207  0015A4  0E0F               	movlw	high STR_3
  1208  0015A6  6E10               	movwf	sprintf@f+1,c
  1209  0015A8  C054  F011         	movff	_hora,?_sprintf+4
  1210  0015AC  C055  F012         	movff	_hora+1,?_sprintf+5
  1211  0015B0  C058  F013         	movff	_minuto,?_sprintf+6
  1212  0015B4  C059  F014         	movff	_minuto+1,?_sprintf+7
  1213  0015B8  C037  F015         	movff	_segundo,?_sprintf+8
  1214  0015BC  C038  F016         	movff	_segundo+1,?_sprintf+9
  1215  0015C0  EC9E  F007         	call	_sprintf	;wreg free
  1216                           
  1217                           ;main.c: 45: lcd_gotoxy(1,2);
  1218  0015C4  0E02               	movlw	2
  1219  0015C6  6E05               	movwf	lcd_gotoxy@y,c
  1220  0015C8  0E01               	movlw	1
  1221  0015CA  ECB3  F00E         	call	_lcd_gotoxy
  1222                           
  1223                           ;main.c: 47: b=b++;
  1224  0015CE  0E78               	movlw	low _buffer2
  1225  0015D0  6E09               	movwf	lcd_putrs@ptr,c
  1226  0015D2  0E00               	movlw	high _buffer2
  1227  0015D4  6E0A               	movwf	lcd_putrs@ptr+1,c
  1228  0015D6  ECCA  F00D         	call	_lcd_putrs	;wreg free
  1229  0015DA  4A2D               	infsnz	_b,f,c
  1230  0015DC  2A2E               	incf	_b+1,f,c
  1231                           
  1232                           ;main.c: 48: if(b<7)
  1233  0015DE  BE2E               	btfsc	_b+1,7,c
  1234  0015E0  D006               	goto	l2339
  1235  0015E2  502E               	movf	_b+1,w,c
  1236  0015E4  E110               	bnz	l2343
  1237  0015E6  0E07               	movlw	7
  1238  0015E8  5C2D               	subwf	_b,w,c
  1239  0015EA  B0D8               	btfsc	status,0,c
  1240  0015EC  D00C               	goto	l2343
  1241  0015EE                     l2339:
  1242                           
  1243                           ;main.c: 49: {
  1244                           ;main.c: 50: lcd_gotoxy(1,1);
  1245  0015EE  0E01               	movlw	1
  1246  0015F0  6E05               	movwf	lcd_gotoxy@y,c
  1247  0015F2  0E01               	movlw	1
  1248  0015F4  ECB3  F00E         	call	_lcd_gotoxy
  1249                           
  1250                           ;main.c: 51: lcd_putrs("UNIMIC");
  1251  0015F8  0E34               	movlw	low STR_1
  1252  0015FA  6E09               	movwf	lcd_putrs@ptr,c
  1253  0015FC  0E0F               	movlw	high STR_1
  1254  0015FE  6E0A               	movwf	lcd_putrs@ptr+1,c
  1255  001600  ECCA  F00D         	call	_lcd_putrs	;wreg free
  1256  001604  D000               	goto	l2343
  1257  001606                     l2343:
  1258                           
  1259                           ;main.c: 52: }
  1260                           ;main.c: 53: if(b>6)
  1261  001606  BE2E               	btfsc	_b+1,7,c
  1262  001608  0012               	return	
  1263  00160A  502E               	movf	_b+1,w,c
  1264  00160C  E104               	bnz	u1650
  1265  00160E  0E07               	movlw	7
  1266  001610  5C2D               	subwf	_b,w,c
  1267  001612  A0D8               	btfss	status,0,c
  1268  001614  0012               	return	
  1269  001616                     u1650:
  1270                           
  1271                           ;main.c: 54: {
  1272                           ;main.c: 55: if(b==11){b=0;}
  1273  001616  0E0B               	movlw	11
  1274  001618  182D               	xorwf	_b,w,c
  1275  00161A  102E               	iorwf	_b+1,w,c
  1276  00161C  A4D8               	btfss	status,2,c
  1277  00161E  D005               	goto	l2349
  1278  001620  0E00               	movlw	0
  1279  001622  6E2E               	movwf	_b+1,c
  1280  001624  0E00               	movlw	0
  1281  001626  6E2D               	movwf	_b,c
  1282  001628  D000               	goto	l2349
  1283  00162A                     l2349:
  1284                           
  1285                           ;main.c: 56: lcd_gotoxy(1,1);
  1286  00162A  0E01               	movlw	1
  1287  00162C  6E05               	movwf	lcd_gotoxy@y,c
  1288  00162E  0E01               	movlw	1
  1289  001630  ECB3  F00E         	call	_lcd_gotoxy
  1290                           
  1291                           ;main.c: 57: lcd_putrs("      ");
  1292  001634  0E2D               	movlw	low STR_5
  1293  001636  6E09               	movwf	lcd_putrs@ptr,c
  1294  001638  0E0F               	movlw	high STR_5
  1295  00163A  6E0A               	movwf	lcd_putrs@ptr+1,c
  1296  00163C  ECCA  F00D         	call	_lcd_putrs	;wreg free
  1297  001640  0012               	return	
  1298  001642  0012               	return		;funcret
  1299  001644                     __end_of_caratula:
  1300                           	opt stack 0
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           postdec1	equ	0xFE5
  1308                           fsr1l	equ	0xFE1
  1309                           status	equ	0xFD8
  1310                           
  1311 ;; *************** function _sprintf *****************
  1312 ;; Defined at:
  1313 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1316 ;;		 -> buffer2(20), 
  1317 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1318 ;;		 -> STR_3(15), STR_2(15), 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  tmpval          4    0        struct .
  1321 ;;  cp              3    0        PTR const unsigned char 
  1322 ;;  width           2   32[COMRAM] int 
  1323 ;;  val             2   29[COMRAM] unsigned int 
  1324 ;;  ap              2   26[COMRAM] PTR void [1]
  1325 ;;		 -> ?_sprintf(2), 
  1326 ;;  len             2    0        unsigned int 
  1327 ;;  c               1   34[COMRAM] char 
  1328 ;;  prec            1   31[COMRAM] char 
  1329 ;;  flag            1   28[COMRAM] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  2   12[COMRAM] int 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1339 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1340 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1341 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1342 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1343 ;;Total ram usage:       23 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    1
  1346 ;; This function calls:
  1347 ;;		___lwdiv
  1348 ;;		___lwmod
  1349 ;;		___wmul
  1350 ;;		_isdigit
  1351 ;; This function is called by:
  1352 ;;		_caratula
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text4
  1357  000F3C                     __ptext4:
  1358                           	opt stack 0
  1359  000F3C                     _sprintf:
  1360                           	opt stack 28
  1361                           
  1362                           ;doprnt.c: 494: va_list ap;
  1363                           ;doprnt.c: 499: signed char c;
  1364                           ;doprnt.c: 501: int width;
  1365                           ;doprnt.c: 506: signed char prec;
  1366                           ;doprnt.c: 508: unsigned char flag;
  1367                           ;doprnt.c: 523: union {
  1368                           ;doprnt.c: 524: unsigned long vd;
  1369                           ;doprnt.c: 525: double integ;
  1370                           ;doprnt.c: 526: } tmpval;
  1371                           ;doprnt.c: 528: unsigned int val;
  1372                           ;doprnt.c: 529: unsigned len;
  1373                           ;doprnt.c: 530: const char * cp;
  1374                           ;doprnt.c: 533: *ap = __va_start();
  1375                           
  1376                           ;incstack = 0
  1377  000F3C  0E11               	movlw	low (?_sprintf+4)
  1378  000F3E  6E1B               	movwf	sprintf@ap,c
  1379  000F40  0E00               	movlw	high (?_sprintf+4)
  1380  000F42  6E1C               	movwf	sprintf@ap+1,c
  1381                           
  1382                           ;doprnt.c: 536: while(c = *f++) {
  1383  000F44  D117               	goto	l2241
  1384  000F46                     l2159:
  1385                           
  1386                           ;doprnt.c: 538: if(c != '%')
  1387  000F46  0E25               	movlw	37
  1388  000F48  1823               	xorwf	sprintf@c,w,c
  1389  000F4A  B4D8               	btfsc	status,2,c
  1390  000F4C  D009               	goto	l2165
  1391                           
  1392                           ;doprnt.c: 540: {
  1393                           ;doprnt.c: 541: ((*sp++ = (c)));
  1394  000F4E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1395  000F52  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1396  000F56  C023  FFDF         	movff	sprintf@c,indf2
  1397  000F5A  4A0D               	infsnz	sprintf@sp,f,c
  1398  000F5C  2A0E               	incf	sprintf@sp+1,f,c
  1399                           
  1400                           ;doprnt.c: 542: continue;
  1401  000F5E  D10A               	goto	l2241
  1402  000F60                     l2165:
  1403                           
  1404                           ;doprnt.c: 543: }
  1405                           ;doprnt.c: 546: width = 0;
  1406  000F60  0E00               	movlw	0
  1407  000F62  6E22               	movwf	sprintf@width+1,c
  1408  000F64  0E00               	movlw	0
  1409  000F66  6E21               	movwf	sprintf@width,c
  1410                           
  1411                           ;doprnt.c: 548: flag = 0;
  1412  000F68  0E00               	movlw	0
  1413  000F6A  6E1D               	movwf	sprintf@flag,c
  1414                           
  1415                           ;doprnt.c: 551: switch(*f) {
  1416                           
  1417                           ;doprnt.c: 550: for(;;) {
  1418  000F6C  D005               	goto	l2171
  1419  000F6E                     l2167:
  1420                           
  1421                           ;doprnt.c: 580: flag |= 0x04;
  1422  000F6E  841D               	bsf	sprintf@flag,2,c
  1423                           
  1424                           ;doprnt.c: 581: f++;
  1425  000F70  4A0F               	infsnz	sprintf@f,f,c
  1426  000F72  2A10               	incf	sprintf@f+1,f,c
  1427                           
  1428                           ;doprnt.c: 582: continue;
  1429  000F74  D001               	goto	l2171
  1430                           
  1431                           ;doprnt.c: 584: }
  1432  000F76  D00B               	goto	l2173
  1433  000F78                     l2171:
  1434  000F78  C00F  FFF6         	movff	sprintf@f,tblptrl
  1435  000F7C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1436  000F80                     	if	0	;tblptru may be non-zero
  1437  000F80                     	endif
  1438  000F80                     	if	0	;tblptru may be non-zero
  1439  000F80                     	endif
  1440  000F80  0008               	tblrd		*
  1441  000F82  50F5               	movf	tablat,w,c
  1442                           
  1443                           ; Switch size 1, requested type "space"
  1444                           ; Number of cases is 1, Range of values is 48 to 48
  1445                           ; switch strategies available:
  1446                           ; Name         Instructions Cycles
  1447                           ; simple_byte            4     3 (average)
  1448                           ;	Chosen strategy is simple_byte
  1449  000F84  0A30               	xorlw	48	; case 48
  1450  000F86  B4D8               	btfsc	status,2,c
  1451  000F88  D7F2               	goto	l2167
  1452                           
  1453                           ;doprnt.c: 585: break;
  1454  000F8A  D001               	goto	l2173
  1455                           
  1456                           ;doprnt.c: 586: }
  1457  000F8C  D7F5               	goto	l2171
  1458  000F8E                     l2173:
  1459                           
  1460                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1461  000F8E  C00F  FFF6         	movff	sprintf@f,tblptrl
  1462  000F92  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1463  000F96                     	if	0	;tblptru may be non-zero
  1464  000F96                     	endif
  1465  000F96                     	if	0	;tblptru may be non-zero
  1466  000F96                     	endif
  1467  000F96  0008               	tblrd		*
  1468  000F98  50F5               	movf	tablat,w,c
  1469  000F9A  ECC5  F00E         	call	_isdigit
  1470  000F9E  A0D8               	btfss	status,0,c
  1471  000FA0  D03A               	goto	l2189
  1472                           
  1473                           ;doprnt.c: 598: width = 0;
  1474  000FA2  0E00               	movlw	0
  1475  000FA4  6E22               	movwf	sprintf@width+1,c
  1476  000FA6  0E00               	movlw	0
  1477  000FA8  6E21               	movwf	sprintf@width,c
  1478  000FAA  D000               	goto	l2177
  1479  000FAC                     l2177:
  1480                           
  1481                           ;doprnt.c: 600: width *= 10;
  1482  000FAC  C021  F001         	movff	sprintf@width,___wmul@multiplier
  1483  000FB0  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1484  000FB4  0E00               	movlw	0
  1485  000FB6  6E04               	movwf	___wmul@multiplicand+1,c
  1486  000FB8  0E0A               	movlw	10
  1487  000FBA  6E03               	movwf	___wmul@multiplicand,c
  1488  000FBC  EC9F  F00E         	call	___wmul	;wreg free
  1489  000FC0  C001  F021         	movff	?___wmul,sprintf@width
  1490  000FC4  C002  F022         	movff	?___wmul+1,sprintf@width+1
  1491                           
  1492                           ;doprnt.c: 601: width += *f++ - '0';
  1493  000FC8  0ED0               	movlw	208
  1494  000FCA  6E17               	movwf	??_sprintf& (0+255),c
  1495  000FCC  0EFF               	movlw	255
  1496  000FCE  6E18               	movwf	(??_sprintf+1)& (0+255),c
  1497  000FD0  C00F  FFF6         	movff	sprintf@f,tblptrl
  1498  000FD4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1499  000FD8                     	if	0	;tblptru may be non-zero
  1500  000FD8                     	endif
  1501  000FD8                     	if	0	;tblptru may be non-zero
  1502  000FD8                     	endif
  1503  000FD8  0008               	tblrd		*
  1504  000FDA  50F5               	movf	tablat,w,c
  1505  000FDC  6E19               	movwf	(??_sprintf+2)& (0+255),c
  1506  000FDE  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  1507  000FE0  5017               	movf	??_sprintf,w,c
  1508  000FE2  2619               	addwf	??_sprintf+2,f,c
  1509  000FE4  5018               	movf	??_sprintf+1,w,c
  1510  000FE6  221A               	addwfc	??_sprintf+3,f,c
  1511  000FE8  5019               	movf	??_sprintf+2,w,c
  1512  000FEA  2621               	addwf	sprintf@width,f,c
  1513  000FEC  501A               	movf	??_sprintf+3,w,c
  1514  000FEE  2222               	addwfc	sprintf@width+1,f,c
  1515  000FF0  4A0F               	infsnz	sprintf@f,f,c
  1516  000FF2  2A10               	incf	sprintf@f+1,f,c
  1517                           
  1518                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1519  000FF4  C00F  FFF6         	movff	sprintf@f,tblptrl
  1520  000FF8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1521  000FFC                     	if	0	;tblptru may be non-zero
  1522  000FFC                     	endif
  1523  000FFC                     	if	0	;tblptru may be non-zero
  1524  000FFC                     	endif
  1525  000FFC  0008               	tblrd		*
  1526  000FFE  50F5               	movf	tablat,w,c
  1527  001000  ECC5  F00E         	call	_isdigit
  1528  001004  A0D8               	btfss	status,0,c
  1529  001006  D007               	goto	l2189
  1530  001008  D7D1               	goto	l2177
  1531                           
  1532                           ;doprnt.c: 608: }
  1533                           ;doprnt.c: 635: switch(c = *f++) {
  1534  00100A  D005               	goto	l2189
  1535                           
  1536                           ;doprnt.c: 638: goto alldone;
  1537                           
  1538                           ;doprnt.c: 637: case 0:
  1539  00100C  D0C1               	goto	l2243
  1540                           
  1541                           ;doprnt.c: 813: continue;
  1542                           
  1543                           ;doprnt.c: 802: default:
  1544  00100E  D0B2               	goto	l2241
  1545  001010                     l2185:
  1546                           
  1547                           ;doprnt.c: 818: flag |= 0xC0;
  1548  001010  0EC0               	movlw	192
  1549  001012  121D               	iorwf	sprintf@flag,f,c
  1550                           
  1551                           ;doprnt.c: 822: }
  1552                           
  1553                           ;doprnt.c: 819: break;
  1554  001014  D011               	goto	l2191
  1555  001016                     l2189:
  1556  001016  C00F  FFF6         	movff	sprintf@f,tblptrl
  1557  00101A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1558  00101E  4A0F               	infsnz	sprintf@f,f,c
  1559  001020  2A10               	incf	sprintf@f+1,f,c
  1560  001022                     	if	0	;tblptru may be non-zero
  1561  001022                     	endif
  1562  001022                     	if	0	;tblptru may be non-zero
  1563  001022                     	endif
  1564  001022  0008               	tblrd		*
  1565  001024  CFF5 F023          	movff	tablat,sprintf@c
  1566  001028  5023               	movf	sprintf@c,w,c
  1567                           
  1568                           ; Switch size 1, requested type "space"
  1569                           ; Number of cases is 2, Range of values is 0 to 117
  1570                           ; switch strategies available:
  1571                           ; Name         Instructions Cycles
  1572                           ; simple_byte            7     4 (average)
  1573                           ;	Chosen strategy is simple_byte
  1574  00102A  0A00               	xorlw	0	; case 0
  1575  00102C  B4D8               	btfsc	status,2,c
  1576  00102E  D0B0               	goto	l2243
  1577  001030  0A75               	xorlw	117	; case 117
  1578  001032  B4D8               	btfsc	status,2,c
  1579  001034  D7ED               	goto	l2185
  1580  001036  D09E               	goto	l2241
  1581  001038                     l2191:
  1582                           
  1583                           ;doprnt.c: 1273: {
  1584                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1585  001038  C01B  FFD9         	movff	sprintf@ap,fsr2l
  1586  00103C  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  1587  001040  CFDE F01E          	movff	postinc2,sprintf@val
  1588  001044  CFDD F01F          	movff	postdec2,sprintf@val+1
  1589  001048  0E02               	movlw	2
  1590  00104A  261B               	addwf	sprintf@ap,f,c
  1591  00104C  0E00               	movlw	0
  1592  00104E  221C               	addwfc	sprintf@ap+1,f,c
  1593                           
  1594                           ;doprnt.c: 1287: }
  1595                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1596  001050  0E01               	movlw	1
  1597  001052  6E23               	movwf	sprintf@c,c
  1598  001054                     l2197:
  1599  001054  0E05               	movlw	5
  1600  001056  1823               	xorwf	sprintf@c,w,c
  1601  001058  B4D8               	btfsc	status,2,c
  1602  00105A  D016               	goto	l2209
  1603  00105C  D001               	goto	l2201
  1604  00105E  D014               	goto	l2209
  1605  001060                     l2201:
  1606                           
  1607                           ;doprnt.c: 1306: if(val < dpowers[c])
  1608  001060  5023               	movf	sprintf@c,w,c
  1609  001062  0D02               	mullw	2
  1610  001064  0E01               	movlw	low _dpowers
  1611  001066  24F3               	addwf	prodl,w,c
  1612  001068  6EF6               	movwf	tblptrl,c
  1613  00106A  0E0F               	movlw	high _dpowers
  1614  00106C  20F4               	addwfc	prodh,w,c
  1615  00106E  6EF7               	movwf	tblptrh,c
  1616  001070                     	if	0	;There are less than 3 active tblptr bytes
  1617  001070                     	endif
  1618  001070  0009               	tblrd		*+
  1619  001072  50F5               	movf	tablat,w,c
  1620  001074  5C1E               	subwf	sprintf@val,w,c
  1621  001076  0009               	tblrd		*+
  1622  001078  50F5               	movf	tablat,w,c
  1623  00107A  581F               	subwfb	sprintf@val+1,w,c
  1624  00107C  A0D8               	btfss	status,0,c
  1625  00107E  D004               	goto	l2209
  1626  001080  D001               	goto	l2205
  1627                           
  1628                           ;doprnt.c: 1307: break;
  1629  001082  D002               	goto	l2209
  1630  001084                     l2205:
  1631  001084  2A23               	incf	sprintf@c,f,c
  1632  001086  D7E6               	goto	l2197
  1633  001088                     l2209:
  1634                           
  1635                           ;doprnt.c: 1381: if(width > c)
  1636  001088  0E80               	movlw	128
  1637  00108A  BE23               	btfsc	sprintf@c,7,c
  1638  00108C  0E7F               	movlw	127
  1639  00108E  6E17               	movwf	??_sprintf& (0+255),c
  1640  001090  5021               	movf	sprintf@width,w,c
  1641  001092  5C23               	subwf	sprintf@c,w,c
  1642  001094  5022               	movf	sprintf@width+1,w,c
  1643  001096  0A80               	xorlw	128
  1644  001098  5817               	subwfb	??_sprintf& (0+255),w,c
  1645  00109A  B0D8               	btfsc	status,0,c
  1646  00109C  D007               	goto	l2213
  1647                           
  1648                           ;doprnt.c: 1382: width -= c;
  1649  00109E  5023               	movf	sprintf@c,w,c
  1650  0010A0  5E21               	subwf	sprintf@width,f,c
  1651  0010A2  0E00               	movlw	0
  1652  0010A4  BE23               	btfsc	sprintf@c,7,c
  1653  0010A6  0EFF               	movlw	255
  1654  0010A8  5A22               	subwfb	sprintf@width+1,f,c
  1655  0010AA  D005               	goto	l2215
  1656  0010AC                     l2213:
  1657                           
  1658                           ;doprnt.c: 1383: else
  1659                           ;doprnt.c: 1384: width = 0;
  1660  0010AC  0E00               	movlw	0
  1661  0010AE  6E22               	movwf	sprintf@width+1,c
  1662  0010B0  0E00               	movlw	0
  1663  0010B2  6E21               	movwf	sprintf@width,c
  1664  0010B4  D000               	goto	l2215
  1665  0010B6                     l2215:
  1666                           
  1667                           ;doprnt.c: 1387: if(flag & 0x04) {
  1668  0010B6  A41D               	btfss	sprintf@flag,2,c
  1669  0010B8  D015               	goto	l2225
  1670                           
  1671                           ;doprnt.c: 1415: if(width)
  1672  0010BA  5021               	movf	sprintf@width,w,c
  1673  0010BC  1022               	iorwf	sprintf@width+1,w,c
  1674  0010BE  B4D8               	btfsc	status,2,c
  1675  0010C0  D026               	goto	l274
  1676  0010C2                     l2219:
  1677                           
  1678                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1679  0010C2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1680  0010C6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1681  0010CA  0E30               	movlw	48
  1682  0010CC  6EDF               	movwf	indf2,c
  1683  0010CE  4A0D               	infsnz	sprintf@sp,f,c
  1684  0010D0  2A0E               	incf	sprintf@sp+1,f,c
  1685                           
  1686                           ;doprnt.c: 1418: while(--width);
  1687  0010D2  0621               	decf	sprintf@width,f,c
  1688  0010D4  A0D8               	btfss	status,0,c
  1689  0010D6  0622               	decf	sprintf@width+1,f,c
  1690  0010D8  5021               	movf	sprintf@width,w,c
  1691  0010DA  1022               	iorwf	sprintf@width+1,w,c
  1692  0010DC  B4D8               	btfsc	status,2,c
  1693  0010DE  D017               	goto	l274
  1694  0010E0  D7F0               	goto	l2219
  1695                           
  1696                           ;doprnt.c: 1420: } else
  1697  0010E2  D015               	goto	l274
  1698  0010E4                     l2225:
  1699                           
  1700                           ;doprnt.c: 1422: {
  1701                           ;doprnt.c: 1424: if(width
  1702                           ;doprnt.c: 1428: )
  1703  0010E4  5021               	movf	sprintf@width,w,c
  1704  0010E6  1022               	iorwf	sprintf@width+1,w,c
  1705  0010E8  B4D8               	btfsc	status,2,c
  1706  0010EA  D011               	goto	l274
  1707  0010EC                     l2227:
  1708                           
  1709                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1710  0010EC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1711  0010F0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1712  0010F4  0E20               	movlw	32
  1713  0010F6  6EDF               	movwf	indf2,c
  1714  0010F8  4A0D               	infsnz	sprintf@sp,f,c
  1715  0010FA  2A0E               	incf	sprintf@sp+1,f,c
  1716                           
  1717                           ;doprnt.c: 1431: while(--width);
  1718  0010FC  0621               	decf	sprintf@width,f,c
  1719  0010FE  A0D8               	btfss	status,0,c
  1720  001100  0622               	decf	sprintf@width+1,f,c
  1721  001102  5021               	movf	sprintf@width,w,c
  1722  001104  1022               	iorwf	sprintf@width+1,w,c
  1723  001106  B4D8               	btfsc	status,2,c
  1724  001108  D002               	goto	l274
  1725  00110A  D7F0               	goto	l2227
  1726  00110C  D000               	goto	l274
  1727  00110E                     l274:
  1728                           
  1729                           ;doprnt.c: 1469: }
  1730                           ;doprnt.c: 1472: prec = c;
  1731  00110E  C023  F020         	movff	sprintf@c,sprintf@prec
  1732                           
  1733                           ;doprnt.c: 1474: while(prec--) {
  1734  001112  D02A               	goto	l2239
  1735  001114                     l2233:
  1736                           
  1737                           ;doprnt.c: 1478: {
  1738                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1739  001114  5020               	movf	sprintf@prec,w,c
  1740  001116  0D02               	mullw	2
  1741  001118  0E01               	movlw	low _dpowers
  1742  00111A  24F3               	addwf	prodl,w,c
  1743  00111C  6EF6               	movwf	tblptrl,c
  1744  00111E  0E0F               	movlw	high _dpowers
  1745  001120  20F4               	addwfc	prodh,w,c
  1746  001122  6EF7               	movwf	tblptrh,c
  1747  001124                     	if	0	;There are less than 3 active tblptr bytes
  1748  001124                     	endif
  1749  001124  0009               	tblrd		*+
  1750  001126  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1751  00112A  000A               	tblrd		*-
  1752  00112C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1753  001130  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  1754  001134  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1755  001138  EC9C  F00D         	call	___lwdiv	;wreg free
  1756  00113C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1757  001140  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1758  001144  0E00               	movlw	0
  1759  001146  6E0B               	movwf	___lwmod@divisor+1,c
  1760  001148  0E0A               	movlw	10
  1761  00114A  6E0A               	movwf	___lwmod@divisor,c
  1762  00114C  ECF4  F00D         	call	___lwmod	;wreg free
  1763  001150  5008               	movf	?___lwmod,w,c
  1764  001152  0F30               	addlw	48
  1765  001154  6E23               	movwf	sprintf@c,c
  1766                           
  1767                           ;doprnt.c: 1523: }
  1768                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1769  001156  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1770  00115A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1771  00115E  C023  FFDF         	movff	sprintf@c,indf2
  1772  001162  4A0D               	infsnz	sprintf@sp,f,c
  1773  001164  2A0E               	incf	sprintf@sp+1,f,c
  1774  001166  D000               	goto	l2239
  1775  001168                     l2239:
  1776  001168  0620               	decf	sprintf@prec,f,c
  1777  00116A  2820               	incf	sprintf@prec,w,c
  1778  00116C  B4D8               	btfsc	status,2,c
  1779  00116E  D002               	goto	l2241
  1780  001170  D7D1               	goto	l2233
  1781  001172  D000               	goto	l2241
  1782  001174                     l2241:
  1783  001174  C00F  FFF6         	movff	sprintf@f,tblptrl
  1784  001178  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1785  00117C  4A0F               	infsnz	sprintf@f,f,c
  1786  00117E  2A10               	incf	sprintf@f+1,f,c
  1787  001180                     	if	0	;tblptru may be non-zero
  1788  001180                     	endif
  1789  001180                     	if	0	;tblptru may be non-zero
  1790  001180                     	endif
  1791  001180  0008               	tblrd		*
  1792  001182  CFF5 F023          	movff	tablat,sprintf@c
  1793  001186  5023               	movf	sprintf@c,w,c
  1794  001188  B4D8               	btfsc	status,2,c
  1795  00118A  D002               	goto	l2243
  1796  00118C  D6DC               	goto	l2159
  1797  00118E  D000               	goto	l2243
  1798  001190                     l2243:
  1799                           
  1800                           ;doprnt.c: 1538: *sp = 0;
  1801  001190  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1802  001194  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1803  001198  0E00               	movlw	0
  1804  00119A  6EDF               	movwf	indf2,c
  1805  00119C  0012               	return	
  1806                           
  1807                           ;doprnt.c: 1540: return 0;
  1808                           ;	Return value of _sprintf is never used
  1809  00119E  0012               	return		;funcret
  1810  0011A0                     __end_of_sprintf:
  1811                           	opt stack 0
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           prodh	equ	0xFF4
  1817                           prodl	equ	0xFF3
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           postdec1	equ	0xFE5
  1821                           fsr1l	equ	0xFE1
  1822                           indf2	equ	0xFDF
  1823                           postinc2	equ	0xFDE
  1824                           postdec2	equ	0xFDD
  1825                           fsr2h	equ	0xFDA
  1826                           fsr2l	equ	0xFD9
  1827                           status	equ	0xFD8
  1828                           
  1829 ;; *************** function _isdigit *****************
  1830 ;; Defined at:
  1831 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  c               1    wreg     unsigned char 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  c               1    2[COMRAM] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;		None               void
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1849 ;;Total ram usage:        3 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_sprintf
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text5
  1859  001D8A                     __ptext5:
  1860                           	opt stack 0
  1861  001D8A                     _isdigit:
  1862                           	opt stack 28
  1863                           
  1864                           ;incstack = 0
  1865                           ;isdigit@c stored from wreg
  1866  001D8A  6E03               	movwf	isdigit@c,c
  1867  001D8C  0E00               	movlw	0
  1868  001D8E  6E02               	movwf	_isdigit$1825,c
  1869  001D90  0E3A               	movlw	58
  1870  001D92  6003               	cpfslt	isdigit@c,c
  1871  001D94  D006               	goto	l1947
  1872  001D96  0E2F               	movlw	47
  1873  001D98  6403               	cpfsgt	isdigit@c,c
  1874  001D9A  D003               	goto	l1947
  1875  001D9C  0E01               	movlw	1
  1876  001D9E  6E02               	movwf	_isdigit$1825,c
  1877  001DA0  D000               	goto	l1947
  1878  001DA2                     l1947:
  1879  001DA2  C002  F001         	movff	_isdigit$1825,??_isdigit
  1880  001DA6  3001               	rrcf	??_isdigit,w,c
  1881  001DA8  0012               	return	
  1882  001DAA  0012               	return		;funcret
  1883  001DAC                     __end_of_isdigit:
  1884                           	opt stack 0
  1885                           tblptru	equ	0xFF8
  1886                           tblptrh	equ	0xFF7
  1887                           tblptrl	equ	0xFF6
  1888                           tablat	equ	0xFF5
  1889                           prodh	equ	0xFF4
  1890                           prodl	equ	0xFF3
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           postdec1	equ	0xFE5
  1894                           fsr1l	equ	0xFE1
  1895                           indf2	equ	0xFDF
  1896                           postinc2	equ	0xFDE
  1897                           postdec2	equ	0xFDD
  1898                           fsr2h	equ	0xFDA
  1899                           fsr2l	equ	0xFD9
  1900                           status	equ	0xFD8
  1901                           
  1902 ;; *************** function ___wmul *****************
  1903 ;; Defined at:
  1904 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  multiplier      2    0[COMRAM] unsigned int 
  1907 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  product         2    4[COMRAM] unsigned int 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  2    0[COMRAM] unsigned int 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0, prodl, prodh
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1922 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1923 ;;Total ram usage:        6 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_sprintf
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text6
  1933  001D3E                     __ptext6:
  1934                           	opt stack 0
  1935  001D3E                     ___wmul:
  1936                           	opt stack 28
  1937                           
  1938                           ;incstack = 0
  1939  001D3E  5001               	movf	___wmul@multiplier,w,c
  1940  001D40  0203               	mulwf	___wmul@multiplicand,c
  1941  001D42  CFF3 F005          	movff	prodl,___wmul@product
  1942  001D46  CFF4 F006          	movff	prodh,___wmul@product+1
  1943  001D4A  5001               	movf	___wmul@multiplier,w,c
  1944  001D4C  0204               	mulwf	___wmul@multiplicand+1,c
  1945  001D4E  50F3               	movf	prodl,w,c
  1946  001D50  2606               	addwf	___wmul@product+1,f,c
  1947  001D52  5002               	movf	___wmul@multiplier+1,w,c
  1948  001D54  0203               	mulwf	___wmul@multiplicand,c
  1949  001D56  50F3               	movf	prodl,w,c
  1950  001D58  2606               	addwf	___wmul@product+1,f,c
  1951  001D5A  C005  F001         	movff	___wmul@product,?___wmul
  1952  001D5E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1953  001D62  0012               	return	
  1954  001D64  0012               	return		;funcret
  1955  001D66                     __end_of___wmul:
  1956                           	opt stack 0
  1957                           tblptru	equ	0xFF8
  1958                           tblptrh	equ	0xFF7
  1959                           tblptrl	equ	0xFF6
  1960                           tablat	equ	0xFF5
  1961                           prodh	equ	0xFF4
  1962                           prodl	equ	0xFF3
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           postdec1	equ	0xFE5
  1966                           fsr1l	equ	0xFE1
  1967                           indf2	equ	0xFDF
  1968                           postinc2	equ	0xFDE
  1969                           postdec2	equ	0xFDD
  1970                           fsr2h	equ	0xFDA
  1971                           fsr2l	equ	0xFD9
  1972                           status	equ	0xFD8
  1973                           
  1974 ;; *************** function ___lwmod *****************
  1975 ;; Defined at:
  1976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  dividend        2    7[COMRAM] unsigned int 
  1979 ;;  divisor         2    9[COMRAM] unsigned int 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  counter         1   11[COMRAM] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2    7[COMRAM] unsigned int 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1994 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1995 ;;Total ram usage:        5 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_sprintf
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text7
  2005  001BE8                     __ptext7:
  2006                           	opt stack 0
  2007  001BE8                     ___lwmod:
  2008                           	opt stack 28
  2009                           
  2010                           ;incstack = 0
  2011  001BE8  500A               	movf	___lwmod@divisor,w,c
  2012  001BEA  100B               	iorwf	___lwmod@divisor+1,w,c
  2013  001BEC  B4D8               	btfsc	status,2,c
  2014  001BEE  D01D               	goto	l928
  2015  001BF0  0E01               	movlw	1
  2016  001BF2  6E0C               	movwf	___lwmod@counter,c
  2017  001BF4  D005               	goto	l2029
  2018  001BF6                     l2027:
  2019  001BF6  90D8               	bcf	status,0,c
  2020  001BF8  360A               	rlcf	___lwmod@divisor,f,c
  2021  001BFA  360B               	rlcf	___lwmod@divisor+1,f,c
  2022  001BFC  2A0C               	incf	___lwmod@counter,f,c
  2023  001BFE  D000               	goto	l2029
  2024  001C00                     l2029:
  2025  001C00  BE0B               	btfsc	___lwmod@divisor+1,7,c
  2026  001C02  D002               	goto	l2031
  2027  001C04  D7F8               	goto	l2027
  2028  001C06  D000               	goto	l2031
  2029  001C08                     l2031:
  2030  001C08  500A               	movf	___lwmod@divisor,w,c
  2031  001C0A  5C08               	subwf	___lwmod@dividend,w,c
  2032  001C0C  500B               	movf	___lwmod@divisor+1,w,c
  2033  001C0E  5809               	subwfb	___lwmod@dividend+1,w,c
  2034  001C10  A0D8               	btfss	status,0,c
  2035  001C12  D005               	goto	l2035
  2036  001C14  500A               	movf	___lwmod@divisor,w,c
  2037  001C16  5E08               	subwf	___lwmod@dividend,f,c
  2038  001C18  500B               	movf	___lwmod@divisor+1,w,c
  2039  001C1A  5A09               	subwfb	___lwmod@dividend+1,f,c
  2040  001C1C  D000               	goto	l2035
  2041  001C1E                     l2035:
  2042  001C1E  90D8               	bcf	status,0,c
  2043  001C20  320B               	rrcf	___lwmod@divisor+1,f,c
  2044  001C22  320A               	rrcf	___lwmod@divisor,f,c
  2045  001C24  2E0C               	decfsz	___lwmod@counter,f,c
  2046  001C26  D7F0               	goto	l2031
  2047  001C28  D000               	goto	l928
  2048  001C2A                     l928:
  2049  001C2A  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2050  001C2E  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2051  001C32  0012               	return		;funcret
  2052  001C34                     __end_of___lwmod:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           prodh	equ	0xFF4
  2059                           prodl	equ	0xFF3
  2060                           postinc0	equ	0xFEE
  2061                           wreg	equ	0xFE8
  2062                           postdec1	equ	0xFE5
  2063                           fsr1l	equ	0xFE1
  2064                           indf2	equ	0xFDF
  2065                           postinc2	equ	0xFDE
  2066                           postdec2	equ	0xFDD
  2067                           fsr2h	equ	0xFDA
  2068                           fsr2l	equ	0xFD9
  2069                           status	equ	0xFD8
  2070                           
  2071 ;; *************** function ___lwdiv *****************
  2072 ;; Defined at:
  2073 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  dividend        2    0[COMRAM] unsigned int 
  2076 ;;  divisor         2    2[COMRAM] unsigned int 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  quotient        2    4[COMRAM] unsigned int 
  2079 ;;  counter         1    6[COMRAM] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  2    0[COMRAM] unsigned int 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2090 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2092 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;Total ram usage:        7 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_sprintf
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text8
  2103  001B38                     __ptext8:
  2104                           	opt stack 0
  2105  001B38                     ___lwdiv:
  2106                           	opt stack 28
  2107                           
  2108                           ;incstack = 0
  2109  001B38  0E00               	movlw	0
  2110  001B3A  6E06               	movwf	___lwdiv@quotient+1,c
  2111  001B3C  0E00               	movlw	0
  2112  001B3E  6E05               	movwf	___lwdiv@quotient,c
  2113  001B40  5003               	movf	___lwdiv@divisor,w,c
  2114  001B42  1004               	iorwf	___lwdiv@divisor+1,w,c
  2115  001B44  B4D8               	btfsc	status,2,c
  2116  001B46  D021               	goto	l918
  2117  001B48  0E01               	movlw	1
  2118  001B4A  6E07               	movwf	___lwdiv@counter,c
  2119  001B4C  D005               	goto	l2009
  2120  001B4E                     l2007:
  2121  001B4E  90D8               	bcf	status,0,c
  2122  001B50  3603               	rlcf	___lwdiv@divisor,f,c
  2123  001B52  3604               	rlcf	___lwdiv@divisor+1,f,c
  2124  001B54  2A07               	incf	___lwdiv@counter,f,c
  2125  001B56  D000               	goto	l2009
  2126  001B58                     l2009:
  2127  001B58  BE04               	btfsc	___lwdiv@divisor+1,7,c
  2128  001B5A  D002               	goto	l2011
  2129  001B5C  D7F8               	goto	l2007
  2130  001B5E  D000               	goto	l2011
  2131  001B60                     l2011:
  2132  001B60  90D8               	bcf	status,0,c
  2133  001B62  3605               	rlcf	___lwdiv@quotient,f,c
  2134  001B64  3606               	rlcf	___lwdiv@quotient+1,f,c
  2135  001B66  5003               	movf	___lwdiv@divisor,w,c
  2136  001B68  5C01               	subwf	___lwdiv@dividend,w,c
  2137  001B6A  5004               	movf	___lwdiv@divisor+1,w,c
  2138  001B6C  5802               	subwfb	___lwdiv@dividend+1,w,c
  2139  001B6E  A0D8               	btfss	status,0,c
  2140  001B70  D006               	goto	l2019
  2141  001B72  5003               	movf	___lwdiv@divisor,w,c
  2142  001B74  5E01               	subwf	___lwdiv@dividend,f,c
  2143  001B76  5004               	movf	___lwdiv@divisor+1,w,c
  2144  001B78  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2145  001B7A  8005               	bsf	___lwdiv@quotient,0,c
  2146  001B7C  D000               	goto	l2019
  2147  001B7E                     l2019:
  2148  001B7E  90D8               	bcf	status,0,c
  2149  001B80  3204               	rrcf	___lwdiv@divisor+1,f,c
  2150  001B82  3203               	rrcf	___lwdiv@divisor,f,c
  2151  001B84  2E07               	decfsz	___lwdiv@counter,f,c
  2152  001B86  D7EC               	goto	l2011
  2153  001B88  D000               	goto	l918
  2154  001B8A                     l918:
  2155  001B8A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2156  001B8E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2157  001B92  0012               	return		;funcret
  2158  001B94                     __end_of___lwdiv:
  2159                           	opt stack 0
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           prodh	equ	0xFF4
  2165                           prodl	equ	0xFF3
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           fsr1l	equ	0xFE1
  2170                           indf2	equ	0xFDF
  2171                           postinc2	equ	0xFDE
  2172                           postdec2	equ	0xFDD
  2173                           fsr2h	equ	0xFDA
  2174                           fsr2l	equ	0xFD9
  2175                           status	equ	0xFD8
  2176                           
  2177 ;; *************** function _lcd_putrs *****************
  2178 ;; Defined at:
  2179 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  2182 ;;		 -> STR_5(7), STR_4(7), buffer2(20), STR_1(7), 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;		None               void
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2198 ;;Total ram usage:        2 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:    4
  2201 ;; This function calls:
  2202 ;;		_lcd_putc
  2203 ;; This function is called by:
  2204 ;;		_caratula
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text9
  2209  001B94                     __ptext9:
  2210                           	opt stack 0
  2211  001B94                     _lcd_putrs:
  2212                           	opt stack 25
  2213                           
  2214                           ;unmc_lcd_216.c: 223: while(*ptr){
  2215                           
  2216                           ;incstack = 0
  2217  001B94  D015               	goto	l2155
  2218  001B96                     l2151:
  2219                           
  2220                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  2221  001B96  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2222  001B9A  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2223  001B9E  6AF8               	clrf	tblptru,c
  2224  001BA0  0E0E               	movlw	(high __ramtop+-1)
  2225  001BA2  64F7               	cpfsgt	tblptrh,c
  2226  001BA4  D003               	bra	u1437
  2227  001BA6  0008               	tblrd		*
  2228  001BA8  50F5               	movf	tablat,w,c
  2229  001BAA  D005               	bra	u1430
  2230  001BAC                     u1437:
  2231  001BAC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2232  001BB0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2233  001BB4  50EF               	movf	indf0,w,c
  2234  001BB6                     u1430:
  2235  001BB6  EC1A  F00E         	call	_lcd_putc
  2236  001BBA  4A09               	infsnz	lcd_putrs@ptr,f,c
  2237  001BBC  2A0A               	incf	lcd_putrs@ptr+1,f,c
  2238  001BBE  D000               	goto	l2155
  2239  001BC0                     l2155:
  2240  001BC0  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2241  001BC4  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2242  001BC8  6AF8               	clrf	tblptru,c
  2243  001BCA  0E0E               	movlw	(high __ramtop+-1)
  2244  001BCC  64F7               	cpfsgt	tblptrh,c
  2245  001BCE  D003               	bra	u1447
  2246  001BD0  0008               	tblrd		*
  2247  001BD2  50F5               	movf	tablat,w,c
  2248  001BD4  D005               	bra	u1440
  2249  001BD6                     u1447:
  2250  001BD6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2251  001BDA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2252  001BDE  50EF               	movf	indf0,w,c
  2253  001BE0                     u1440:
  2254  001BE0  0900               	iorlw	0
  2255  001BE2  A4D8               	btfss	status,2,c
  2256  001BE4  D7D8               	goto	l2151
  2257  001BE6  0012               	return		;funcret
  2258  001BE8                     __end_of_lcd_putrs:
  2259                           	opt stack 0
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           prodh	equ	0xFF4
  2265                           prodl	equ	0xFF3
  2266                           indf0	equ	0xFEF
  2267                           postinc0	equ	0xFEE
  2268                           fsr0h	equ	0xFEA
  2269                           fsr0l	equ	0xFE9
  2270                           wreg	equ	0xFE8
  2271                           postdec1	equ	0xFE5
  2272                           fsr1l	equ	0xFE1
  2273                           indf2	equ	0xFDF
  2274                           postinc2	equ	0xFDE
  2275                           postdec2	equ	0xFDD
  2276                           fsr2h	equ	0xFDA
  2277                           fsr2l	equ	0xFD9
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function _lcd_putc *****************
  2281 ;; Defined at:
  2282 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  c               1    wreg     unsigned char 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  c               1    7[COMRAM] unsigned char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;		None               void
  2289 ;; Registers used:
  2290 ;;		wreg, status,2, status,0, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2299 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2300 ;;Total ram usage:        1 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    3
  2303 ;; This function calls:
  2304 ;;		_lcd_gotoxy
  2305 ;;		_lcd_send_byte
  2306 ;; This function is called by:
  2307 ;;		_lcd_putrs
  2308 ;;		_lcd_puts
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text10
  2313  001C34                     __ptext10:
  2314                           	opt stack 0
  2315  001C34                     _lcd_putc:
  2316                           	opt stack 25
  2317                           
  2318                           ;incstack = 0
  2319                           ;lcd_putc@c stored from wreg
  2320  001C34  6E08               	movwf	lcd_putc@c,c
  2321                           
  2322                           ;unmc_lcd_216.c: 173: switch(c){
  2323  001C36  D018               	goto	l1937
  2324  001C38                     l1927:
  2325                           
  2326                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  2327  001C38  0E01               	movlw	1
  2328  001C3A  6E03               	movwf	lcd_send_byte@n,c
  2329  001C3C  0E00               	movlw	0
  2330  001C3E  EC86  F00E         	call	_lcd_send_byte
  2331                           
  2332                           ;unmc_lcd_216.c: 176: break;
  2333  001C42  0012               	return	
  2334  001C44                     l1929:
  2335                           
  2336                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  2337  001C44  0E02               	movlw	2
  2338  001C46  6E05               	movwf	lcd_gotoxy@y,c
  2339  001C48  0E01               	movlw	1
  2340  001C4A  ECB3  F00E         	call	_lcd_gotoxy
  2341                           
  2342                           ;unmc_lcd_216.c: 179: break;
  2343  001C4E  0012               	return	
  2344  001C50                     l1931:
  2345                           
  2346                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  2347  001C50  0E10               	movlw	16
  2348  001C52  6E03               	movwf	lcd_send_byte@n,c
  2349  001C54  0E00               	movlw	0
  2350  001C56  EC86  F00E         	call	_lcd_send_byte
  2351                           
  2352                           ;unmc_lcd_216.c: 182: break;
  2353  001C5A  0012               	return	
  2354  001C5C                     l1933:
  2355                           
  2356                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  2357  001C5C  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  2358  001C60  0E01               	movlw	1
  2359  001C62  EC86  F00E         	call	_lcd_send_byte
  2360                           
  2361                           ;unmc_lcd_216.c: 186: }
  2362                           
  2363                           ;unmc_lcd_216.c: 185: break;
  2364  001C66  0012               	return	
  2365  001C68                     l1937:
  2366  001C68  5008               	movf	lcd_putc@c,w,c
  2367                           
  2368                           ; Switch size 1, requested type "space"
  2369                           ; Number of cases is 3, Range of values is 8 to 12
  2370                           ; switch strategies available:
  2371                           ; Name         Instructions Cycles
  2372                           ; simple_byte           10     6 (average)
  2373                           ;	Chosen strategy is simple_byte
  2374  001C6A  0A08               	xorlw	8	; case 8
  2375  001C6C  B4D8               	btfsc	status,2,c
  2376  001C6E  D7F0               	goto	l1931
  2377  001C70  0A02               	xorlw	2	; case 10
  2378  001C72  B4D8               	btfsc	status,2,c
  2379  001C74  D7E7               	goto	l1929
  2380  001C76  0A06               	xorlw	6	; case 12
  2381  001C78  B4D8               	btfsc	status,2,c
  2382  001C7A  D7DE               	goto	l1927
  2383  001C7C  D7EF               	goto	l1933
  2384  001C7E  0012               	return		;funcret
  2385  001C80                     __end_of_lcd_putc:
  2386                           	opt stack 0
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           prodh	equ	0xFF4
  2392                           prodl	equ	0xFF3
  2393                           indf0	equ	0xFEF
  2394                           postinc0	equ	0xFEE
  2395                           fsr0h	equ	0xFEA
  2396                           fsr0l	equ	0xFE9
  2397                           wreg	equ	0xFE8
  2398                           postdec1	equ	0xFE5
  2399                           fsr1l	equ	0xFE1
  2400                           indf2	equ	0xFDF
  2401                           postinc2	equ	0xFDE
  2402                           postdec2	equ	0xFDD
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _lcd_gotoxy *****************
  2408 ;; Defined at:
  2409 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  x               1    wreg     unsigned char 
  2412 ;;  y               1    4[COMRAM] unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  x               1    5[COMRAM] unsigned char 
  2415 ;;  address         1    6[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;		None               void
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2425 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2428 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2429 ;;Total ram usage:        3 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    2
  2432 ;; This function calls:
  2433 ;;		_lcd_send_byte
  2434 ;; This function is called by:
  2435 ;;		_caratula
  2436 ;;		_main
  2437 ;;		_lcd_putc
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text11
  2442  001D66                     __ptext11:
  2443                           	opt stack 0
  2444  001D66                     _lcd_gotoxy:
  2445                           	opt stack 28
  2446                           
  2447                           ;incstack = 0
  2448                           ;lcd_gotoxy@x stored from wreg
  2449  001D66  6E06               	movwf	lcd_gotoxy@x,c
  2450                           
  2451                           ;unmc_lcd_216.c: 159: int8 address;
  2452                           ;unmc_lcd_216.c: 161: if(y != 1)
  2453  001D68  0405               	decf	lcd_gotoxy@y,w,c
  2454  001D6A  B4D8               	btfsc	status,2,c
  2455  001D6C  D002               	goto	l1783
  2456                           
  2457                           ;unmc_lcd_216.c: 162: address = 0x40;
  2458  001D6E  0E40               	movlw	64
  2459  001D70  D001               	goto	L1
  2460  001D72                     l1783:
  2461                           
  2462                           ;unmc_lcd_216.c: 163: else
  2463                           ;unmc_lcd_216.c: 164: address=0;
  2464  001D72  0E00               	movlw	0
  2465  001D74                     L1:
  2466  001D74  6E07               	movwf	lcd_gotoxy@address,c
  2467  001D76  D000               	goto	l1785
  2468  001D78                     l1785:
  2469                           
  2470                           ;unmc_lcd_216.c: 166: address += x-1;
  2471  001D78  0406               	decf	lcd_gotoxy@x,w,c
  2472  001D7A  2607               	addwf	lcd_gotoxy@address,f,c
  2473                           
  2474                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2475  001D7C  5007               	movf	lcd_gotoxy@address,w,c
  2476  001D7E  0980               	iorlw	128
  2477  001D80  6E03               	movwf	lcd_send_byte@n,c
  2478  001D82  0E00               	movlw	0
  2479  001D84  EC86  F00E         	call	_lcd_send_byte
  2480  001D88  0012               	return		;funcret
  2481  001D8A                     __end_of_lcd_gotoxy:
  2482                           	opt stack 0
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           prodh	equ	0xFF4
  2488                           prodl	equ	0xFF3
  2489                           indf0	equ	0xFEF
  2490                           postinc0	equ	0xFEE
  2491                           fsr0h	equ	0xFEA
  2492                           fsr0l	equ	0xFE9
  2493                           wreg	equ	0xFE8
  2494                           postdec1	equ	0xFE5
  2495                           fsr1l	equ	0xFE1
  2496                           indf2	equ	0xFDF
  2497                           postinc2	equ	0xFDE
  2498                           postdec2	equ	0xFDD
  2499                           fsr2h	equ	0xFDA
  2500                           fsr2l	equ	0xFD9
  2501                           status	equ	0xFD8
  2502                           
  2503 ;; *************** function _Setup *****************
  2504 ;; Defined at:
  2505 ;;		line 67 in file "main.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;		None               void
  2512 ;; Registers used:
  2513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    3
  2526 ;; This function calls:
  2527 ;;		_Write_RTC
  2528 ;;		_lcd_comand
  2529 ;;		_lcd_init
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text12
  2536  001C80                     __ptext12:
  2537                           	opt stack 0
  2538  001C80                     _Setup:
  2539                           	opt stack 27
  2540                           
  2541                           ;main.c: 69: OSCTUNEbits.INTSRC=1;
  2542                           
  2543                           ;incstack = 0
  2544  001C80  8E9B               	bsf	3995,7,c	;volatile
  2545                           
  2546                           ;main.c: 70: OSCTUNEbits.PLLEN=0;
  2547  001C82  9C9B               	bcf	3995,6,c	;volatile
  2548                           
  2549                           ;main.c: 71: OSCCONbits.IRCF0=1;
  2550  001C84  88D3               	bsf	4051,4,c	;volatile
  2551                           
  2552                           ;main.c: 72: OSCCONbits.IRCF1=1;
  2553  001C86  8AD3               	bsf	4051,5,c	;volatile
  2554                           
  2555                           ;main.c: 73: OSCCONbits.IRCF2=1;
  2556  001C88  8CD3               	bsf	4051,6,c	;volatile
  2557                           
  2558                           ;main.c: 74: OSCCONbits.SCS0=0;
  2559  001C8A  90D3               	bcf	4051,0,c	;volatile
  2560                           
  2561                           ;main.c: 75: OSCCONbits.SCS1=0;
  2562  001C8C  92D3               	bcf	4051,1,c	;volatile
  2563                           
  2564                           ;main.c: 76: TRISA = 0b11111111;
  2565  001C8E  6892               	setf	3986,c	;volatile
  2566                           
  2567                           ;main.c: 77: TRISB = 0;
  2568  001C90  0E00               	movlw	0
  2569  001C92  6E93               	movwf	3987,c	;volatile
  2570                           
  2571                           ;main.c: 78: TRISC = 0b00000111;
  2572  001C94  0E07               	movlw	7
  2573  001C96  6E94               	movwf	3988,c	;volatile
  2574                           
  2575                           ;main.c: 82: ANCON0=0b11111111;
  2576  001C98  010F               	movlb	15	; () banked
  2577  001C9A  6948               	setf	72,b	;volatile
  2578                           
  2579                           ;main.c: 83: ANCON0=0b10010111;
  2580  001C9C  0E97               	movlw	151
  2581  001C9E  010F               	movlb	15	; () banked
  2582  001CA0  6F48               	movwf	72,b	;volatile
  2583                           
  2584                           ;main.c: 84: ADCON0=0b00101101;
  2585  001CA2  0E2D               	movlw	45
  2586  001CA4  6EC2               	movwf	4034,c	;volatile
  2587                           
  2588                           ;main.c: 85: ADCON1=0b00010000;
  2589  001CA6  0E10               	movlw	16
  2590  001CA8  6EC1               	movwf	4033,c	;volatile
  2591                           
  2592                           ; BSR set to: 15
  2593                           ;main.c: 86: RTCCFGbits.RTCEN=1;
  2594  001CAA  010F               	movlb	15	; () banked
  2595  001CAC  8F3F               	bsf	63,7,b	;volatile
  2596                           
  2597                           ; BSR set to: 15
  2598                           ;main.c: 87: RTCCFGbits.RTCWREN=1;
  2599  001CAE  010F               	movlb	15	; () banked
  2600  001CB0  8B3F               	bsf	63,5,b	;volatile
  2601                           
  2602                           ; BSR set to: 15
  2603                           ;main.c: 88: T1CONbits.T1OSCEN=1;
  2604  001CB2  86CD               	bsf	4045,3,c	;volatile
  2605                           
  2606                           ; BSR set to: 15
  2607                           ;main.c: 89: Write_RTC();
  2608  001CB4  ECD0  F008         	call	_Write_RTC	;wreg free
  2609                           
  2610                           ;main.c: 90: lcd_init();
  2611  001CB8  ECEA  F00C         	call	_lcd_init	;wreg free
  2612                           
  2613                           ;main.c: 91: lcd_comand(0b00001111);
  2614  001CBC  0E0F               	movlw	15
  2615  001CBE  ECFB  F00E         	call	_lcd_comand
  2616                           
  2617                           ;main.c: 92: LATBbits.LATB1 = 0;;
  2618  001CC2  928A               	bcf	3978,1,c	;volatile
  2619                           
  2620                           ;main.c: 93: LATBbits.LATB0 = 0;;
  2621  001CC4  908A               	bcf	3978,0,c	;volatile
  2622  001CC6  0012               	return		;funcret
  2623  001CC8                     __end_of_Setup:
  2624                           	opt stack 0
  2625                           tblptru	equ	0xFF8
  2626                           tblptrh	equ	0xFF7
  2627                           tblptrl	equ	0xFF6
  2628                           tablat	equ	0xFF5
  2629                           prodh	equ	0xFF4
  2630                           prodl	equ	0xFF3
  2631                           indf0	equ	0xFEF
  2632                           postinc0	equ	0xFEE
  2633                           fsr0h	equ	0xFEA
  2634                           fsr0l	equ	0xFE9
  2635                           wreg	equ	0xFE8
  2636                           postdec1	equ	0xFE5
  2637                           fsr1l	equ	0xFE1
  2638                           indf2	equ	0xFDF
  2639                           postinc2	equ	0xFDE
  2640                           postdec2	equ	0xFDD
  2641                           fsr2h	equ	0xFDA
  2642                           fsr2l	equ	0xFD9
  2643                           status	equ	0xFD8
  2644                           
  2645 ;; *************** function _lcd_init *****************
  2646 ;; Defined at:
  2647 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  i               1    4[COMRAM] unsigned char 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;		None               void
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2665 ;;Total ram usage:        1 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    2
  2668 ;; This function calls:
  2669 ;;		_Delay1KTCYx
  2670 ;;		_lcd_send_byte
  2671 ;;		_lcd_send_nibble
  2672 ;; This function is called by:
  2673 ;;		_Setup
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text13
  2678  0019D4                     __ptext13:
  2679                           	opt stack 0
  2680  0019D4                     _lcd_init:
  2681                           	opt stack 27
  2682                           
  2683                           ;unmc_lcd_216.c: 120: int8 i;
  2684                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2685                           
  2686                           ;incstack = 0
  2687  0019D4  9693               	bcf	3987,3,c	;volatile
  2688                           
  2689                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2690  0019D6  9493               	bcf	3987,2,c	;volatile
  2691                           
  2692                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2693  0019D8  968A               	bcf	3978,3,c	;volatile
  2694                           
  2695                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2696  0019DA  948A               	bcf	3978,2,c	;volatile
  2697                           
  2698                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2699  0019DC  9893               	bcf	3987,4,c	;volatile
  2700                           
  2701                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2702  0019DE  9A93               	bcf	3987,5,c	;volatile
  2703                           
  2704                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2705  0019E0  9C93               	bcf	3987,6,c	;volatile
  2706                           
  2707                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2708  0019E2  9E93               	bcf	3987,7,c	;volatile
  2709                           
  2710                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2711  0019E4  0E0A               	movlw	10
  2712  0019E6  ECE0  F00E         	call	_Delay1KTCYx
  2713                           
  2714                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2715  0019EA  0E0A               	movlw	10
  2716  0019EC  ECE0  F00E         	call	_Delay1KTCYx
  2717                           
  2718                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2719  0019F0  0E0A               	movlw	10
  2720  0019F2  ECE0  F00E         	call	_Delay1KTCYx
  2721                           
  2722                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2723  0019F6  0E00               	movlw	0
  2724  0019F8  6E05               	movwf	lcd_init@i,c
  2725  0019FA                     l2253:
  2726  0019FA  0E02               	movlw	2
  2727  0019FC  6405               	cpfsgt	lcd_init@i,c
  2728  0019FE  D001               	goto	l2257
  2729  001A00  D008               	goto	l2263
  2730  001A02                     l2257:
  2731                           
  2732                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2733  001A02  0E03               	movlw	3
  2734  001A04  EC2A  F00D         	call	_lcd_send_nibble
  2735                           
  2736                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2737  001A08  0E0A               	movlw	10
  2738  001A0A  ECE0  F00E         	call	_Delay1KTCYx
  2739  001A0E  2A05               	incf	lcd_init@i,f,c
  2740  001A10  D7F4               	goto	l2253
  2741  001A12                     l2263:
  2742                           
  2743                           ;unmc_lcd_216.c: 146: }
  2744                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2745  001A12  0E02               	movlw	2
  2746  001A14  EC2A  F00D         	call	_lcd_send_nibble
  2747                           
  2748                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2749  001A18  0E00               	movlw	0
  2750  001A1A  6E05               	movwf	lcd_init@i,c
  2751  001A1C  0E03               	movlw	3
  2752  001A1E  6405               	cpfsgt	lcd_init@i,c
  2753  001A20  D002               	goto	l2271
  2754  001A22  0012               	return	
  2755  001A24  0012               	return	
  2756  001A26                     l2271:
  2757                           
  2758                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2759  001A26  5005               	movf	lcd_init@i,w,c
  2760  001A28  0D01               	mullw	1
  2761  001A2A  0E0B               	movlw	low _LCD_INIT_STRING
  2762  001A2C  24F3               	addwf	prodl,w,c
  2763  001A2E  6EF6               	movwf	tblptrl,c
  2764  001A30  0E0F               	movlw	high _LCD_INIT_STRING
  2765  001A32  20F4               	addwfc	prodh,w,c
  2766  001A34  6EF7               	movwf	tblptrh,c
  2767  001A36                     	if	0	;There are less than 3 active tblptr bytes
  2768  001A36                     	endif
  2769  001A36  0008               	tblrd		*
  2770  001A38  CFF5 F003          	movff	tablat,lcd_send_byte@n
  2771  001A3C  0E00               	movlw	0
  2772  001A3E  EC86  F00E         	call	_lcd_send_byte
  2773                           
  2774                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2775  001A42  0E0A               	movlw	10
  2776  001A44  ECE0  F00E         	call	_Delay1KTCYx
  2777  001A48  2A05               	incf	lcd_init@i,f,c
  2778  001A4A  0E03               	movlw	3
  2779  001A4C  6405               	cpfsgt	lcd_init@i,c
  2780  001A4E  D7EB               	goto	l2271
  2781  001A50  0012               	return	
  2782  001A52  0012               	return		;funcret
  2783  001A54                     __end_of_lcd_init:
  2784                           	opt stack 0
  2785                           tblptru	equ	0xFF8
  2786                           tblptrh	equ	0xFF7
  2787                           tblptrl	equ	0xFF6
  2788                           tablat	equ	0xFF5
  2789                           prodh	equ	0xFF4
  2790                           prodl	equ	0xFF3
  2791                           indf0	equ	0xFEF
  2792                           postinc0	equ	0xFEE
  2793                           fsr0h	equ	0xFEA
  2794                           fsr0l	equ	0xFE9
  2795                           wreg	equ	0xFE8
  2796                           postdec1	equ	0xFE5
  2797                           fsr1l	equ	0xFE1
  2798                           indf2	equ	0xFDF
  2799                           postinc2	equ	0xFDE
  2800                           postdec2	equ	0xFDD
  2801                           fsr2h	equ	0xFDA
  2802                           fsr2l	equ	0xFD9
  2803                           status	equ	0xFD8
  2804                           
  2805 ;; *************** function _Delay1KTCYx *****************
  2806 ;; Defined at:
  2807 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  unit            1    wreg     unsigned char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  unit            1    0[COMRAM] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;		None               void
  2814 ;; Registers used:
  2815 ;;		wreg
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2825 ;;Total ram usage:        1 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_lcd_init
  2831 ;;		_DelayPORXLCD
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text14
  2836  001DC0                     __ptext14:
  2837                           	opt stack 0
  2838  001DC0                     _Delay1KTCYx:
  2839                           	opt stack 28
  2840                           
  2841                           ;incstack = 0
  2842                           ;Delay1KTCYx@unit stored from wreg
  2843  001DC0  6E01               	movwf	Delay1KTCYx@unit,c
  2844  001DC2  0EFA               	movlw	250
  2845  001DC4                     u1887:
  2846  001DC4  F000               	nop	
  2847  001DC6  2EE8               	decfsz	wreg,f,c
  2848  001DC8  D7FD               	goto	u1887
  2849  001DCA  2E01               	decfsz	Delay1KTCYx@unit,f,c
  2850  001DCC  D7FA               	goto	l1047
  2851  001DCE  0012               	return	
  2852  001DD0  0012               	return		;funcret
  2853  001DD2                     __end_of_Delay1KTCYx:
  2854                           	opt stack 0
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           indf0	equ	0xFEF
  2862                           postinc0	equ	0xFEE
  2863                           fsr0h	equ	0xFEA
  2864                           fsr0l	equ	0xFE9
  2865                           wreg	equ	0xFE8
  2866                           postdec1	equ	0xFE5
  2867                           fsr1l	equ	0xFE1
  2868                           indf2	equ	0xFDF
  2869                           postinc2	equ	0xFDE
  2870                           postdec2	equ	0xFDD
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _lcd_comand *****************
  2876 ;; Defined at:
  2877 ;;		line 189 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  d               1    wreg     unsigned char 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  d               1    4[COMRAM] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;		None               void
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2895 ;;Total ram usage:        1 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    2
  2898 ;; This function calls:
  2899 ;;		_lcd_send_byte
  2900 ;; This function is called by:
  2901 ;;		_caratula
  2902 ;;		_Setup
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text15
  2907  001DF6                     __ptext15:
  2908                           	opt stack 0
  2909  001DF6                     _lcd_comand:
  2910                           	opt stack 27
  2911                           
  2912                           ;incstack = 0
  2913                           ;lcd_comand@d stored from wreg
  2914  001DF6  6E05               	movwf	lcd_comand@d,c
  2915                           
  2916                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  2917  001DF8  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  2918  001DFC  0E00               	movlw	0
  2919  001DFE  EC86  F00E         	call	_lcd_send_byte
  2920  001E02  0012               	return		;funcret
  2921  001E04                     __end_of_lcd_comand:
  2922                           	opt stack 0
  2923                           tblptru	equ	0xFF8
  2924                           tblptrh	equ	0xFF7
  2925                           tblptrl	equ	0xFF6
  2926                           tablat	equ	0xFF5
  2927                           prodh	equ	0xFF4
  2928                           prodl	equ	0xFF3
  2929                           indf0	equ	0xFEF
  2930                           postinc0	equ	0xFEE
  2931                           fsr0h	equ	0xFEA
  2932                           fsr0l	equ	0xFE9
  2933                           wreg	equ	0xFE8
  2934                           postdec1	equ	0xFE5
  2935                           fsr1l	equ	0xFE1
  2936                           indf2	equ	0xFDF
  2937                           postinc2	equ	0xFDE
  2938                           postdec2	equ	0xFDD
  2939                           fsr2h	equ	0xFDA
  2940                           fsr2l	equ	0xFD9
  2941                           status	equ	0xFD8
  2942                           
  2943 ;; *************** function _lcd_send_byte *****************
  2944 ;; Defined at:
  2945 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  address         1    wreg     unsigned char 
  2948 ;;  n               1    2[COMRAM] unsigned char 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  address         1    3[COMRAM] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;		None               void
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2960 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2964 ;;Total ram usage:        2 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    1
  2967 ;; This function calls:
  2968 ;;		_Delay100TCYx
  2969 ;;		_lcd_send_nibble
  2970 ;; This function is called by:
  2971 ;;		_lcd_init
  2972 ;;		_lcd_gotoxy
  2973 ;;		_lcd_putc
  2974 ;;		_lcd_comand
  2975 ;;		_lcd_setcursor_vb
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text16
  2980  001D0C                     __ptext16:
  2981                           	opt stack 0
  2982  001D0C                     _lcd_send_byte:
  2983                           	opt stack 28
  2984                           
  2985                           ;incstack = 0
  2986                           ;lcd_send_byte@address stored from wreg
  2987  001D0C  6E04               	movwf	lcd_send_byte@address,c
  2988                           
  2989                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  2990  001D0E  968A               	bcf	3978,3,c	;volatile
  2991                           
  2992                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  2993  001D10  0E02               	movlw	2
  2994  001D12  ECE9  F00E         	call	_Delay100TCYx
  2995                           
  2996                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  2997  001D16  9893               	bcf	3987,4,c	;volatile
  2998                           
  2999                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  3000  001D18  9A93               	bcf	3987,5,c	;volatile
  3001                           
  3002                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  3003  001D1A  9C93               	bcf	3987,6,c	;volatile
  3004                           
  3005                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  3006  001D1C  9E93               	bcf	3987,7,c	;volatile
  3007                           
  3008                           ;unmc_lcd_216.c: 101: if(address)
  3009  001D1E  5004               	movf	lcd_send_byte@address,w,c
  3010  001D20  B4D8               	btfsc	status,2,c
  3011  001D22  D002               	goto	l195
  3012                           
  3013                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  3014  001D24  868A               	bsf	3978,3,c	;volatile
  3015  001D26  D001               	goto	l196
  3016  001D28                     l195:
  3017                           
  3018                           ;unmc_lcd_216.c: 103: else
  3019                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  3020  001D28  968A               	bcf	3978,3,c	;volatile
  3021  001D2A                     l196:
  3022                           
  3023                           ;unmc_lcd_216.c: 106: __nop();
  3024  001D2A  F000               	nop	
  3025                           
  3026                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  3027  001D2C  3803               	swapf	lcd_send_byte@n,w,c
  3028  001D2E  0B0F               	andlw	15
  3029  001D30  EC2A  F00D         	call	_lcd_send_nibble
  3030                           
  3031                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  3032  001D34  5003               	movf	lcd_send_byte@n,w,c
  3033  001D36  0B0F               	andlw	15
  3034  001D38  EC2A  F00D         	call	_lcd_send_nibble
  3035  001D3C  0012               	return		;funcret
  3036  001D3E                     __end_of_lcd_send_byte:
  3037                           	opt stack 0
  3038                           tblptru	equ	0xFF8
  3039                           tblptrh	equ	0xFF7
  3040                           tblptrl	equ	0xFF6
  3041                           tablat	equ	0xFF5
  3042                           prodh	equ	0xFF4
  3043                           prodl	equ	0xFF3
  3044                           indf0	equ	0xFEF
  3045                           postinc0	equ	0xFEE
  3046                           fsr0h	equ	0xFEA
  3047                           fsr0l	equ	0xFE9
  3048                           wreg	equ	0xFE8
  3049                           postdec1	equ	0xFE5
  3050                           fsr1l	equ	0xFE1
  3051                           indf2	equ	0xFDF
  3052                           postinc2	equ	0xFDE
  3053                           postdec2	equ	0xFDD
  3054                           fsr2h	equ	0xFDA
  3055                           fsr2l	equ	0xFD9
  3056                           status	equ	0xFD8
  3057                           
  3058 ;; *************** function _lcd_send_nibble *****************
  3059 ;; Defined at:
  3060 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  nibble          1    wreg     unsigned char 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  nibble          1    1[COMRAM] unsigned char 
  3065 ;; Return value:  Size  Location     Type
  3066 ;;		None               void
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3078 ;;Total ram usage:        2 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_lcd_send_byte
  3084 ;;		_lcd_init
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text17
  3089  001A54                     __ptext17:
  3090                           	opt stack 0
  3091  001A54                     _lcd_send_nibble:
  3092                           	opt stack 28
  3093                           
  3094                           ;incstack = 0
  3095                           ;lcd_send_nibble@nibble stored from wreg
  3096  001A54  6E02               	movwf	lcd_send_nibble@nibble,c
  3097                           
  3098                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  3099  001A56  A002               	btfss	lcd_send_nibble@nibble,0,c
  3100  001A58  D003               	goto	u930
  3101  001A5A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3102  001A5C  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3103  001A5E  D001               	goto	u948
  3104  001A60                     u930:
  3105  001A60  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3106  001A62                     u948:
  3107  001A62  3A01               	swapf	??_lcd_send_nibble,f,c
  3108  001A64  508A               	movf	3978,w,c	;volatile
  3109  001A66  1801               	xorwf	??_lcd_send_nibble,w,c
  3110  001A68  0BEF               	andlw	-17
  3111  001A6A  1801               	xorwf	??_lcd_send_nibble,w,c
  3112  001A6C  6E8A               	movwf	3978,c	;volatile
  3113                           
  3114                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  3115  001A6E  A202               	btfss	lcd_send_nibble@nibble,1,c
  3116  001A70  D003               	goto	u950
  3117  001A72  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3118  001A74  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3119  001A76  D001               	goto	u968
  3120  001A78                     u950:
  3121  001A78  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3122  001A7A                     u968:
  3123  001A7A  3A01               	swapf	??_lcd_send_nibble,f,c
  3124  001A7C  4601               	rlncf	??_lcd_send_nibble,f,c
  3125  001A7E  508A               	movf	3978,w,c	;volatile
  3126  001A80  1801               	xorwf	??_lcd_send_nibble,w,c
  3127  001A82  0BDF               	andlw	-33
  3128  001A84  1801               	xorwf	??_lcd_send_nibble,w,c
  3129  001A86  6E8A               	movwf	3978,c	;volatile
  3130                           
  3131                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  3132  001A88  A402               	btfss	lcd_send_nibble@nibble,2,c
  3133  001A8A  D003               	goto	u970
  3134  001A8C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3135  001A8E  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3136  001A90  D001               	goto	u988
  3137  001A92                     u970:
  3138  001A92  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3139  001A94                     u988:
  3140  001A94  3A01               	swapf	??_lcd_send_nibble,f,c
  3141  001A96  4601               	rlncf	??_lcd_send_nibble,f,c
  3142  001A98  4601               	rlncf	??_lcd_send_nibble,f,c
  3143  001A9A  508A               	movf	3978,w,c	;volatile
  3144  001A9C  1801               	xorwf	??_lcd_send_nibble,w,c
  3145  001A9E  0BBF               	andlw	-65
  3146  001AA0  1801               	xorwf	??_lcd_send_nibble,w,c
  3147  001AA2  6E8A               	movwf	3978,c	;volatile
  3148                           
  3149                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  3150  001AA4  A602               	btfss	lcd_send_nibble@nibble,3,c
  3151  001AA6  D003               	goto	u990
  3152  001AA8  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3153  001AAA  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3154  001AAC  D001               	goto	u1008
  3155  001AAE                     u990:
  3156  001AAE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3157  001AB0                     u1008:
  3158  001AB0  3201               	rrcf	??_lcd_send_nibble,f,c
  3159  001AB2  3201               	rrcf	??_lcd_send_nibble,f,c
  3160  001AB4  508A               	movf	3978,w,c	;volatile
  3161  001AB6  1801               	xorwf	??_lcd_send_nibble,w,c
  3162  001AB8  0B7F               	andlw	-129
  3163  001ABA  1801               	xorwf	??_lcd_send_nibble,w,c
  3164  001ABC  6E8A               	movwf	3978,c	;volatile
  3165                           
  3166                           ;unmc_lcd_216.c: 32: __nop();
  3167  001ABE  F000               	nop	
  3168                           
  3169                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  3170  001AC0  848A               	bsf	3978,2,c	;volatile
  3171                           
  3172                           ;unmc_lcd_216.c: 34: __nop();__nop();
  3173  001AC2  F000               	nop	
  3174  001AC4  F000               	nop	
  3175                           
  3176                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  3177  001AC6  948A               	bcf	3978,2,c	;volatile
  3178  001AC8  0012               	return		;funcret
  3179  001ACA                     __end_of_lcd_send_nibble:
  3180                           	opt stack 0
  3181                           tblptru	equ	0xFF8
  3182                           tblptrh	equ	0xFF7
  3183                           tblptrl	equ	0xFF6
  3184                           tablat	equ	0xFF5
  3185                           prodh	equ	0xFF4
  3186                           prodl	equ	0xFF3
  3187                           indf0	equ	0xFEF
  3188                           postinc0	equ	0xFEE
  3189                           fsr0h	equ	0xFEA
  3190                           fsr0l	equ	0xFE9
  3191                           wreg	equ	0xFE8
  3192                           postdec1	equ	0xFE5
  3193                           fsr1l	equ	0xFE1
  3194                           indf2	equ	0xFDF
  3195                           postinc2	equ	0xFDE
  3196                           postdec2	equ	0xFDD
  3197                           fsr2h	equ	0xFDA
  3198                           fsr2l	equ	0xFD9
  3199                           status	equ	0xFD8
  3200                           
  3201 ;; *************** function _Delay100TCYx *****************
  3202 ;; Defined at:
  3203 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  unit            1    wreg     unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  unit            1    0[COMRAM] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;		None               void
  3210 ;; Registers used:
  3211 ;;		wreg
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3221 ;;Total ram usage:        1 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_lcd_send_byte
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text18
  3231  001DD2                     __ptext18:
  3232                           	opt stack 0
  3233  001DD2                     _Delay100TCYx:
  3234                           	opt stack 28
  3235                           
  3236                           ;incstack = 0
  3237                           ;Delay100TCYx@unit stored from wreg
  3238  001DD2  6E01               	movwf	Delay100TCYx@unit,c
  3239  001DD4  0E21               	movlw	33
  3240  001DD6                     u1897:
  3241  001DD6  2EE8               	decfsz	wreg,f,c
  3242  001DD8  D7FE               	goto	u1897
  3243  001DDA  F000               	nop	
  3244  001DDC  2E01               	decfsz	Delay100TCYx@unit,f,c
  3245  001DDE  D7FA               	goto	l1757
  3246  001DE0  0012               	return	
  3247  001DE2  0012               	return		;funcret
  3248  001DE4                     __end_of_Delay100TCYx:
  3249                           	opt stack 0
  3250                           tblptru	equ	0xFF8
  3251                           tblptrh	equ	0xFF7
  3252                           tblptrl	equ	0xFF6
  3253                           tablat	equ	0xFF5
  3254                           prodh	equ	0xFF4
  3255                           prodl	equ	0xFF3
  3256                           indf0	equ	0xFEF
  3257                           postinc0	equ	0xFEE
  3258                           fsr0h	equ	0xFEA
  3259                           fsr0l	equ	0xFE9
  3260                           wreg	equ	0xFE8
  3261                           postdec1	equ	0xFE5
  3262                           fsr1l	equ	0xFE1
  3263                           indf2	equ	0xFDF
  3264                           postinc2	equ	0xFDE
  3265                           postdec2	equ	0xFDD
  3266                           fsr2h	equ	0xFDA
  3267                           fsr2l	equ	0xFD9
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _Write_RTC *****************
  3271 ;; Defined at:
  3272 ;;		line 74 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;		None               void
  3279 ;; Registers used:
  3280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    2
  3293 ;; This function calls:
  3294 ;;		_RtccWrOn
  3295 ;;		_RtccWriteDate
  3296 ;;		_RtccWriteTime
  3297 ;;		___awdiv
  3298 ;; This function is called by:
  3299 ;;		_Setup
  3300 ;;		_setClock
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text19
  3305  0011A0                     __ptext19:
  3306                           	opt stack 0
  3307  0011A0                     _Write_RTC:
  3308                           	opt stack 27
  3309                           
  3310                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  3311                           
  3312                           ;incstack = 0
  3313  0011A0  ECF2  F00E         	call	_RtccWrOn	;wreg free
  3314                           
  3315                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  3316  0011A4  80A3               	bsf	4003,0,c	;volatile
  3317                           
  3318                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  3319  0011A6  C037  F001         	movff	_segundo,___awdiv@dividend
  3320  0011AA  C038  F002         	movff	_segundo+1,___awdiv@dividend+1
  3321  0011AE  0E00               	movlw	0
  3322  0011B0  6E04               	movwf	___awdiv@divisor+1,c
  3323  0011B2  0E0A               	movlw	10
  3324  0011B4  6E03               	movwf	___awdiv@divisor,c
  3325  0011B6  EC58  F00C         	call	___awdiv	;wreg free
  3326  0011BA  5001               	movf	?___awdiv,w,c
  3327  0011BC  6E4C               	movwf	_segundo_d,c
  3328                           
  3329                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  3330  0011BE  504C               	movf	_segundo_d,w,c
  3331  0011C0  0D0A               	mullw	10
  3332  0011C2  50F3               	movf	prodl,w,c
  3333  0011C4  0800               	sublw	0
  3334  0011C6  2437               	addwf	_segundo,w,c
  3335  0011C8  6E4D               	movwf	_segundo_u,c
  3336                           
  3337                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  3338  0011CA  504C               	movf	_segundo_d,w,c
  3339  0011CC  0D10               	mullw	16
  3340  0011CE  50F3               	movf	prodl,w,c
  3341  0011D0  244D               	addwf	_segundo_u,w,c
  3342  0011D2  6E3E               	movwf	_RtccTime+1,c
  3343                           
  3344                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  3345  0011D4  C058  F001         	movff	_minuto,___awdiv@dividend
  3346  0011D8  C059  F002         	movff	_minuto+1,___awdiv@dividend+1
  3347  0011DC  0E00               	movlw	0
  3348  0011DE  6E04               	movwf	___awdiv@divisor+1,c
  3349  0011E0  0E0A               	movlw	10
  3350  0011E2  6E03               	movwf	___awdiv@divisor,c
  3351  0011E4  EC58  F00C         	call	___awdiv	;wreg free
  3352  0011E8  5001               	movf	?___awdiv,w,c
  3353  0011EA  6E4A               	movwf	_minuto_d,c
  3354                           
  3355                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  3356  0011EC  504A               	movf	_minuto_d,w,c
  3357  0011EE  0D0A               	mullw	10
  3358  0011F0  50F3               	movf	prodl,w,c
  3359  0011F2  0800               	sublw	0
  3360  0011F4  2458               	addwf	_minuto,w,c
  3361  0011F6  6E4B               	movwf	_minuto_u,c
  3362                           
  3363                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  3364  0011F8  504A               	movf	_minuto_d,w,c
  3365  0011FA  0D10               	mullw	16
  3366  0011FC  50F3               	movf	prodl,w,c
  3367  0011FE  244B               	addwf	_minuto_u,w,c
  3368  001200  6E3F               	movwf	_RtccTime+2,c
  3369                           
  3370                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  3371  001202  C054  F001         	movff	_hora,___awdiv@dividend
  3372  001206  C055  F002         	movff	_hora+1,___awdiv@dividend+1
  3373  00120A  0E00               	movlw	0
  3374  00120C  6E04               	movwf	___awdiv@divisor+1,c
  3375  00120E  0E0A               	movlw	10
  3376  001210  6E03               	movwf	___awdiv@divisor,c
  3377  001212  EC58  F00C         	call	___awdiv	;wreg free
  3378  001216  5001               	movf	?___awdiv,w,c
  3379  001218  6E46               	movwf	_hora_d,c
  3380                           
  3381                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  3382  00121A  5046               	movf	_hora_d,w,c
  3383  00121C  0D0A               	mullw	10
  3384  00121E  50F3               	movf	prodl,w,c
  3385  001220  0800               	sublw	0
  3386  001222  2454               	addwf	_hora,w,c
  3387  001224  6E47               	movwf	_hora_u,c
  3388                           
  3389                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  3390  001226  5046               	movf	_hora_d,w,c
  3391  001228  0D10               	mullw	16
  3392  00122A  50F3               	movf	prodl,w,c
  3393  00122C  2447               	addwf	_hora_u,w,c
  3394  00122E  6E40               	movwf	_RtccTime+3,c
  3395                           
  3396                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  3397  001230  C04E  F001         	movff	_anio,___awdiv@dividend
  3398  001234  C04F  F002         	movff	_anio+1,___awdiv@dividend+1
  3399  001238  0E00               	movlw	0
  3400  00123A  6E04               	movwf	___awdiv@divisor+1,c
  3401  00123C  0E0A               	movlw	10
  3402  00123E  6E03               	movwf	___awdiv@divisor,c
  3403  001240  EC58  F00C         	call	___awdiv	;wreg free
  3404  001244  5001               	movf	?___awdiv,w,c
  3405  001246  6E41               	movwf	_anio_d,c
  3406                           
  3407                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  3408  001248  5041               	movf	_anio_d,w,c
  3409  00124A  0D0A               	mullw	10
  3410  00124C  50F3               	movf	prodl,w,c
  3411  00124E  0800               	sublw	0
  3412  001250  244E               	addwf	_anio,w,c
  3413  001252  6E42               	movwf	_anio_u,c
  3414                           
  3415                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  3416  001254  5041               	movf	_anio_d,w,c
  3417  001256  0D10               	mullw	16
  3418  001258  50F3               	movf	prodl,w,c
  3419  00125A  2442               	addwf	_anio_u,w,c
  3420  00125C  6E3C               	movwf	_RtccDate+3,c
  3421                           
  3422                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  3423  00125E  C056  F001         	movff	_mes,___awdiv@dividend
  3424  001262  C057  F002         	movff	_mes+1,___awdiv@dividend+1
  3425  001266  0E00               	movlw	0
  3426  001268  6E04               	movwf	___awdiv@divisor+1,c
  3427  00126A  0E0A               	movlw	10
  3428  00126C  6E03               	movwf	___awdiv@divisor,c
  3429  00126E  EC58  F00C         	call	___awdiv	;wreg free
  3430  001272  5001               	movf	?___awdiv,w,c
  3431  001274  6E48               	movwf	_mes_d,c
  3432                           
  3433                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  3434  001276  5048               	movf	_mes_d,w,c
  3435  001278  0D0A               	mullw	10
  3436  00127A  50F3               	movf	prodl,w,c
  3437  00127C  0800               	sublw	0
  3438  00127E  2456               	addwf	_mes,w,c
  3439  001280  6E49               	movwf	_mes_u,c
  3440                           
  3441                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  3442  001282  5048               	movf	_mes_d,w,c
  3443  001284  0D10               	mullw	16
  3444  001286  50F3               	movf	prodl,w,c
  3445  001288  2449               	addwf	_mes_u,w,c
  3446  00128A  6E3B               	movwf	_RtccDate+2,c
  3447                           
  3448                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  3449  00128C  C050  F001         	movff	_dia,___awdiv@dividend
  3450  001290  C051  F002         	movff	_dia+1,___awdiv@dividend+1
  3451  001294  0E00               	movlw	0
  3452  001296  6E04               	movwf	___awdiv@divisor+1,c
  3453  001298  0E0A               	movlw	10
  3454  00129A  6E03               	movwf	___awdiv@divisor,c
  3455  00129C  EC58  F00C         	call	___awdiv	;wreg free
  3456  0012A0  5001               	movf	?___awdiv,w,c
  3457  0012A2  6E44               	movwf	_fecha_d,c
  3458                           
  3459                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  3460  0012A4  5044               	movf	_fecha_d,w,c
  3461  0012A6  0D0A               	mullw	10
  3462  0012A8  50F3               	movf	prodl,w,c
  3463  0012AA  0800               	sublw	0
  3464  0012AC  2450               	addwf	_dia,w,c
  3465  0012AE  6E45               	movwf	_fecha_u,c
  3466                           
  3467                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  3468  0012B0  5044               	movf	_fecha_d,w,c
  3469  0012B2  0D10               	mullw	16
  3470  0012B4  50F3               	movf	prodl,w,c
  3471  0012B6  2445               	addwf	_fecha_u,w,c
  3472  0012B8  6E3A               	movwf	_RtccDate+1,c
  3473                           
  3474                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  3475  0012BA  C052  F043         	movff	_diasem,_dia_semana
  3476                           
  3477                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  3478  0012BE  C052  F039         	movff	_diasem,_RtccDate
  3479                           
  3480                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  3481  0012C2  0E3D               	movlw	low _RtccTime
  3482  0012C4  6E01               	movwf	RtccWriteTime@pTm,c
  3483  0012C6  0E00               	movlw	high _RtccTime
  3484  0012C8  6E02               	movwf	RtccWriteTime@pTm+1,c
  3485  0012CA  0E01               	movlw	1
  3486  0012CC  6E03               	movwf	RtccWriteTime@di,c
  3487  0012CE  EC17  F00A         	call	_RtccWriteTime	;wreg free
  3488                           
  3489                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  3490  0012D2  0E39               	movlw	low _RtccDate
  3491  0012D4  6E01               	movwf	RtccWriteDate@pDt,c
  3492  0012D6  0E00               	movlw	high _RtccDate
  3493  0012D8  6E02               	movwf	RtccWriteDate@pDt+1,c
  3494  0012DA  0E01               	movlw	1
  3495  0012DC  6E03               	movwf	RtccWriteDate@di,c
  3496  0012DE  EC74  F009         	call	_RtccWriteDate	;wreg free
  3497                           
  3498                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  3499  0012E2  010F               	movlb	15	; () banked
  3500  0012E4  8F3F               	bsf	63,7,b	;volatile
  3501                           
  3502                           ; BSR set to: 15
  3503  0012E6  0012               	return		;funcret
  3504  0012E8                     __end_of_Write_RTC:
  3505                           	opt stack 0
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           prodh	equ	0xFF4
  3511                           prodl	equ	0xFF3
  3512                           indf0	equ	0xFEF
  3513                           postinc0	equ	0xFEE
  3514                           fsr0h	equ	0xFEA
  3515                           fsr0l	equ	0xFE9
  3516                           wreg	equ	0xFE8
  3517                           postdec1	equ	0xFE5
  3518                           fsr1l	equ	0xFE1
  3519                           indf2	equ	0xFDF
  3520                           postinc2	equ	0xFDE
  3521                           postdec2	equ	0xFDD
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           
  3526 ;; *************** function ___awdiv *****************
  3527 ;; Defined at:
  3528 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  dividend        2    0[COMRAM] int 
  3531 ;;  divisor         2    2[COMRAM] int 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  quotient        2    6[COMRAM] int 
  3534 ;;  sign            1    5[COMRAM] unsigned char 
  3535 ;;  counter         1    4[COMRAM] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  2    0[COMRAM] int 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3546 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3548 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3549 ;;Total ram usage:        8 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_Write_RTC
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text20
  3559  0018B0                     __ptext20:
  3560                           	opt stack 0
  3561  0018B0                     ___awdiv:
  3562                           	opt stack 28
  3563                           
  3564                           ; BSR set to: 15
  3565                           ;incstack = 0
  3566  0018B0  0E00               	movlw	0
  3567  0018B2  6E06               	movwf	___awdiv@sign,c
  3568  0018B4  AE04               	btfss	___awdiv@divisor+1,7,c
  3569  0018B6  D007               	goto	l1965
  3570  0018B8  6C03               	negf	___awdiv@divisor,c
  3571  0018BA  1E04               	comf	___awdiv@divisor+1,f,c
  3572  0018BC  B0D8               	btfsc	status,0,c
  3573  0018BE  2A04               	incf	___awdiv@divisor+1,f,c
  3574  0018C0  0E01               	movlw	1
  3575  0018C2  6E06               	movwf	___awdiv@sign,c
  3576  0018C4  D000               	goto	l1965
  3577  0018C6                     l1965:
  3578  0018C6  AE02               	btfss	___awdiv@dividend+1,7,c
  3579  0018C8  D007               	goto	l1971
  3580  0018CA  6C01               	negf	___awdiv@dividend,c
  3581  0018CC  1E02               	comf	___awdiv@dividend+1,f,c
  3582  0018CE  B0D8               	btfsc	status,0,c
  3583  0018D0  2A02               	incf	___awdiv@dividend+1,f,c
  3584  0018D2  0E01               	movlw	1
  3585  0018D4  1A06               	xorwf	___awdiv@sign,f,c
  3586  0018D6  D000               	goto	l1971
  3587  0018D8                     l1971:
  3588  0018D8  0E00               	movlw	0
  3589  0018DA  6E08               	movwf	___awdiv@quotient+1,c
  3590  0018DC  0E00               	movlw	0
  3591  0018DE  6E07               	movwf	___awdiv@quotient,c
  3592  0018E0  5003               	movf	___awdiv@divisor,w,c
  3593  0018E2  1004               	iorwf	___awdiv@divisor+1,w,c
  3594  0018E4  B4D8               	btfsc	status,2,c
  3595  0018E6  D021               	goto	l1993
  3596  0018E8  0E01               	movlw	1
  3597  0018EA  6E05               	movwf	___awdiv@counter,c
  3598  0018EC  D005               	goto	l1979
  3599  0018EE                     l1977:
  3600  0018EE  90D8               	bcf	status,0,c
  3601  0018F0  3603               	rlcf	___awdiv@divisor,f,c
  3602  0018F2  3604               	rlcf	___awdiv@divisor+1,f,c
  3603  0018F4  2A05               	incf	___awdiv@counter,f,c
  3604  0018F6  D000               	goto	l1979
  3605  0018F8                     l1979:
  3606  0018F8  BE04               	btfsc	___awdiv@divisor+1,7,c
  3607  0018FA  D002               	goto	l1981
  3608  0018FC  D7F8               	goto	l1977
  3609  0018FE  D000               	goto	l1981
  3610  001900                     l1981:
  3611  001900  90D8               	bcf	status,0,c
  3612  001902  3607               	rlcf	___awdiv@quotient,f,c
  3613  001904  3608               	rlcf	___awdiv@quotient+1,f,c
  3614  001906  5003               	movf	___awdiv@divisor,w,c
  3615  001908  5C01               	subwf	___awdiv@dividend,w,c
  3616  00190A  5004               	movf	___awdiv@divisor+1,w,c
  3617  00190C  5802               	subwfb	___awdiv@dividend+1,w,c
  3618  00190E  A0D8               	btfss	status,0,c
  3619  001910  D006               	goto	l1989
  3620  001912  5003               	movf	___awdiv@divisor,w,c
  3621  001914  5E01               	subwf	___awdiv@dividend,f,c
  3622  001916  5004               	movf	___awdiv@divisor+1,w,c
  3623  001918  5A02               	subwfb	___awdiv@dividend+1,f,c
  3624  00191A  8007               	bsf	___awdiv@quotient,0,c
  3625  00191C  D000               	goto	l1989
  3626  00191E                     l1989:
  3627  00191E  90D8               	bcf	status,0,c
  3628  001920  3204               	rrcf	___awdiv@divisor+1,f,c
  3629  001922  3203               	rrcf	___awdiv@divisor,f,c
  3630  001924  2E05               	decfsz	___awdiv@counter,f,c
  3631  001926  D7EC               	goto	l1981
  3632  001928  D000               	goto	l1993
  3633  00192A                     l1993:
  3634  00192A  5006               	movf	___awdiv@sign,w,c
  3635  00192C  B4D8               	btfsc	status,2,c
  3636  00192E  D005               	goto	l1997
  3637  001930  6C07               	negf	___awdiv@quotient,c
  3638  001932  1E08               	comf	___awdiv@quotient+1,f,c
  3639  001934  B0D8               	btfsc	status,0,c
  3640  001936  2A08               	incf	___awdiv@quotient+1,f,c
  3641  001938  D000               	goto	l1997
  3642  00193A                     l1997:
  3643  00193A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3644  00193E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3645  001942  0012               	return	
  3646  001944  0012               	return		;funcret
  3647  001946                     __end_of___awdiv:
  3648                           	opt stack 0
  3649                           tblptru	equ	0xFF8
  3650                           tblptrh	equ	0xFF7
  3651                           tblptrl	equ	0xFF6
  3652                           tablat	equ	0xFF5
  3653                           prodh	equ	0xFF4
  3654                           prodl	equ	0xFF3
  3655                           indf0	equ	0xFEF
  3656                           postinc0	equ	0xFEE
  3657                           fsr0h	equ	0xFEA
  3658                           fsr0l	equ	0xFE9
  3659                           wreg	equ	0xFE8
  3660                           postdec1	equ	0xFE5
  3661                           fsr1l	equ	0xFE1
  3662                           indf2	equ	0xFDF
  3663                           postinc2	equ	0xFDE
  3664                           postdec2	equ	0xFDD
  3665                           fsr2h	equ	0xFDA
  3666                           fsr2l	equ	0xFD9
  3667                           status	equ	0xFD8
  3668                           
  3669 ;; *************** function _RtccWriteTime *****************
  3670 ;; Defined at:
  3671 ;;		line 34 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  pTm             2    0[COMRAM] PTR const struct .
  3674 ;;		 -> RtccTime(4), 
  3675 ;;  di              1    2[COMRAM] enum E7121
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  tempHourWDay    2    9[COMRAM] struct .
  3678 ;;  tempMinSec      2    7[COMRAM] struct .
  3679 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3680 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3681 ;;  wasOn           1    4[COMRAM] enum E7121
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      enum E7337
  3684 ;; Registers used:
  3685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3691 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3692 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3694 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3695 ;;Total ram usage:       11 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    1
  3698 ;; This function calls:
  3699 ;;		_RtccWrOn
  3700 ;; This function is called by:
  3701 ;;		_Write_RTC
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text21
  3706  00142E                     __ptext21:
  3707                           	opt stack 0
  3708  00142E                     _RtccWriteTime:
  3709                           	opt stack 27
  3710                           
  3711                           ;incstack = 0
  3712  00142E  0E00               	movlw	0
  3713  001430  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3714  001432  EE20 F002          	lfsr	2,2
  3715  001436  5001               	movf	RtccWriteTime@pTm,w,c
  3716  001438  26D9               	addwf	fsr2l,f,c
  3717  00143A  5002               	movf	RtccWriteTime@pTm+1,w,c
  3718  00143C  22DA               	addwfc	fsr2h,f,c
  3719  00143E  0E5A               	movlw	90
  3720  001440  60DF               	cpfslt	indf2,c
  3721  001442  0012               	return	
  3722  001444  EE20 F001          	lfsr	2,1
  3723  001448  5001               	movf	RtccWriteTime@pTm,w,c
  3724  00144A  26D9               	addwf	fsr2l,f,c
  3725  00144C  5002               	movf	RtccWriteTime@pTm+1,w,c
  3726  00144E  22DA               	addwfc	fsr2h,f,c
  3727  001450  0E5A               	movlw	90
  3728  001452  60DF               	cpfslt	indf2,c
  3729  001454  0012               	return	
  3730  001456  EE20 F003          	lfsr	2,3
  3731  00145A  5001               	movf	RtccWriteTime@pTm,w,c
  3732  00145C  26D9               	addwf	fsr2l,f,c
  3733  00145E  5002               	movf	RtccWriteTime@pTm+1,w,c
  3734  001460  22DA               	addwfc	fsr2h,f,c
  3735  001462  0E24               	movlw	36
  3736  001464  64DF               	cpfsgt	indf2,c
  3737  001466  D002               	goto	l1797
  3738  001468  0012               	return	
  3739                           
  3740                           ;	Return value of _RtccWriteTime is never used
  3741  00146A  0012               	return	
  3742  00146C                     l1797:
  3743  00146C  EE20 F002          	lfsr	2,2
  3744  001470  5001               	movf	RtccWriteTime@pTm,w,c
  3745  001472  26D9               	addwf	fsr2l,f,c
  3746  001474  5002               	movf	RtccWriteTime@pTm+1,w,c
  3747  001476  22DA               	addwfc	fsr2h,f,c
  3748  001478  50DF               	movf	indf2,w,c
  3749  00147A  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3750  00147C  EE20 F001          	lfsr	2,1
  3751  001480  5001               	movf	RtccWriteTime@pTm,w,c
  3752  001482  26D9               	addwf	fsr2l,f,c
  3753  001484  5002               	movf	RtccWriteTime@pTm+1,w,c
  3754  001486  22DA               	addwfc	fsr2h,f,c
  3755  001488  50DF               	movf	indf2,w,c
  3756  00148A  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3757  00148C  5003               	movf	RtccWriteTime@di,w,c
  3758  00148E  B4D8               	btfsc	status,2,c
  3759  001490  D002               	goto	l1803
  3760  001492  9CF2               	bcf	intcon,6,c	;volatile
  3761  001494  D000               	goto	l1803
  3762  001496                     l1803:
  3763  001496  0E00               	movlw	0
  3764  001498  BB3F               	btfsc	63,5,b	;volatile
  3765  00149A  0E01               	movlw	1
  3766  00149C  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3767  00149E  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3768  0014A0  A4D8               	btfss	status,2,c
  3769  0014A2  D003               	goto	l1807
  3770  0014A4  ECF2  F00E         	call	_RtccWrOn	;wreg free
  3771  0014A8  D000               	goto	l1807
  3772  0014AA                     l1807:
  3773  0014AA  0E00               	movlw	0
  3774  0014AC  BF3F               	btfsc	63,7,b	;volatile
  3775  0014AE  0E01               	movlw	1
  3776  0014B0  6E05               	movwf	RtccWriteTime@wasOn,c
  3777  0014B2  5005               	movf	RtccWriteTime@wasOn,w,c
  3778  0014B4  B4D8               	btfsc	status,2,c
  3779  0014B6  D007               	goto	l1813
  3780  0014B8  0E00               	movlw	0
  3781  0014BA  BE91               	btfsc	3985,7,c	;volatile
  3782  0014BC  0E01               	movlw	1
  3783  0014BE  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3784  0014C0  010F               	movlb	15	; () banked
  3785  0014C2  9F3F               	bcf	63,7,b	;volatile
  3786  0014C4  D000               	goto	l1813
  3787  0014C6                     l1813:
  3788  0014C6  0EFC               	movlw	252
  3789  0014C8  010F               	movlb	15	; () banked
  3790  0014CA  173F               	andwf	63,f,b	;volatile
  3791  0014CC  010F               	movlb	15	; () banked
  3792  0014CE  813F               	bsf	63,0,b	;volatile
  3793                           
  3794                           ; BSR set to: 15
  3795  0014D0  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3796                           
  3797                           ; BSR set to: 15
  3798  0014D4  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3799                           
  3800                           ; BSR set to: 15
  3801  0014D8  EE20 F003          	lfsr	2,3
  3802  0014DC  5001               	movf	RtccWriteTime@pTm,w,c
  3803  0014DE  26D9               	addwf	fsr2l,f,c
  3804  0014E0  5002               	movf	RtccWriteTime@pTm+1,w,c
  3805  0014E2  22DA               	addwfc	fsr2h,f,c
  3806  0014E4  50DF               	movf	indf2,w,c
  3807  0014E6  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3808                           
  3809                           ; BSR set to: 15
  3810  0014E8  0EFC               	movlw	252
  3811  0014EA  010F               	movlb	15	; () banked
  3812  0014EC  173F               	andwf	63,f,b	;volatile
  3813                           
  3814                           ; BSR set to: 15
  3815  0014EE  010F               	movlb	15	; () banked
  3816  0014F0  813F               	bsf	63,0,b	;volatile
  3817                           
  3818                           ; BSR set to: 15
  3819  0014F2  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3820                           
  3821                           ; BSR set to: 15
  3822  0014F6  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3823                           
  3824                           ; BSR set to: 15
  3825  0014FA  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3826                           
  3827                           ; BSR set to: 15
  3828  0014FE  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3829                           
  3830                           ; BSR set to: 15
  3831  001502  5005               	movf	RtccWriteTime@wasOn,w,c
  3832  001504  B4D8               	btfsc	status,2,c
  3833  001506  D00D               	goto	l1845
  3834                           
  3835                           ; BSR set to: 15
  3836  001508  010F               	movlb	15	; () banked
  3837  00150A  8F3F               	bsf	63,7,b	;volatile
  3838                           
  3839                           ; BSR set to: 15
  3840  00150C  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3841  00150E  B4D8               	btfsc	status,2,c
  3842  001510  D002               	goto	l1841
  3843                           
  3844                           ; BSR set to: 15
  3845  001512  8E91               	bsf	3985,7,c	;volatile
  3846  001514  D000               	goto	l1841
  3847  001516                     l1841:
  3848                           
  3849                           ; BSR set to: 15
  3850  001516  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3851  001518  B4D8               	btfsc	status,2,c
  3852  00151A  D009               	goto	l1849
  3853                           
  3854                           ; BSR set to: 15
  3855  00151C  ECF2  F00E         	call	_RtccWrOn	;wreg free
  3856  001520  D006               	goto	l1849
  3857  001522                     l1845:
  3858  001522  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3859  001524  A4D8               	btfss	status,2,c
  3860  001526  D003               	goto	l1849
  3861  001528  010F               	movlb	15	; () banked
  3862  00152A  9B3F               	bcf	63,5,b	;volatile
  3863                           
  3864                           ; BSR set to: 15
  3865  00152C  D000               	goto	l1849
  3866  00152E                     l1849:
  3867  00152E  5003               	movf	RtccWriteTime@di,w,c
  3868  001530  B4D8               	btfsc	status,2,c
  3869  001532  0012               	return	
  3870  001534  8CF2               	bsf	intcon,6,c	;volatile
  3871  001536  0012               	return	
  3872                           
  3873                           ;	Return value of _RtccWriteTime is never used
  3874  001538  0012               	return		;funcret
  3875  00153A                     __end_of_RtccWriteTime:
  3876                           	opt stack 0
  3877                           tblptru	equ	0xFF8
  3878                           tblptrh	equ	0xFF7
  3879                           tblptrl	equ	0xFF6
  3880                           tablat	equ	0xFF5
  3881                           prodh	equ	0xFF4
  3882                           prodl	equ	0xFF3
  3883                           intcon	equ	0xFF2
  3884                           indf0	equ	0xFEF
  3885                           postinc0	equ	0xFEE
  3886                           fsr0h	equ	0xFEA
  3887                           fsr0l	equ	0xFE9
  3888                           wreg	equ	0xFE8
  3889                           postdec1	equ	0xFE5
  3890                           fsr1l	equ	0xFE1
  3891                           indf2	equ	0xFDF
  3892                           postinc2	equ	0xFDE
  3893                           postdec2	equ	0xFDD
  3894                           fsr2h	equ	0xFDA
  3895                           fsr2l	equ	0xFD9
  3896                           status	equ	0xFD8
  3897                           
  3898 ;; *************** function _RtccWriteDate *****************
  3899 ;; Defined at:
  3900 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  pDt             2    0[COMRAM] PTR const struct .
  3903 ;;		 -> RtccDate(4), 
  3904 ;;  di              1    2[COMRAM] enum E7121
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  tempHourWDay    2   11[COMRAM] struct .
  3907 ;;  tempDayMonth    2    9[COMRAM] struct .
  3908 ;;  tempYear        2    6[COMRAM] struct .
  3909 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3910 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3911 ;;  wasOn           1    4[COMRAM] enum E7121
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      enum E7337
  3914 ;; Registers used:
  3915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3921 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3922 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;Total ram usage:       13 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    1
  3928 ;; This function calls:
  3929 ;;		_RtccWrOn
  3930 ;; This function is called by:
  3931 ;;		_Write_RTC
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text22
  3936  0012E8                     __ptext22:
  3937                           	opt stack 0
  3938  0012E8                     _RtccWriteDate:
  3939                           	opt stack 27
  3940                           
  3941                           ;incstack = 0
  3942  0012E8  0E00               	movlw	0
  3943  0012EA  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3944  0012EC  EE20 F002          	lfsr	2,2
  3945  0012F0  5001               	movf	RtccWriteDate@pDt,w,c
  3946  0012F2  26D9               	addwf	fsr2l,f,c
  3947  0012F4  5002               	movf	RtccWriteDate@pDt+1,w,c
  3948  0012F6  22DA               	addwfc	fsr2h,f,c
  3949  0012F8  0E13               	movlw	19
  3950  0012FA  60DF               	cpfslt	indf2,c
  3951  0012FC  0012               	return	
  3952  0012FE  EE20 F002          	lfsr	2,2
  3953  001302  5001               	movf	RtccWriteDate@pDt,w,c
  3954  001304  26D9               	addwf	fsr2l,f,c
  3955  001306  5002               	movf	RtccWriteDate@pDt+1,w,c
  3956  001308  22DA               	addwfc	fsr2h,f,c
  3957  00130A  50DF               	movf	indf2,w,c
  3958  00130C  B4D8               	btfsc	status,2,c
  3959  00130E  0012               	return	
  3960  001310  EE20 F001          	lfsr	2,1
  3961  001314  5001               	movf	RtccWriteDate@pDt,w,c
  3962  001316  26D9               	addwf	fsr2l,f,c
  3963  001318  5002               	movf	RtccWriteDate@pDt+1,w,c
  3964  00131A  22DA               	addwfc	fsr2h,f,c
  3965  00131C  0E32               	movlw	50
  3966  00131E  60DF               	cpfslt	indf2,c
  3967  001320  0012               	return	
  3968  001322  EE20 F001          	lfsr	2,1
  3969  001326  5001               	movf	RtccWriteDate@pDt,w,c
  3970  001328  26D9               	addwf	fsr2l,f,c
  3971  00132A  5002               	movf	RtccWriteDate@pDt+1,w,c
  3972  00132C  22DA               	addwfc	fsr2h,f,c
  3973  00132E  50DF               	movf	indf2,w,c
  3974  001330  B4D8               	btfsc	status,2,c
  3975  001332  0012               	return	
  3976  001334  EE20 F003          	lfsr	2,3
  3977  001338  5001               	movf	RtccWriteDate@pDt,w,c
  3978  00133A  26D9               	addwf	fsr2l,f,c
  3979  00133C  5002               	movf	RtccWriteDate@pDt+1,w,c
  3980  00133E  22DA               	addwfc	fsr2h,f,c
  3981  001340  0E99               	movlw	153
  3982  001342  64DF               	cpfsgt	indf2,c
  3983  001344  D002               	goto	l1865
  3984  001346  0012               	return	
  3985                           
  3986                           ;	Return value of _RtccWriteDate is never used
  3987  001348  0012               	return	
  3988  00134A                     l1865:
  3989  00134A  EE20 F003          	lfsr	2,3
  3990  00134E  5001               	movf	RtccWriteDate@pDt,w,c
  3991  001350  26D9               	addwf	fsr2l,f,c
  3992  001352  5002               	movf	RtccWriteDate@pDt+1,w,c
  3993  001354  22DA               	addwfc	fsr2h,f,c
  3994  001356  50DF               	movf	indf2,w,c
  3995  001358  6E07               	movwf	RtccWriteDate@tempYear,c
  3996  00135A  EE20 F001          	lfsr	2,1
  3997  00135E  5001               	movf	RtccWriteDate@pDt,w,c
  3998  001360  26D9               	addwf	fsr2l,f,c
  3999  001362  5002               	movf	RtccWriteDate@pDt+1,w,c
  4000  001364  22DA               	addwfc	fsr2h,f,c
  4001  001366  50DF               	movf	indf2,w,c
  4002  001368  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  4003  00136A  EE20 F002          	lfsr	2,2
  4004  00136E  5001               	movf	RtccWriteDate@pDt,w,c
  4005  001370  26D9               	addwf	fsr2l,f,c
  4006  001372  5002               	movf	RtccWriteDate@pDt+1,w,c
  4007  001374  22DA               	addwfc	fsr2h,f,c
  4008  001376  50DF               	movf	indf2,w,c
  4009  001378  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  4010  00137A  5003               	movf	RtccWriteDate@di,w,c
  4011  00137C  B4D8               	btfsc	status,2,c
  4012  00137E  D002               	goto	l1871
  4013  001380  9CF2               	bcf	intcon,6,c	;volatile
  4014  001382  D000               	goto	l1871
  4015  001384                     l1871:
  4016  001384  0E00               	movlw	0
  4017  001386  BB3F               	btfsc	63,5,b	;volatile
  4018  001388  0E01               	movlw	1
  4019  00138A  6E09               	movwf	RtccWriteDate@wasWrEn,c
  4020  00138C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4021  00138E  A4D8               	btfss	status,2,c
  4022  001390  D003               	goto	l1875
  4023  001392  ECF2  F00E         	call	_RtccWrOn	;wreg free
  4024  001396  D000               	goto	l1875
  4025  001398                     l1875:
  4026  001398  0E00               	movlw	0
  4027  00139A  BF3F               	btfsc	63,7,b	;volatile
  4028  00139C  0E01               	movlw	1
  4029  00139E  6E05               	movwf	RtccWriteDate@wasOn,c
  4030  0013A0  5005               	movf	RtccWriteDate@wasOn,w,c
  4031  0013A2  B4D8               	btfsc	status,2,c
  4032  0013A4  D007               	goto	l1881
  4033  0013A6  0E00               	movlw	0
  4034  0013A8  BE91               	btfsc	3985,7,c	;volatile
  4035  0013AA  0E01               	movlw	1
  4036  0013AC  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4037  0013AE  010F               	movlb	15	; () banked
  4038  0013B0  9F3F               	bcf	63,7,b	;volatile
  4039  0013B2  D000               	goto	l1881
  4040  0013B4                     l1881:
  4041  0013B4  0EFC               	movlw	252
  4042  0013B6  010F               	movlb	15	; () banked
  4043  0013B8  173F               	andwf	63,f,b	;volatile
  4044  0013BA  010F               	movlb	15	; () banked
  4045  0013BC  813F               	bsf	63,0,b	;volatile
  4046                           
  4047                           ; BSR set to: 15
  4048  0013BE  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  4049                           
  4050                           ; BSR set to: 15
  4051  0013C2  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  4052                           
  4053                           ; BSR set to: 15
  4054  0013C6  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  4055  0013CA  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  4056  0013CE  50DF               	movf	indf2,w,c
  4057  0013D0  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  4058                           
  4059                           ; BSR set to: 15
  4060  0013D2  0EFC               	movlw	252
  4061  0013D4  010F               	movlb	15	; () banked
  4062  0013D6  173F               	andwf	63,f,b	;volatile
  4063                           
  4064                           ; BSR set to: 15
  4065  0013D8  0E03               	movlw	3
  4066  0013DA  010F               	movlb	15	; () banked
  4067  0013DC  133F               	iorwf	63,f,b	;volatile
  4068                           
  4069                           ; BSR set to: 15
  4070  0013DE  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  4071                           
  4072                           ; BSR set to: 15
  4073  0013E2  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  4074                           
  4075                           ; BSR set to: 15
  4076  0013E6  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  4077                           
  4078                           ; BSR set to: 15
  4079  0013EA  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  4080                           
  4081                           ; BSR set to: 15
  4082  0013EE  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  4083                           
  4084                           ; BSR set to: 15
  4085  0013F2  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  4086                           
  4087                           ; BSR set to: 15
  4088  0013F6  5005               	movf	RtccWriteDate@wasOn,w,c
  4089  0013F8  B4D8               	btfsc	status,2,c
  4090  0013FA  D00D               	goto	l1917
  4091                           
  4092                           ; BSR set to: 15
  4093  0013FC  010F               	movlb	15	; () banked
  4094  0013FE  8F3F               	bsf	63,7,b	;volatile
  4095                           
  4096                           ; BSR set to: 15
  4097  001400  5006               	movf	RtccWriteDate@wasAlrm,w,c
  4098  001402  B4D8               	btfsc	status,2,c
  4099  001404  D002               	goto	l1913
  4100                           
  4101                           ; BSR set to: 15
  4102  001406  8E91               	bsf	3985,7,c	;volatile
  4103  001408  D000               	goto	l1913
  4104  00140A                     l1913:
  4105                           
  4106                           ; BSR set to: 15
  4107  00140A  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4108  00140C  B4D8               	btfsc	status,2,c
  4109  00140E  D009               	goto	l1921
  4110                           
  4111                           ; BSR set to: 15
  4112  001410  ECF2  F00E         	call	_RtccWrOn	;wreg free
  4113  001414  D006               	goto	l1921
  4114  001416                     l1917:
  4115  001416  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4116  001418  A4D8               	btfss	status,2,c
  4117  00141A  D003               	goto	l1921
  4118  00141C  010F               	movlb	15	; () banked
  4119  00141E  9B3F               	bcf	63,5,b	;volatile
  4120                           
  4121                           ; BSR set to: 15
  4122  001420  D000               	goto	l1921
  4123  001422                     l1921:
  4124  001422  5003               	movf	RtccWriteDate@di,w,c
  4125  001424  B4D8               	btfsc	status,2,c
  4126  001426  0012               	return	
  4127  001428  9CF2               	bcf	intcon,6,c	;volatile
  4128  00142A  0012               	return	
  4129                           
  4130                           ;	Return value of _RtccWriteDate is never used
  4131  00142C  0012               	return		;funcret
  4132  00142E                     __end_of_RtccWriteDate:
  4133                           	opt stack 0
  4134                           tblptru	equ	0xFF8
  4135                           tblptrh	equ	0xFF7
  4136                           tblptrl	equ	0xFF6
  4137                           tablat	equ	0xFF5
  4138                           prodh	equ	0xFF4
  4139                           prodl	equ	0xFF3
  4140                           intcon	equ	0xFF2
  4141                           indf0	equ	0xFEF
  4142                           postinc0	equ	0xFEE
  4143                           fsr0h	equ	0xFEA
  4144                           fsr0l	equ	0xFE9
  4145                           wreg	equ	0xFE8
  4146                           postdec1	equ	0xFE5
  4147                           fsr1l	equ	0xFE1
  4148                           indf2	equ	0xFDF
  4149                           postinc2	equ	0xFDE
  4150                           postdec2	equ	0xFDD
  4151                           fsr2h	equ	0xFDA
  4152                           fsr2l	equ	0xFD9
  4153                           status	equ	0xFD8
  4154                           
  4155 ;; *************** function _RtccWrOn *****************
  4156 ;; Defined at:
  4157 ;;		line 21 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  data            2    0        unsigned int 
  4162 ;; Return value:  Size  Location     Type
  4163 ;;		None               void
  4164 ;; Registers used:
  4165 ;;		wreg, status,2
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_Write_RTC
  4181 ;;		_RtccWriteDate
  4182 ;;		_RtccWriteTime
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text23
  4187  001DE4                     __ptext23:
  4188                           	opt stack 0
  4189  001DE4                     _RtccWrOn:
  4190                           	opt stack 27
  4191                           
  4192                           ;incstack = 0
  4193  001DE4  9CF2               	bcf	intcon,6,c	;volatile
  4194  001DE6  0E55               	movlw	85
  4195  001DE8  6EA7               	movwf	4007,c	;volatile
  4196  001DEA  0EAA               	movlw	170
  4197  001DEC  6EA7               	movwf	4007,c	;volatile
  4198  001DEE  010F               	movlb	15	; () banked
  4199  001DF0  8B3F               	bsf	63,5,b	;volatile
  4200                           
  4201                           ; BSR set to: 15
  4202  001DF2  8CF2               	bsf	intcon,6,c	;volatile
  4203                           
  4204                           ; BSR set to: 15
  4205  001DF4  0012               	return		;funcret
  4206  001DF6                     __end_of_RtccWrOn:
  4207                           	opt stack 0
  4208                           tblptru	equ	0xFF8
  4209                           tblptrh	equ	0xFF7
  4210                           tblptrl	equ	0xFF6
  4211                           tablat	equ	0xFF5
  4212                           prodh	equ	0xFF4
  4213                           prodl	equ	0xFF3
  4214                           intcon	equ	0xFF2
  4215                           indf0	equ	0xFEF
  4216                           postinc0	equ	0xFEE
  4217                           fsr0h	equ	0xFEA
  4218                           fsr0l	equ	0xFE9
  4219                           wreg	equ	0xFE8
  4220                           postdec1	equ	0xFE5
  4221                           fsr1l	equ	0xFE1
  4222                           indf2	equ	0xFDF
  4223                           postinc2	equ	0xFDE
  4224                           postdec2	equ	0xFDD
  4225                           fsr2h	equ	0xFDA
  4226                           fsr2l	equ	0xFD9
  4227                           status	equ	0xFD8
  4228                           
  4229 ;; *************** function _Read_RTC *****************
  4230 ;; Defined at:
  4231 ;;		line 111 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;		None               void
  4238 ;; Registers used:
  4239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    1
  4252 ;; This function calls:
  4253 ;;		_RtccReadDate
  4254 ;;		_RtccReadTime
  4255 ;; This function is called by:
  4256 ;;		_main
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text24
  4261  001720                     __ptext24:
  4262                           	opt stack 0
  4263  001720                     _Read_RTC:
  4264                           	opt stack 29
  4265                           
  4266                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  4267                           
  4268                           ; BSR set to: 15
  4269                           ;incstack = 0
  4270  001720  0E3D               	movlw	low _RtccTime
  4271  001722  6E01               	movwf	RtccReadTime@pTm,c
  4272  001724  0E00               	movlw	high _RtccTime
  4273  001726  6E02               	movwf	RtccReadTime@pTm+1,c
  4274  001728  EC65  F00D         	call	_RtccReadTime	;wreg free
  4275                           
  4276                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  4277  00172C  503E               	movf	_RtccTime+1,w,c
  4278  00172E  0B0F               	andlw	15
  4279  001730  6E4D               	movwf	_segundo_u,c
  4280                           
  4281                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  4282  001732  383E               	swapf	_RtccTime+1,w,c
  4283  001734  0B0F               	andlw	15
  4284  001736  0B0F               	andlw	15
  4285  001738  6E4C               	movwf	_segundo_d,c
  4286                           
  4287                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  4288  00173A  503F               	movf	_RtccTime+2,w,c
  4289  00173C  0B0F               	andlw	15
  4290  00173E  6E4B               	movwf	_minuto_u,c
  4291                           
  4292                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  4293  001740  383F               	swapf	_RtccTime+2,w,c
  4294  001742  0B0F               	andlw	15
  4295  001744  0B0F               	andlw	15
  4296  001746  6E4A               	movwf	_minuto_d,c
  4297                           
  4298                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  4299  001748  5040               	movf	_RtccTime+3,w,c
  4300  00174A  0B0F               	andlw	15
  4301  00174C  6E47               	movwf	_hora_u,c
  4302                           
  4303                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  4304  00174E  3840               	swapf	_RtccTime+3,w,c
  4305  001750  0B0F               	andlw	15
  4306  001752  0B0F               	andlw	15
  4307  001754  6E46               	movwf	_hora_d,c
  4308                           
  4309                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  4310  001756  0E39               	movlw	low _RtccDate
  4311  001758  6E01               	movwf	RtccReadDate@pDt,c
  4312  00175A  0E00               	movlw	high _RtccDate
  4313  00175C  6E02               	movwf	RtccReadDate@pDt+1,c
  4314  00175E  ECA3  F00C         	call	_RtccReadDate	;wreg free
  4315                           
  4316                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  4317  001762  503A               	movf	_RtccDate+1,w,c
  4318  001764  0B0F               	andlw	15
  4319  001766  6E45               	movwf	_fecha_u,c
  4320                           
  4321                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  4322  001768  383A               	swapf	_RtccDate+1,w,c
  4323  00176A  0B0F               	andlw	15
  4324  00176C  0B0F               	andlw	15
  4325  00176E  6E44               	movwf	_fecha_d,c
  4326                           
  4327                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  4328  001770  503B               	movf	_RtccDate+2,w,c
  4329  001772  0B0F               	andlw	15
  4330  001774  6E49               	movwf	_mes_u,c
  4331                           
  4332                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  4333  001776  383B               	swapf	_RtccDate+2,w,c
  4334  001778  0B0F               	andlw	15
  4335  00177A  0B0F               	andlw	15
  4336  00177C  6E48               	movwf	_mes_d,c
  4337                           
  4338                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  4339  00177E  C039  F043         	movff	_RtccDate,_dia_semana
  4340                           
  4341                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  4342  001782  503C               	movf	_RtccDate+3,w,c
  4343  001784  0B0F               	andlw	15
  4344  001786  6E42               	movwf	_anio_u,c
  4345                           
  4346                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  4347  001788  383C               	swapf	_RtccDate+3,w,c
  4348  00178A  0B0F               	andlw	15
  4349  00178C  0B0F               	andlw	15
  4350  00178E  6E41               	movwf	_anio_d,c
  4351                           
  4352                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  4353  001790  504C               	movf	_segundo_d,w,c
  4354  001792  0D0A               	mullw	10
  4355  001794  504D               	movf	_segundo_u,w,c
  4356  001796  24F3               	addwf	prodl,w,c
  4357  001798  6E37               	movwf	_segundo,c
  4358  00179A  0E00               	movlw	0
  4359  00179C  20F4               	addwfc	prodh,w,c
  4360  00179E  6E38               	movwf	_segundo+1,c
  4361                           
  4362                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  4363  0017A0  504A               	movf	_minuto_d,w,c
  4364  0017A2  0D0A               	mullw	10
  4365  0017A4  504B               	movf	_minuto_u,w,c
  4366  0017A6  24F3               	addwf	prodl,w,c
  4367  0017A8  6E58               	movwf	_minuto,c
  4368  0017AA  0E00               	movlw	0
  4369  0017AC  20F4               	addwfc	prodh,w,c
  4370  0017AE  6E59               	movwf	_minuto+1,c
  4371                           
  4372                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  4373  0017B0  5046               	movf	_hora_d,w,c
  4374  0017B2  0D0A               	mullw	10
  4375  0017B4  5047               	movf	_hora_u,w,c
  4376  0017B6  24F3               	addwf	prodl,w,c
  4377  0017B8  6E54               	movwf	_hora,c
  4378  0017BA  0E00               	movlw	0
  4379  0017BC  20F4               	addwfc	prodh,w,c
  4380  0017BE  6E55               	movwf	_hora+1,c
  4381                           
  4382                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  4383  0017C0  5044               	movf	_fecha_d,w,c
  4384  0017C2  0D0A               	mullw	10
  4385  0017C4  5045               	movf	_fecha_u,w,c
  4386  0017C6  24F3               	addwf	prodl,w,c
  4387  0017C8  6E50               	movwf	_dia,c
  4388  0017CA  0E00               	movlw	0
  4389  0017CC  20F4               	addwfc	prodh,w,c
  4390  0017CE  6E51               	movwf	_dia+1,c
  4391                           
  4392                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  4393  0017D0  C043  F052         	movff	_dia_semana,_diasem
  4394  0017D4  6A53               	clrf	_diasem+1,c
  4395                           
  4396                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  4397  0017D6  5048               	movf	_mes_d,w,c
  4398  0017D8  0D0A               	mullw	10
  4399  0017DA  5049               	movf	_mes_u,w,c
  4400  0017DC  24F3               	addwf	prodl,w,c
  4401  0017DE  6E56               	movwf	_mes,c
  4402  0017E0  0E00               	movlw	0
  4403  0017E2  20F4               	addwfc	prodh,w,c
  4404  0017E4  6E57               	movwf	_mes+1,c
  4405                           
  4406                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  4407  0017E6  5041               	movf	_anio_d,w,c
  4408  0017E8  0D0A               	mullw	10
  4409  0017EA  5042               	movf	_anio_u,w,c
  4410  0017EC  24F3               	addwf	prodl,w,c
  4411  0017EE  6E4E               	movwf	_anio,c
  4412  0017F0  0E00               	movlw	0
  4413  0017F2  20F4               	addwfc	prodh,w,c
  4414  0017F4  6E4F               	movwf	_anio+1,c
  4415  0017F6  0012               	return		;funcret
  4416  0017F8                     __end_of_Read_RTC:
  4417                           	opt stack 0
  4418                           tblptru	equ	0xFF8
  4419                           tblptrh	equ	0xFF7
  4420                           tblptrl	equ	0xFF6
  4421                           tablat	equ	0xFF5
  4422                           prodh	equ	0xFF4
  4423                           prodl	equ	0xFF3
  4424                           intcon	equ	0xFF2
  4425                           indf0	equ	0xFEF
  4426                           postinc0	equ	0xFEE
  4427                           fsr0h	equ	0xFEA
  4428                           fsr0l	equ	0xFE9
  4429                           wreg	equ	0xFE8
  4430                           postdec1	equ	0xFE5
  4431                           fsr1l	equ	0xFE1
  4432                           indf2	equ	0xFDF
  4433                           postinc2	equ	0xFDE
  4434                           postdec2	equ	0xFDD
  4435                           fsr2h	equ	0xFDA
  4436                           fsr2l	equ	0xFD9
  4437                           status	equ	0xFD8
  4438                           
  4439 ;; *************** function _RtccReadTime *****************
  4440 ;; Defined at:
  4441 ;;		line 23 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  pTm             2    0[COMRAM] PTR struct .
  4444 ;;		 -> RtccTime(4), 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  rTD0            8   10[COMRAM] struct .
  4447 ;;  rTD1            8    2[COMRAM] struct .
  4448 ;; Return value:  Size  Location     Type
  4449 ;;		None               void
  4450 ;; Registers used:
  4451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4458 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4460 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4461 ;;Total ram usage:       18 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_Read_RTC
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text25
  4471  001ACA                     __ptext25:
  4472                           	opt stack 0
  4473  001ACA                     _RtccReadTime:
  4474                           	opt stack 29
  4475  001ACA  0EFC               	movlw	252
  4476  001ACC  010F               	movlb	15	; () banked
  4477  001ACE  173F               	andwf	63,f,b	;volatile
  4478                           
  4479                           ; BSR set to: 15
  4480  001AD0  010F               	movlb	15	; () banked
  4481  001AD2  813F               	bsf	63,0,b	;volatile
  4482                           
  4483                           ; BSR set to: 15
  4484  001AD4  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  4485                           
  4486                           ; BSR set to: 15
  4487  001AD8  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  4488                           
  4489                           ; BSR set to: 15
  4490  001ADC  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  4491                           
  4492                           ; BSR set to: 15
  4493  001AE0  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  4494                           
  4495                           ; BSR set to: 15
  4496  001AE4  0EFC               	movlw	252
  4497  001AE6  010F               	movlb	15	; () banked
  4498  001AE8  173F               	andwf	63,f,b	;volatile
  4499  001AEA  010F               	movlb	15	; () banked
  4500  001AEC  813F               	bsf	63,0,b	;volatile
  4501                           
  4502                           ; BSR set to: 15
  4503  001AEE  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  4504                           
  4505                           ; BSR set to: 15
  4506  001AF2  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  4507                           
  4508                           ; BSR set to: 15
  4509  001AF6  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  4510                           
  4511                           ; BSR set to: 15
  4512  001AFA  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  4513                           
  4514                           ; BSR set to: 15
  4515  001AFE  5009               	movf	RtccReadTime@rTD1+6,w,c
  4516  001B00  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  4517  001B02  A4D8               	btfss	status,2,c
  4518  001B04  D7E2               	goto	l2089
  4519                           
  4520                           ; BSR set to: 15
  4521                           
  4522                           ; BSR set to: 15
  4523  001B06  EE20 F003          	lfsr	2,3
  4524  001B0A  5001               	movf	RtccReadTime@pTm,w,c
  4525  001B0C  26D9               	addwf	fsr2l,f,c
  4526  001B0E  5002               	movf	RtccReadTime@pTm+1,w,c
  4527  001B10  22DA               	addwfc	fsr2h,f,c
  4528  001B12  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  4529  001B16  EE20 F002          	lfsr	2,2
  4530  001B1A  5001               	movf	RtccReadTime@pTm,w,c
  4531  001B1C  26D9               	addwf	fsr2l,f,c
  4532  001B1E  5002               	movf	RtccReadTime@pTm+1,w,c
  4533  001B20  22DA               	addwfc	fsr2h,f,c
  4534  001B22  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  4535  001B26  EE20 F001          	lfsr	2,1
  4536  001B2A  5001               	movf	RtccReadTime@pTm,w,c
  4537  001B2C  26D9               	addwf	fsr2l,f,c
  4538  001B2E  5002               	movf	RtccReadTime@pTm+1,w,c
  4539  001B30  22DA               	addwfc	fsr2h,f,c
  4540  001B32  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  4541                           
  4542                           ; BSR set to: 15
  4543  001B36  0012               	return		;funcret
  4544  001B38                     __end_of_RtccReadTime:
  4545                           	opt stack 0
  4546                           tblptru	equ	0xFF8
  4547                           tblptrh	equ	0xFF7
  4548                           tblptrl	equ	0xFF6
  4549                           tablat	equ	0xFF5
  4550                           prodh	equ	0xFF4
  4551                           prodl	equ	0xFF3
  4552                           intcon	equ	0xFF2
  4553                           indf0	equ	0xFEF
  4554                           postinc0	equ	0xFEE
  4555                           fsr0h	equ	0xFEA
  4556                           fsr0l	equ	0xFE9
  4557                           wreg	equ	0xFE8
  4558                           postdec1	equ	0xFE5
  4559                           fsr1l	equ	0xFE1
  4560                           indf2	equ	0xFDF
  4561                           postinc2	equ	0xFDE
  4562                           postdec2	equ	0xFDD
  4563                           fsr2h	equ	0xFDA
  4564                           fsr2l	equ	0xFD9
  4565                           status	equ	0xFD8
  4566                           
  4567 ;; *************** function _RtccReadDate *****************
  4568 ;; Defined at:
  4569 ;;		line 23 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  pDt             2    0[COMRAM] PTR struct .
  4572 ;;		 -> RtccDate(4), 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  rTD0            8   10[COMRAM] struct .
  4575 ;;  rTD1            8    2[COMRAM] struct .
  4576 ;; Return value:  Size  Location     Type
  4577 ;;		None               void
  4578 ;; Registers used:
  4579 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4588 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4589 ;;Total ram usage:       18 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_Read_RTC
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text26
  4599  001946                     __ptext26:
  4600                           	opt stack 0
  4601  001946                     _RtccReadDate:
  4602                           	opt stack 29
  4603  001946  0EFC               	movlw	252
  4604  001948  010F               	movlb	15	; () banked
  4605  00194A  173F               	andwf	63,f,b	;volatile
  4606  00194C  0E03               	movlw	3
  4607  00194E  010F               	movlb	15	; () banked
  4608  001950  133F               	iorwf	63,f,b	;volatile
  4609                           
  4610                           ; BSR set to: 15
  4611  001952  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  4612                           
  4613                           ; BSR set to: 15
  4614  001956  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  4615                           
  4616                           ; BSR set to: 15
  4617  00195A  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  4618                           
  4619                           ; BSR set to: 15
  4620  00195E  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  4621                           
  4622                           ; BSR set to: 15
  4623  001962  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  4624                           
  4625                           ; BSR set to: 15
  4626  001966  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  4627  00196A  0EFC               	movlw	252
  4628  00196C  010F               	movlb	15	; () banked
  4629  00196E  173F               	andwf	63,f,b	;volatile
  4630  001970  0E03               	movlw	3
  4631  001972  010F               	movlb	15	; () banked
  4632  001974  133F               	iorwf	63,f,b	;volatile
  4633                           
  4634                           ; BSR set to: 15
  4635  001976  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  4636                           
  4637                           ; BSR set to: 15
  4638  00197A  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  4639                           
  4640                           ; BSR set to: 15
  4641  00197E  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  4642                           
  4643                           ; BSR set to: 15
  4644  001982  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  4645                           
  4646                           ; BSR set to: 15
  4647  001986  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  4648                           
  4649                           ; BSR set to: 15
  4650  00198A  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  4651  00198E  5005               	movf	RtccReadDate@rTD1+2,w,c
  4652  001990  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  4653  001992  A4D8               	btfss	status,2,c
  4654  001994  D7D8               	goto	l2115
  4655                           
  4656                           ; BSR set to: 15
  4657                           
  4658                           ; BSR set to: 15
  4659  001996  EE20 F001          	lfsr	2,1
  4660  00199A  5001               	movf	RtccReadDate@pDt,w,c
  4661  00199C  26D9               	addwf	fsr2l,f,c
  4662  00199E  5002               	movf	RtccReadDate@pDt+1,w,c
  4663  0019A0  22DA               	addwfc	fsr2h,f,c
  4664  0019A2  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  4665  0019A6  EE20 F002          	lfsr	2,2
  4666  0019AA  5001               	movf	RtccReadDate@pDt,w,c
  4667  0019AC  26D9               	addwf	fsr2l,f,c
  4668  0019AE  5002               	movf	RtccReadDate@pDt+1,w,c
  4669  0019B0  22DA               	addwfc	fsr2h,f,c
  4670  0019B2  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  4671                           
  4672                           ; BSR set to: 15
  4673  0019B6  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  4674  0019BA  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  4675  0019BE  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  4676                           
  4677                           ; BSR set to: 15
  4678  0019C2  EE20 F003          	lfsr	2,3
  4679  0019C6  5001               	movf	RtccReadDate@pDt,w,c
  4680  0019C8  26D9               	addwf	fsr2l,f,c
  4681  0019CA  5002               	movf	RtccReadDate@pDt+1,w,c
  4682  0019CC  22DA               	addwfc	fsr2h,f,c
  4683  0019CE  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  4684                           
  4685                           ; BSR set to: 15
  4686  0019D2  0012               	return		;funcret
  4687  0019D4                     __end_of_RtccReadDate:
  4688                           	opt stack 0
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           prodh	equ	0xFF4
  4694                           prodl	equ	0xFF3
  4695                           intcon	equ	0xFF2
  4696                           indf0	equ	0xFEF
  4697                           postinc0	equ	0xFEE
  4698                           fsr0h	equ	0xFEA
  4699                           fsr0l	equ	0xFE9
  4700                           wreg	equ	0xFE8
  4701                           postdec1	equ	0xFE5
  4702                           fsr1l	equ	0xFE1
  4703                           indf2	equ	0xFDF
  4704                           postinc2	equ	0xFDE
  4705                           postdec2	equ	0xFDD
  4706                           fsr2h	equ	0xFDA
  4707                           fsr2l	equ	0xFD9
  4708                           status	equ	0xFD8
  4709                           tblptru	equ	0xFF8
  4710                           tblptrh	equ	0xFF7
  4711                           tblptrl	equ	0xFF6
  4712                           tablat	equ	0xFF5
  4713                           prodh	equ	0xFF4
  4714                           prodl	equ	0xFF3
  4715                           intcon	equ	0xFF2
  4716                           indf0	equ	0xFEF
  4717                           postinc0	equ	0xFEE
  4718                           fsr0h	equ	0xFEA
  4719                           fsr0l	equ	0xFE9
  4720                           wreg	equ	0xFE8
  4721                           postdec1	equ	0xFE5
  4722                           fsr1l	equ	0xFE1
  4723                           indf2	equ	0xFDF
  4724                           postinc2	equ	0xFDE
  4725                           postdec2	equ	0xFDD
  4726                           fsr2h	equ	0xFDA
  4727                           fsr2l	equ	0xFD9
  4728                           status	equ	0xFD8
  4729                           
  4730                           	psect	rparam
  4731  0000                     tblptru	equ	0xFF8
  4732                           tblptrh	equ	0xFF7
  4733                           tblptrl	equ	0xFF6
  4734                           tablat	equ	0xFF5
  4735                           prodh	equ	0xFF4
  4736                           prodl	equ	0xFF3
  4737                           intcon	equ	0xFF2
  4738                           indf0	equ	0xFEF
  4739                           postinc0	equ	0xFEE
  4740                           fsr0h	equ	0xFEA
  4741                           fsr0l	equ	0xFE9
  4742                           wreg	equ	0xFE8
  4743                           postdec1	equ	0xFE5
  4744                           fsr1l	equ	0xFE1
  4745                           indf2	equ	0xFDF
  4746                           postinc2	equ	0xFDE
  4747                           postdec2	equ	0xFDD
  4748                           fsr2h	equ	0xFDA
  4749                           fsr2l	equ	0xFD9
  4750                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    14
    Data        12
    BSS         70
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      90
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[7]), STR_4(CODE[7]), buffer2(BANK0[20]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _lcd_setcursor_vb->_lcd_send_byte
    _caratula->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   15396
                                             35 COMRAM     3     3      0
                           _Read_RTC
                              _Setup
                           _caratula
                         _lcd_gotoxy
                   _lcd_setcursor_vb
                           _setClock
 ---------------------------------------------------------------------------------
 (1) _setClock                                             2     2      0    2299
                                             13 COMRAM     2     2      0
                          _Write_RTC
 ---------------------------------------------------------------------------------
 (1) _lcd_setcursor_vb                                     2     1      1     796
                                              4 COMRAM     2     1      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0    6005
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    22     10    1916
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    2238
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    1873
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           3     2      1    1205
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3764
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     841
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _caratula
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_setcursor_vb
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _setClock
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     26      5A       1       94.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86       6        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Aug 18 19:57:19 2016

                        _a 002B                          _b 002D                          _c 002F  
                        _i 0031                          _j 0033                          _k 0035  
           ?_lcd_send_byte 0003               ___awdiv@sign 0006        ___wmul@multiplicand 0003  
              lcd_comand@d 0005               __CFG_CP0$OFF 000000                        l274 110E  
                      l195 1D28                        l196 1D2A                        l918 1B8A  
                      l928 1C2A                        u930 1A60                        u950 1A78  
                      u970 1A92                        u948 1A62                        u990 1AAE  
                      u968 1A7A                        u988 1A94                        _dia 0050  
                      _mes 0056                        wreg 000FE8            RtccReadDate@pDt 0001  
              lcd_gotoxy@x 0006                lcd_gotoxy@y 0005                       l2011 1B60  
                     l1047 1DC2                       l2007 1B4E                       l2031 1C08  
                     l2009 1B58                       l2201 1060                       l2115 1946  
                     l2019 1B7E                       l2035 1C1E                       l2027 1BF6  
                     l2029 1C00                       l2213 10AC                       l2205 1084  
                     l2151 1B96                       l2215 10B6                       l2233 1114  
                     l2225 10E4                       l2209 1088                       l2241 1174  
                     l2155 1BC0                       l2227 10EC                       l2219 10C2  
                     l2243 1190                       l2171 0F78                       l2253 19FA  
                     l2173 0F8E                       l2165 0F60                       l2405 187A  
                     l2271 1A26                       l2263 1A12                       l2239 1168  
                     l2191 1038                       l2167 0F6E                       l2159 0F46  
                     l2343 1606                       l2407 189C                       l2089 1ACA  
                     l2257 1A02                       l2185 1010                       l2177 0FAC  
                     l1803 1496                       l2339 15EE                       l2443 16A8  
                     l2451 16C8                       l2419 1652                       l1813 14C6  
                     l2197 1054                       l2189 1016                       l2349 162A  
                     l1807 14AA                       l2391 183E                       l2383 181A  
                     l2455 16D6                       l2447 16B8                       l2439 169A  
                     l1921 1422                       l1913 140A                       l1841 1516  
                     l2377 17FC                       l2465 16FE                       l1931 1C50  
                     l2459 16E8                       l1917 1416                       l1845 1522  
                     l1757 1DD4                       l1933 1C5C                       l2397 185C  
                     l2389 1838                       l2469 170A                       l1871 1384  
                     l1783 1D72                       l1927 1C38                       l1881 13B4  
                     l1865 134A                       l1849 152E                       l1785 1D78  
                     l1929 1C44                       l1937 1C68                       l1875 1398  
                     l1971 18D8                       l1947 1DA2                       l1797 146C  
                     l1981 1900                       l1965 18C6                       l1977 18EE  
                     l1993 192A                       l1979 18F8                       l1997 193A  
                     l1989 191E                       STR_1 0F34                       STR_2 0F0F  
                     STR_3 0F1E                       STR_4 0F34                       STR_5 0F2D  
                     u1008 1AB0                       u1430 1BB6                       u1440 1BE0  
                     u1700 1870                       u1437 1BAC                       u1447 1BD6  
                     u1650 1616                       u1670 1810                       u1680 182E  
                     u1690 1852                       u1857 1684                       u1867 1710  
                     u1877 18A6                       u1887 1DC4                       u1897 1DD6  
         ?_lcd_send_nibble 0001                       _anio 004E                       _flag 02D0  
                     _main 1644                       _hora 0054                       fsr0h 000FEA  
                     indf0 000FEF                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
            __CFG_T1DIG$ON 000000                       prodh 000FF4                       prodl 000FF3  
                     start 0000              __CFG_IESO$OFF 000000           RtccReadDate@rTD0 000B  
         RtccReadDate@rTD1 0003               ___param_bank 000010            RtccReadTime@pTm 0001  
              _Delay1KTCYx 1DC0              __CFG_PLLDIV$1 000000                      ?_main 0001  
          __end_of___awdiv 1946      __size_of_Delay100TCYx 0012            ___awdiv@divisor 0003  
          __end_of___lwdiv 1B94            __end_of___lwmod 1C34            ___awdiv@counter 0005  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
           __CFG_FCMEN$OFF 000000                      _Setup 1C80            __end_of_dpowers 0F0B  
                    _mes_d 0048                      _mes_u 0049            __end_of_isdigit 1DAC  
                    main@x 0026                      main@y 0025             __pbitbssCOMRAM 02D0  
                    tablat 000FF5               lcd_putrs@ptr 0009                      status 000FD8  
          __end_of_sprintf 11A0    __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 1CC8  
             _Delay100TCYx 1DD2               __end_of_main 1720            ??_lcd_send_byte 0004  
         RtccReadTime@rTD0 000B           RtccReadTime@rTD1 0003           __end_of_Read_RTC 17F8  
                   ??_main 0024              __activetblptr 000002           __end_of_RtccWrOn 1DF6  
                   ?_Setup 0001                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _EECON2 000FA7                     _ANCON0 000F48           ___awdiv@dividend 0001  
           __CFG_WDTEN$OFF 000000           RtccWriteDate@pDt 0001                     _RTCCFG 000F3F  
           __CFG_WPCFG$OFF 000000           __end_of_caratula 1644             __CFG_WPDIS$OFF 000000  
           __CFG_XINST$OFF 000000           __end_of_lcd_init 1A54           __end_of_lcd_putc 1C80  
        ?_lcd_setcursor_vb 0005                     ___wmul 1D3E                  ??___awdiv 0005  
           __CFG_STVREN$ON 000000                     _diasem 0052                     _anio_d 0041  
                   _anio_u 0042                  ??___lwdiv 0005                  ??___lwmod 000C  
       ??_lcd_setcursor_vb 0006                     _hora_d 0046                     _hora_u 0047  
                   clear_0 1CCE                     clear_1 1CDC           ___awdiv@quotient 0007  
                   _minuto 0058      __end_of_RtccWriteDate 142E           __end_of_setClock 18B0  
    __end_of_RtccWriteTime 153A           RtccWriteTime@pTm 0001               __pdataCOMRAM 004E  
                ??_isdigit 0001               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_sprintf 0017  
               __accesstop 0060    __end_of__initialization 1D02         __size_of_Write_RTC 0148  
            ___rparam_used 000001             __pcstackCOMRAM 0001              __end_of_Setup 1CC8  
          __CFG_DSWDTPS$G2 000000            __CFG_OSC$INTOSC 000000                    ??_Setup 000E  
        lcd_gotoxy@address 0007         __size_of_lcd_putrs 0054               sprintf@width 0021  
               __pbssBANK0 0060                  ?_Read_RTC 0001                 _dia_semana 0043  
RtccWriteTime@tempHourWDay 000A                 __pnvCOMRAM 0041                  ?_RtccWrOn 0001  
           lcd_send_byte@n 0003                    ?___wmul 0001              ?_RtccReadDate 0001  
            ?_RtccReadTime 0001               ?_Delay1KTCYx 0001          __end_of_Write_RTC 12E8  
               _lcd_comand 1DF6                  ?_caratula 0001                 _lcd_gotoxy 1D66  
                  _RTCVALH 000F99                    _RTCVALL 000F98                  ?_lcd_init 0001  
                ?_lcd_putc 0001                 ??_Read_RTC 0013                  ?_setClock 0001  
                  __Hparam 0000                    __Lparam 0000   __size_of_lcd_send_nibble 0076  
               ??_RtccWrOn 0001             ??_RtccReadDate 0003             ??_RtccReadTime 0003  
                  ___awdiv 18B0          __end_of_lcd_putrs 1BE8            __size_of___wmul 0028  
                  ___lwdiv 1B38                    ___lwmod 1BE8               __psmallconst 0F00  
              _RtccTimeVal 0027                    __pcinit 1CC8                    _fecha_d 0044  
                  _fecha_u 0045                    __ramtop 0F00                    __ptext0 1644  
                  __ptext1 17F8                    __ptext2 1DAC                    __ptext3 153A  
                  __ptext4 0F3C                    __ptext5 1D8A                    __ptext6 1D3E  
                  __ptext7 1BE8                    __ptext8 1B38                    __ptext9 1B94  
                  _buffer2 0078                  _T1CONbits 000FCD                    _dpowers 0F01  
                  _isdigit 1D8A                 ??_caratula 0024                    _segundo 0037  
                  _sprintf 0F3C                 ??_lcd_init 0005                 ??_lcd_putc 0008  
     end_of_initialization 1D02       lcd_send_byte@address 0004              __Lmediumconst 0000  
               ??_setClock 000E                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE      __end_of_lcd_send_byte 1D3E  
                _PORTAbits 000F80           __CFG_DSBOREN$OFF 000000                ?_lcd_comand 0001  
         __CFG_CPUDIV$OSC1 000000                  _TRISBbits 000F93                ?_lcd_gotoxy 0005  
__size_of_lcd_setcursor_vb 0014            _LCD_INIT_STRING 0F0B           __CFG_IOL1WAY$OFF 000000  
RtccWriteDate@tempDayMonth 000A        __CFG_MSSP7B_EN$MSK7 000000           Delay100TCYx@unit 0001  
           __end_of___wmul 1D66              __pidataCOMRAM 1E04  RtccWriteDate@tempHourWDay 000C  
        ??_lcd_send_nibble 0001       __size_of_Delay1KTCYx 0012           __CFG_DSWDTEN$OFF 000000  
      start_initialization 1CC8       __end_of_RtccReadDate 19D4       __end_of_RtccReadTime 1B38  
     RtccWriteTime@wasAlrm 0006       RtccWriteTime@wasWrEn 0007     __size_of_RtccWriteDate 0146  
          RtccWriteDate@di 0003     __size_of_RtccWriteTime 010C          __size_of_Read_RTC 00D8  
      __size_of_lcd_comand 000E        __size_of_lcd_gotoxy 0024                   ??___wmul 0005  
        __size_of_RtccWrOn 0012            RtccWriteTime@di 0003           __CFG_LPT1OSC$OFF 000000  
              _ALRMCFGbits 000F91    __end_of_LCD_INIT_STRING 0F0F                __pbssCOMRAM 0027  
                _Write_RTC 11A0               _isdigit$1825 0002          __size_of_caratula 010A  
          Delay1KTCYx@unit 0001          __size_of_lcd_init 0080                sprintf@flag 001D  
        __size_of_lcd_putc 004C                sprintf@prec 0020           ___lwdiv@dividend 0001  
            ?_Delay100TCYx 0001          __size_of_setClock 00B8                   ?___awdiv 0001  
                 ?___lwdiv 0001                   ?___lwmod 0008    RtccWriteTime@tempMinSec 0008  
                _lcd_putrs 1B94    lcd_setcursor_vb@visible 0006              _RtccWriteDate 12E8  
              __smallconst 0F00              _RtccWriteTime 142E                   ?_isdigit 0001  
     __CFG_RTCOSC$T1OSCREF 000000           _lcd_setcursor_vb 1DAC             __size_of_Setup 0048  
               ?_Write_RTC 0001           ___lwdiv@quotient 0005                   ?_sprintf 000D  
         _RtccAlrmTimeDate 0060             ___wmul@product 0005                   _LATBbits 000F8A  
                 _PIE3bits 000FA3                  _segundo_d 004C             ??_Delay100TCYx 0001  
                _segundo_u 004D           __CFG_WDTPS$32768 000000         RtccWriteDate@wasOn 0005  
       _Rtcc_read_TimeDate 0070             ?_RtccWriteDate 0001                 ?_lcd_putrs 0009  
        ___wmul@multiplier 0001             ?_RtccWriteTime 0001                  lcd_init@i 0005  
    __size_of_RtccReadDate 008E               ??_lcd_comand 0005                  lcd_putc@c 0008  
    __size_of_RtccReadTime 006E               ??_lcd_gotoxy 0006                  copy_data0 1CF6  
                 _Read_RTC 1720            _lcd_send_nibble 1A54                   __Hrparam 0000  
                 _RtccDate 0039                   __Lrparam 0000                   _RtccTime 003D  
                 _RtccWrOn 1DE4         __end_of_lcd_comand 1E04         __end_of_lcd_gotoxy 1D8A  
             _RtccReadDate 1946           __size_of___awdiv 0096               _RtccReadTime 1ACA  
         __size_of___lwdiv 005C           __size_of___lwmod 004C               _RtccTimeDate 0068  
               sprintf@val 001E                  setClock@x 000F                   _caratula 153A  
         __size_of_isdigit 0022            ___lwdiv@divisor 0003                ??_Write_RTC 000E  
          ___lwdiv@counter 0007                   __ptext10 1C34                   __ptext11 1D66  
                 __ptext20 18B0                   __ptext12 1C80                   __ptext21 142E  
                 __ptext13 19D4                   __ptext22 12E8                   __ptext14 1DC0  
                 __ptext23 1DE4                   __ptext15 1DF6                   __ptext24 1720  
                 __ptext16 1D0C                   __ptext25 1ACA                   __ptext17 1A54  
                 __ptext26 1946                   __ptext18 1DD2                   __ptext19 11A0  
                 _lcd_init 19D4                   _lcd_putc 1C34           __size_of_sprintf 0264  
   __size_of_lcd_send_byte 0032              __size_of_main 00DC                   _setClock 17F8  
                 _minuto_d 004A                   _minuto_u 004B              ??_Delay1KTCYx 0001  
          ??_RtccWriteDate 0004            ??_RtccWriteTime 0004                ??_lcd_putrs 000B  
              _OSCTUNEbits 000F9B                 _INTCONbits 000FF2         RtccWriteTime@wasOn 0005  
     __end_of_Delay100TCYx 1DE4                   isdigit@c 0003                  sprintf@ap 001B  
  __end_of_lcd_send_nibble 1ACA                  sprintf@sp 000D      lcd_setcursor_vb@blink 0005  
         ___lwmod@dividend 0008                 _OSCCONbits 000FD3   __end_of_lcd_setcursor_vb 1DC0  
    RtccWriteDate@tempYear 0007              _lcd_send_byte 1D0C                 _RTCCFGbits 000F3F  
                 sprintf@c 0023                   sprintf@f 000F            ___lwmod@divisor 000A  
      __end_of_Delay1KTCYx 1DD2            ___lwmod@counter 000C       RtccWriteDate@wasAlrm 0006  
     RtccWriteDate@wasWrEn 0009      lcd_send_nibble@nibble 0002  
