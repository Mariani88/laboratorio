

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Aug 18 19:25:48 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  001DFA                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _anio
    50  001DFA  000F               	dw	15
    51                           
    52                           ;initializer for _dia
    53  001DFC  0008               	dw	8
    54                           
    55                           ;initializer for _diasem
    56  001DFE  0003               	dw	3
    57                           
    58                           ;initializer for _hora
    59  001E00  0012               	dw	18
    60                           
    61                           ;initializer for _mes
    62  001E02  0009               	dw	9
    63                           
    64                           ;initializer for _minuto
    65  001E04  001E               	dw	30
    66                           
    67                           	psect	smallconst
    68  000F00                     __psmallconst:
    69                           	opt stack 0
    70  000F00  00                 	db	0
    71  000F01                     _dpowers:
    72                           	opt stack 0
    73  000F01  0001               	dw	1
    74  000F03  000A               	dw	10
    75  000F05  0064               	dw	100
    76  000F07  03E8               	dw	1000
    77  000F09  2710               	dw	10000
    78  000F0B                     __end_of_dpowers:
    79                           	opt stack 0
    80  000F0B                     _LCD_INIT_STRING:
    81                           	opt stack 0
    82  000F0B  28                 	db	40
    83  000F0C  0C                 	db	12
    84  000F0D  01                 	db	1
    85  000F0E  06                 	db	6
    86  000F0F                     __end_of_LCD_INIT_STRING:
    87                           	opt stack 0
    88  000F0F                     STR_2:
    89                           
    90                           ; BSR set to: 15
    91  000F0F  25                 	db	37
    92  000F10  30                 	db	48	;'0'
    93  000F11  32                 	db	50	;'2'
    94  000F12  75                 	db	117	;'u'
    95  000F13  2F                 	db	47
    96  000F14  25                 	db	37
    97  000F15  30                 	db	48	;'0'
    98  000F16  32                 	db	50	;'2'
    99  000F17  75                 	db	117	;'u'
   100  000F18  2F                 	db	47
   101  000F19  25                 	db	37
   102  000F1A  30                 	db	48	;'0'
   103  000F1B  32                 	db	50	;'2'
   104  000F1C  75                 	db	117	;'u'
   105  000F1D  00                 	db	0
   106  000F1E                     STR_3:
   107                           
   108                           ; BSR set to: 15
   109  000F1E  25                 	db	37
   110  000F1F  30                 	db	48	;'0'
   111  000F20  32                 	db	50	;'2'
   112  000F21  75                 	db	117	;'u'
   113  000F22  3A                 	db	58	;':'
   114  000F23  25                 	db	37
   115  000F24  30                 	db	48	;'0'
   116  000F25  32                 	db	50	;'2'
   117  000F26  75                 	db	117	;'u'
   118  000F27  3A                 	db	58	;':'
   119  000F28  25                 	db	37
   120  000F29  30                 	db	48	;'0'
   121  000F2A  32                 	db	50	;'2'
   122  000F2B  75                 	db	117	;'u'
   123  000F2C  00                 	db	0
   124  000F2D                     STR_5:
   125                           
   126                           ; BSR set to: 15
   127  000F2D  20                 	db	32
   128  000F2E  20                 	db	32
   129  000F2F  20                 	db	32
   130  000F30  20                 	db	32
   131  000F31  20                 	db	32
   132  000F32  20                 	db	32
   133  000F33  00                 	db	0
   134  000F34                     STR_1:
   135                           
   136                           ; BSR set to: 15
   137  000F34  55                 	db	85	;'U'
   138  000F35  4E                 	db	78	;'N'
   139  000F36  49                 	db	73	;'I'
   140  000F37  4D                 	db	77	;'M'
   141  000F38  49                 	db	73	;'I'
   142  000F39  43                 	db	67	;'C'
   143  000F3A  00                 	db	0
   144  0000                     
   145                           ; #config settings
   146  000F3B  00                 	db	0	; dummy byte at the end
   147  0000                     
   148                           	psect	nvCOMRAM
   149  000041                     __pnvCOMRAM:
   150                           	opt stack 0
   151  000041                     _anio_d:
   152                           	opt stack 0
   153  000041                     	ds	1
   154  000042                     _anio_u:
   155                           	opt stack 0
   156  000042                     	ds	1
   157  000043                     _dia_semana:
   158                           	opt stack 0
   159  000043                     	ds	1
   160  000044                     _fecha_d:
   161                           	opt stack 0
   162  000044                     	ds	1
   163  000045                     _fecha_u:
   164                           	opt stack 0
   165  000045                     	ds	1
   166  000046                     _hora_d:
   167                           	opt stack 0
   168  000046                     	ds	1
   169  000047                     _hora_u:
   170                           	opt stack 0
   171  000047                     	ds	1
   172  000048                     _mes_d:
   173                           	opt stack 0
   174  000048                     	ds	1
   175  000049                     _mes_u:
   176                           	opt stack 0
   177  000049                     	ds	1
   178  00004A                     _minuto_d:
   179                           	opt stack 0
   180  00004A                     	ds	1
   181  00004B                     _minuto_u:
   182                           	opt stack 0
   183  00004B                     	ds	1
   184  00004C                     _segundo_d:
   185                           	opt stack 0
   186  00004C                     	ds	1
   187  00004D                     _segundo_u:
   188                           	opt stack 0
   189  00004D                     	ds	1
   190  0000                     _ANCON0	set	3912
   191  0000                     _RTCCFG	set	3903
   192  0000                     _RTCCFGbits	set	3903
   193  0000                     _ADCON0	set	4034
   194  0000                     _ADCON1	set	4033
   195  0000                     _ALRMCFGbits	set	3985
   196  0000                     _EECON2	set	4007
   197  0000                     _INTCONbits	set	4082
   198  0000                     _LATBbits	set	3978
   199  0000                     _OSCCONbits	set	4051
   200  0000                     _OSCTUNEbits	set	3995
   201  0000                     _PIE3bits	set	4003
   202  0000                     _PORTAbits	set	3968
   203  0000                     _RTCVALH	set	3993
   204  0000                     _RTCVALL	set	3992
   205  0000                     _T1CONbits	set	4045
   206  0000                     _TRISA	set	3986
   207  0000                     _TRISB	set	3987
   208  0000                     _TRISBbits	set	3987
   209  0000                     _TRISC	set	3988
   210                           
   211                           	psect	cinit
   212  001C92                     __pcinit:
   213                           	opt stack 0
   214  001C92                     start_initialization:
   215                           	opt stack 0
   216  001C92                     __initialization:
   217                           	opt stack 0
   218                           
   219                           ; Clear objects allocated to BANK0 (44 bytes)
   220  001C92  EE00  F060         	lfsr	0,__pbssBANK0
   221  001C96  0E2C               	movlw	44
   222  001C98                     clear_0:
   223  001C98  6AEE               	clrf	postinc0,c
   224  001C9A  06E8               	decf	wreg,f,c
   225  001C9C  E1FD               	bnz	clear_0
   226                           
   227                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   228  001C9E  6A5A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   229                           
   230                           ; Clear objects allocated to COMRAM (26 bytes)
   231  001CA0  EE00  F027         	lfsr	0,__pbssCOMRAM
   232  001CA4  0E1A               	movlw	26
   233  001CA6                     clear_1:
   234  001CA6  6AEE               	clrf	postinc0,c
   235  001CA8  06E8               	decf	wreg,f,c
   236  001CAA  E1FD               	bnz	clear_1
   237                           
   238                           ; Initialize objects allocated to COMRAM (12 bytes)
   239                           ; load TBLPTR registers with __pidataCOMRAM
   240  001CAC  0EFA               	movlw	low __pidataCOMRAM
   241  001CAE  6EF6               	movwf	tblptrl,c
   242  001CB0  0E1D               	movlw	high __pidataCOMRAM
   243  001CB2  6EF7               	movwf	tblptrh,c
   244  001CB4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   245  001CB6  6EF8               	movwf	tblptru,c
   246  001CB8  EE00  F04E         	lfsr	0,__pdataCOMRAM
   247  001CBC  EE10 F00C          	lfsr	1,12
   248  001CC0                     copy_data0:
   249  001CC0  0009               	tblrd		*+
   250  001CC2  CFF5 FFEE          	movff	tablat,postinc0
   251  001CC6  50E5               	movf	postdec1,w,c
   252  001CC8  50E1               	movf	fsr1l,w,c
   253  001CCA  E1FA               	bnz	copy_data0
   254  001CCC                     end_of_initialization:
   255                           	opt stack 0
   256  001CCC                     __end_of__initialization:
   257                           	opt stack 0
   258  001CCC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   259  001CCE  6EF8               	movwf	tblptru,c
   260  001CD0  0100               	movlb	0
   261  001CD2  EF22  F00B         	goto	_main	;jump to C main() function
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           postdec1	equ	0xFE5
   269                           fsr1l	equ	0xFE1
   270                           
   271                           	psect	bitbssCOMRAM
   272  0002D0                     __pbitbssCOMRAM:
   273                           	opt stack 0
   274  0002D0                     _flag:
   275                           	opt stack 0
   276  0002D0                     	ds	1
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           postdec1	equ	0xFE5
   284                           fsr1l	equ	0xFE1
   285                           
   286                           	psect	bssCOMRAM
   287  000027                     __pbssCOMRAM:
   288                           	opt stack 0
   289  000027                     _RtccTimeVal:
   290                           	opt stack 0
   291  000027                     	ds	4
   292  00002B                     _a:
   293                           	opt stack 0
   294  00002B                     	ds	2
   295  00002D                     _b:
   296                           	opt stack 0
   297  00002D                     	ds	2
   298  00002F                     _c:
   299                           	opt stack 0
   300  00002F                     	ds	2
   301  000031                     _i:
   302                           	opt stack 0
   303  000031                     	ds	2
   304  000033                     _j:
   305                           	opt stack 0
   306  000033                     	ds	2
   307  000035                     _k:
   308                           	opt stack 0
   309  000035                     	ds	2
   310  000037                     _segundo:
   311                           	opt stack 0
   312  000037                     	ds	2
   313  000039                     _RtccDate:
   314                           	opt stack 0
   315  000039                     	ds	4
   316  00003D                     _RtccTime:
   317                           	opt stack 0
   318  00003D                     	ds	4
   319                           tblptru	equ	0xFF8
   320                           tblptrh	equ	0xFF7
   321                           tblptrl	equ	0xFF6
   322                           tablat	equ	0xFF5
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           postdec1	equ	0xFE5
   326                           fsr1l	equ	0xFE1
   327                           
   328                           	psect	dataCOMRAM
   329  00004E                     __pdataCOMRAM:
   330                           	opt stack 0
   331  00004E                     _anio:
   332                           	opt stack 0
   333  00004E                     	ds	2
   334  000050                     _dia:
   335                           	opt stack 0
   336  000050                     	ds	2
   337  000052                     _diasem:
   338                           	opt stack 0
   339  000052                     	ds	2
   340  000054                     _hora:
   341                           	opt stack 0
   342  000054                     	ds	2
   343  000056                     _mes:
   344                           	opt stack 0
   345  000056                     	ds	2
   346  000058                     _minuto:
   347                           	opt stack 0
   348  000058                     	ds	2
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           postdec1	equ	0xFE5
   356                           fsr1l	equ	0xFE1
   357                           
   358                           	psect	bssBANK0
   359  000060                     __pbssBANK0:
   360                           	opt stack 0
   361  000060                     _RtccAlrmTimeDate:
   362                           	opt stack 0
   363  000060                     	ds	8
   364  000068                     _RtccTimeDate:
   365                           	opt stack 0
   366  000068                     	ds	8
   367  000070                     _Rtcc_read_TimeDate:
   368                           	opt stack 0
   369  000070                     	ds	8
   370  000078                     _buffer2:
   371                           	opt stack 0
   372  000078                     	ds	20
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           postdec1	equ	0xFE5
   380                           fsr1l	equ	0xFE1
   381                           
   382                           	psect	cstackCOMRAM
   383  000001                     __pcstackCOMRAM:
   384                           	opt stack 0
   385  000001                     ??_isdigit:
   386  000001                     ??_lcd_send_nibble:
   387  000001                     ?___wmul:
   388                           	opt stack 0
   389  000001                     ?___awdiv:
   390                           	opt stack 0
   391  000001                     ?___lwdiv:
   392                           	opt stack 0
   393  000001                     Delay100TCYx@unit:
   394                           	opt stack 0
   395  000001                     Delay1KTCYx@unit:
   396                           	opt stack 0
   397  000001                     evalueChanceOfRaw@x:
   398                           	opt stack 0
   399  000001                     RtccReadDate@pDt:
   400                           	opt stack 0
   401  000001                     RtccReadTime@pTm:
   402                           	opt stack 0
   403  000001                     RtccWriteDate@pDt:
   404                           	opt stack 0
   405  000001                     RtccWriteTime@pTm:
   406                           	opt stack 0
   407  000001                     ___wmul@multiplier:
   408                           	opt stack 0
   409  000001                     ___awdiv@dividend:
   410                           	opt stack 0
   411  000001                     ___lwdiv@dividend:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x0
   415  000001                     	ds	1
   416  000002                     lcd_send_nibble@nibble:
   417                           	opt stack 0
   418  000002                     _isdigit$1833:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x1
   422  000002                     	ds	1
   423  000003                     lcd_send_byte@n:
   424                           	opt stack 0
   425  000003                     RtccWriteDate@di:
   426                           	opt stack 0
   427  000003                     RtccWriteTime@di:
   428                           	opt stack 0
   429  000003                     isdigit@c:
   430                           	opt stack 0
   431  000003                     evalueChanceOfRaw@y:
   432                           	opt stack 0
   433  000003                     ___wmul@multiplicand:
   434                           	opt stack 0
   435  000003                     ___awdiv@divisor:
   436                           	opt stack 0
   437  000003                     ___lwdiv@divisor:
   438                           	opt stack 0
   439  000003                     RtccReadDate@rTD1:
   440                           	opt stack 0
   441  000003                     RtccReadTime@rTD1:
   442                           	opt stack 0
   443                           
   444                           ; 8 bytes @ 0x2
   445  000003                     	ds	1
   446  000004                     lcd_send_byte@address:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x3
   450  000004                     	ds	1
   451  000005                     lcd_init@i:
   452                           	opt stack 0
   453  000005                     lcd_gotoxy@y:
   454                           	opt stack 0
   455  000005                     lcd_comand@d:
   456                           	opt stack 0
   457  000005                     lcd_setcursor_vb@blink:
   458                           	opt stack 0
   459  000005                     RtccWriteDate@wasOn:
   460                           	opt stack 0
   461  000005                     RtccWriteTime@wasOn:
   462                           	opt stack 0
   463  000005                     ___awdiv@counter:
   464                           	opt stack 0
   465  000005                     ___wmul@product:
   466                           	opt stack 0
   467  000005                     ___lwdiv@quotient:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x4
   471  000005                     	ds	1
   472  000006                     lcd_gotoxy@x:
   473                           	opt stack 0
   474  000006                     lcd_setcursor_vb@visible:
   475                           	opt stack 0
   476  000006                     RtccWriteDate@wasAlrm:
   477                           	opt stack 0
   478  000006                     RtccWriteTime@wasAlrm:
   479                           	opt stack 0
   480  000006                     ___awdiv@sign:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x5
   484  000006                     	ds	1
   485  000007                     lcd_gotoxy@address:
   486                           	opt stack 0
   487  000007                     RtccWriteTime@wasWrEn:
   488                           	opt stack 0
   489  000007                     ___lwdiv@counter:
   490                           	opt stack 0
   491  000007                     jumpIfNotNumber@x:
   492                           	opt stack 0
   493  000007                     RtccWriteDate@tempYear:
   494                           	opt stack 0
   495  000007                     ___awdiv@quotient:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x6
   499  000007                     	ds	1
   500  000008                     ?___lwmod:
   501                           	opt stack 0
   502  000008                     lcd_putc@c:
   503                           	opt stack 0
   504  000008                     RtccWriteTime@tempMinSec:
   505                           	opt stack 0
   506  000008                     ___lwmod@dividend:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x7
   510  000008                     	ds	1
   511  000009                     jumpIfNotNumber@y:
   512                           	opt stack 0
   513  000009                     RtccWriteDate@wasWrEn:
   514                           	opt stack 0
   515  000009                     lcd_putrs@ptr:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x8
   519  000009                     	ds	1
   520  00000A                     ??_jumpIfNotNumber:
   521  00000A                     RtccWriteDate@tempDayMonth:
   522                           	opt stack 0
   523  00000A                     RtccWriteTime@tempHourWDay:
   524                           	opt stack 0
   525  00000A                     ___lwmod@divisor:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x9
   529  00000A                     	ds	1
   530  00000B                     RtccReadDate@rTD0:
   531                           	opt stack 0
   532  00000B                     RtccReadTime@rTD0:
   533                           	opt stack 0
   534                           
   535                           ; 8 bytes @ 0xA
   536  00000B                     	ds	1
   537  00000C                     ___lwmod@counter:
   538                           	opt stack 0
   539  00000C                     RtccWriteDate@tempHourWDay:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0xB
   543  00000C                     	ds	1
   544  00000D                     ?_sprintf:
   545                           	opt stack 0
   546  00000D                     sprintf@sp:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0xC
   550  00000D                     	ds	1
   551  00000E                     
   552                           ; 0 bytes @ 0xD
   553  00000E                     	ds	1
   554  00000F                     sprintf@f:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0xE
   558  00000F                     	ds	4
   559  000013                     
   560                           ; 0 bytes @ 0x12
   561  000013                     	ds	4
   562  000017                     ??_sprintf:
   563                           
   564                           ; 0 bytes @ 0x16
   565  000017                     	ds	4
   566  00001B                     sprintf@ap:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x1A
   570  00001B                     	ds	2
   571  00001D                     sprintf@flag:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x1C
   575  00001D                     	ds	1
   576  00001E                     sprintf@val:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x1D
   580  00001E                     	ds	2
   581  000020                     sprintf@prec:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x1F
   585  000020                     	ds	1
   586  000021                     sprintf@width:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x20
   590  000021                     	ds	2
   591  000023                     sprintf@c:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x22
   595  000023                     	ds	1
   596  000024                     ??_main:
   597                           
   598                           ; 0 bytes @ 0x23
   599  000024                     	ds	1
   600  000025                     main@y:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x24
   604  000025                     	ds	1
   605  000026                     main@x:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x25
   609  000026                     	ds	1
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           postdec1	equ	0xFE5
   617                           fsr1l	equ	0xFE1
   618                           
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 127 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  x               1   37[COMRAM] unsigned char 
   629 ;;  y               1   36[COMRAM] unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  2  165[None  ] int 
   632 ;; Registers used:
   633 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   642 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   643 ;;Total ram usage:        3 bytes
   644 ;; Hardware stack levels required when called:    6
   645 ;; This function calls:
   646 ;;		_Read_RTC
   647 ;;		_Setup
   648 ;;		_Write_RTC
   649 ;;		_caratula
   650 ;;		_evalueChanceOfRaw
   651 ;;		_jumpIfNotNumber
   652 ;;		_lcd_gotoxy
   653 ;;		_lcd_setcursor_vb
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text0
   660  001644                     __ptext0:
   661                           	opt stack 0
   662  001644                     _main:
   663                           	opt stack 25
   664                           
   665                           ;main.c: 128: Setup();
   666                           
   667                           ; BSR set to: 15
   668                           ;incstack = 0
   669  001644  EC25  F00E         	call	_Setup	;wreg free
   670                           
   671                           ;main.c: 129: int8 x = 9;
   672  001648  0E09               	movlw	9
   673  00164A  6E26               	movwf	main@x,c
   674                           
   675                           ;main.c: 130: int8 y = 1;
   676  00164C  0E01               	movlw	1
   677  00164E  6E25               	movwf	main@y,c
   678  001650  D000               	goto	l2386
   679  001652                     l2386:
   680                           
   681                           ;main.c: 133: Read_RTC();
   682  001652  EC90  F00B         	call	_Read_RTC	;wreg free
   683                           
   684                           ;main.c: 134: caratula();
   685  001656  EC9D  F00A         	call	_caratula	;wreg free
   686                           
   687                           ;main.c: 135: lcd_setcursor_vb(1,1);
   688  00165A  0E01               	movlw	1
   689  00165C  6E05               	movwf	lcd_setcursor_vb@blink,c
   690  00165E  0E01               	movlw	1
   691  001660  ECD1  F00E         	call	_lcd_setcursor_vb
   692                           
   693                           ;main.c: 136: lcd_gotoxy(x,y);
   694  001664  C025  F005         	movff	main@y,lcd_gotoxy@y
   695  001668  5026               	movf	main@x,w,c
   696  00166A  ECAE  F00E         	call	_lcd_gotoxy
   697                           
   698                           ;main.c: 137: if(PORTAbits.RA1 == 0)
   699  00166E  B280               	btfsc	3968,1,c	;volatile
   700  001670  D02A               	goto	l167
   701                           
   702                           ;main.c: 138: {
   703                           ;main.c: 139: x++;
   704  001672  2A26               	incf	main@x,f,c
   705                           
   706                           ;main.c: 140: lcd_gotoxy(x,y);
   707  001674  C025  F005         	movff	main@y,lcd_gotoxy@y
   708  001678  5026               	movf	main@x,w,c
   709  00167A  ECAE  F00E         	call	_lcd_gotoxy
   710                           
   711                           ;main.c: 141: _delay((unsigned long)((50)*(8000000/4000.0)));
   712  00167E  0E82               	movlw	130
   713  001680  6E24               	movwf	??_main& (0+255),c
   714  001682  0EDE               	movlw	222
   715  001684                     u1817:
   716  001684  2EE8               	decfsz	wreg,f,c
   717  001686  D7FE               	goto	u1817
   718  001688  2E24               	decfsz	??_main& (0+255),f,c
   719  00168A  D7FC               	goto	u1817
   720                           
   721                           ;main.c: 143: jumpIfNotNumber(&x,y);
   722  00168C  0E26               	movlw	low main@x
   723  00168E  6E07               	movwf	jumpIfNotNumber@x,c
   724  001690  0E00               	movlw	high main@x
   725  001692  6E08               	movwf	jumpIfNotNumber@x+1,c
   726  001694  C025  F009         	movff	main@y,jumpIfNotNumber@y
   727  001698  EC8E  F00C         	call	_jumpIfNotNumber	;wreg free
   728                           
   729                           ;main.c: 144: evalueChanceOfRaw(&x,&y);
   730  00169C  0E26               	movlw	low main@x
   731  00169E  6E01               	movwf	evalueChanceOfRaw@x,c
   732  0016A0  0E00               	movlw	high main@x
   733  0016A2  6E02               	movwf	evalueChanceOfRaw@x+1,c
   734  0016A4  0E25               	movlw	low main@y
   735  0016A6  6E03               	movwf	evalueChanceOfRaw@y,c
   736  0016A8  0E00               	movlw	high main@y
   737  0016AA  6E04               	movwf	evalueChanceOfRaw@y+1,c
   738  0016AC  EC84  F00E         	call	_evalueChanceOfRaw	;wreg free
   739                           
   740                           ;main.c: 146: if(y == 2 && x == 9){
   741  0016B0  0E02               	movlw	2
   742  0016B2  1825               	xorwf	main@y,w,c
   743  0016B4  A4D8               	btfss	status,2,c
   744  0016B6  D008               	goto	l169
   745  0016B8  0E09               	movlw	9
   746  0016BA  1826               	xorwf	main@x,w,c
   747  0016BC  A4D8               	btfss	status,2,c
   748  0016BE  D004               	goto	l169
   749                           
   750                           ;main.c: 147: y = 1;
   751  0016C0  0E01               	movlw	1
   752  0016C2  6E25               	movwf	main@y,c
   753                           
   754                           ;main.c: 148: }
   755                           ;main.c: 149: }
   756  0016C4  D001               	goto	l169
   757  0016C6                     l167:
   758                           
   759                           ;main.c: 150: else LATBbits.LATB1 = 0;;
   760  0016C6  928A               	bcf	3978,1,c	;volatile
   761  0016C8                     l169:
   762                           
   763                           ;main.c: 152: if(PORTAbits.RA0 == 0)
   764  0016C8  B080               	btfsc	3968,0,c	;volatile
   765  0016CA  D01D               	goto	l170
   766                           
   767                           ;main.c: 153: {
   768                           ;main.c: 154: if (x==10){
   769  0016CC  0E0A               	movlw	10
   770  0016CE  1826               	xorwf	main@x,w,c
   771  0016D0  A4D8               	btfss	status,2,c
   772  0016D2  D01B               	goto	l2424
   773                           
   774                           ;main.c: 155: dia++;
   775  0016D4  4A50               	infsnz	_dia,f,c
   776  0016D6  2A51               	incf	_dia+1,f,c
   777                           
   778                           ;main.c: 156: if(dia > 31){
   779  0016D8  BE51               	btfsc	_dia+1,7,c
   780  0016DA  D00B               	goto	l2420
   781  0016DC  5051               	movf	_dia+1,w,c
   782  0016DE  E104               	bnz	u1790
   783  0016E0  0E20               	movlw	32
   784  0016E2  5C50               	subwf	_dia,w,c
   785  0016E4  A0D8               	btfss	status,0,c
   786  0016E6  D005               	goto	l2420
   787  0016E8                     u1790:
   788                           
   789                           ;main.c: 157: dia = 1;
   790  0016E8  0E00               	movlw	0
   791  0016EA  6E51               	movwf	_dia+1,c
   792  0016EC  0E01               	movlw	1
   793  0016EE  6E50               	movwf	_dia,c
   794  0016F0  D000               	goto	l2420
   795  0016F2                     l2420:
   796                           
   797                           ;main.c: 158: }
   798                           ;main.c: 159: Write_RTC();
   799  0016F2  ECD0  F008         	call	_Write_RTC	;wreg free
   800                           
   801                           ;main.c: 160: _delay((unsigned long)((50)*(8000000/4000.0)));
   802  0016F6  0E82               	movlw	130
   803  0016F8  6E24               	movwf	??_main& (0+255),c
   804  0016FA  0EDE               	movlw	222
   805  0016FC                     u1827:
   806  0016FC  2EE8               	decfsz	wreg,f,c
   807  0016FE  D7FE               	goto	u1827
   808  001700  2E24               	decfsz	??_main& (0+255),f,c
   809  001702  D7FC               	goto	u1827
   810                           
   811                           ;main.c: 161: }
   812                           ;main.c: 166: }
   813  001704  D002               	goto	l2424
   814  001706                     l170:
   815                           
   816                           ;main.c: 167: else LATBbits.LATB0 = 0;;
   817  001706  908A               	bcf	3978,0,c	;volatile
   818  001708  D000               	goto	l2424
   819  00170A                     l2424:
   820                           
   821                           ;main.c: 169: _delay((unsigned long)((98)*(8000000/4000.0)));
   822  00170A  0EFF               	movlw	255
   823  00170C  6E24               	movwf	??_main& (0+255),c
   824  00170E  0E8A               	movlw	138
   825  001710                     u1837:
   826  001710  2EE8               	decfsz	wreg,f,c
   827  001712  D7FE               	goto	u1837
   828  001714  2E24               	decfsz	??_main& (0+255),f,c
   829  001716  D7FC               	goto	u1837
   830  001718  D000               	nop2	
   831  00171A  D79B               	goto	l2386
   832                           
   833                           ;main.c: 171: }
   834                           ;main.c: 172: return 0;
   835                           ;	Return value of _main is never used
   836  00171C  EF00  F000         	goto	start
   837  001720                     __end_of_main:
   838                           	opt stack 0
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1l	equ	0xFE1
   847                           status	equ	0xFD8
   848                           
   849 ;; *************** function _jumpIfNotNumber *****************
   850 ;; Defined at:
   851 ;;		line 109 in file "main.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  x               2    6[COMRAM] PTR unsigned char 
   854 ;;		 -> main@x(1), 
   855 ;;  y               1    8[COMRAM] unsigned char 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;		None               void
   860 ;; Registers used:
   861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   867 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   871 ;;Total ram usage:        4 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    3
   874 ;; This function calls:
   875 ;;		_lcd_setcursor_vb
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text1
   882  00191C                     __ptext1:
   883                           	opt stack 0
   884  00191C                     _jumpIfNotNumber:
   885                           	opt stack 27
   886                           
   887                           ;main.c: 110: if( (*x==11 && y ==1)
   888                           ;main.c: 111: || (*x==14 && y ==1)
   889                           ;main.c: 112: || (*x==3 && y==2)
   890                           ;main.c: 113: || (*x==6 && y==2)){
   891                           
   892                           ;incstack = 0
   893  00191C  C007  FFD9         	movff	jumpIfNotNumber@x,fsr2l
   894  001920  C008  FFDA         	movff	jumpIfNotNumber@x+1,fsr2h
   895  001924  0E0B               	movlw	11
   896  001926  18DE               	xorwf	postinc2,w,c
   897  001928  A4D8               	btfss	status,2,c
   898  00192A  D003               	goto	l2364
   899  00192C  0409               	decf	jumpIfNotNumber@y,w,c
   900  00192E  B4D8               	btfsc	status,2,c
   901  001930  D023               	goto	l2376
   902  001932                     l2364:
   903  001932  C007  FFD9         	movff	jumpIfNotNumber@x,fsr2l
   904  001936  C008  FFDA         	movff	jumpIfNotNumber@x+1,fsr2h
   905  00193A  0E0E               	movlw	14
   906  00193C  18DE               	xorwf	postinc2,w,c
   907  00193E  A4D8               	btfss	status,2,c
   908  001940  D003               	goto	l2368
   909  001942  0409               	decf	jumpIfNotNumber@y,w,c
   910  001944  B4D8               	btfsc	status,2,c
   911  001946  D018               	goto	l2376
   912  001948                     l2368:
   913  001948  C007  FFD9         	movff	jumpIfNotNumber@x,fsr2l
   914  00194C  C008  FFDA         	movff	jumpIfNotNumber@x+1,fsr2h
   915  001950  0E03               	movlw	3
   916  001952  18DE               	xorwf	postinc2,w,c
   917  001954  A4D8               	btfss	status,2,c
   918  001956  D004               	goto	l2372
   919  001958  0E02               	movlw	2
   920  00195A  1809               	xorwf	jumpIfNotNumber@y,w,c
   921  00195C  B4D8               	btfsc	status,2,c
   922  00195E  D00C               	goto	l2376
   923  001960                     l2372:
   924  001960  C007  FFD9         	movff	jumpIfNotNumber@x,fsr2l
   925  001964  C008  FFDA         	movff	jumpIfNotNumber@x+1,fsr2h
   926  001968  0E06               	movlw	6
   927  00196A  18DE               	xorwf	postinc2,w,c
   928  00196C  A4D8               	btfss	status,2,c
   929  00196E  0012               	return	
   930  001970  0E02               	movlw	2
   931  001972  1809               	xorwf	jumpIfNotNumber@y,w,c
   932  001974  A4D8               	btfss	status,2,c
   933  001976  0012               	return	
   934  001978                     l2376:
   935                           
   936                           ;main.c: 115: lcd_setcursor_vb(0,0);
   937  001978  0E00               	movlw	0
   938  00197A  6E05               	movwf	lcd_setcursor_vb@blink,c
   939  00197C  0E00               	movlw	0
   940  00197E  ECD1  F00E         	call	_lcd_setcursor_vb
   941                           
   942                           ;main.c: 116: *x = *x + 1;
   943  001982  C007  FFD9         	movff	jumpIfNotNumber@x,fsr2l
   944  001986  C008  FFDA         	movff	jumpIfNotNumber@x+1,fsr2h
   945  00198A  50DF               	movf	indf2,w,c
   946  00198C  6E0A               	movwf	??_jumpIfNotNumber& (0+255),c
   947  00198E  280A               	incf	??_jumpIfNotNumber,w,c
   948  001990  C007  FFD9         	movff	jumpIfNotNumber@x,fsr2l
   949  001994  C008  FFDA         	movff	jumpIfNotNumber@x+1,fsr2h
   950  001998  6EDF               	movwf	indf2,c
   951  00199A  0012               	return	
   952  00199C  0012               	return		;funcret
   953  00199E                     __end_of_jumpIfNotNumber:
   954                           	opt stack 0
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           postdec1	equ	0xFE5
   962                           fsr1l	equ	0xFE1
   963                           indf2	equ	0xFDF
   964                           postinc2	equ	0xFDE
   965                           fsr2h	equ	0xFDA
   966                           fsr2l	equ	0xFD9
   967                           status	equ	0xFD8
   968                           
   969 ;; *************** function _lcd_setcursor_vb *****************
   970 ;; Defined at:
   971 ;;		line 210 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  visible         1    wreg     unsigned char 
   974 ;;  blink           1    4[COMRAM] unsigned char 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  visible         1    5[COMRAM] unsigned char 
   977 ;; Return value:  Size  Location     Type
   978 ;;		None               void
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   986 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   990 ;;Total ram usage:        2 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; Hardware stack levels required when called:    2
   993 ;; This function calls:
   994 ;;		_lcd_send_byte
   995 ;; This function is called by:
   996 ;;		_jumpIfNotNumber
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text2
  1002  001DA2                     __ptext2:
  1003                           	opt stack 0
  1004  001DA2                     _lcd_setcursor_vb:
  1005                           	opt stack 28
  1006                           
  1007                           ;incstack = 0
  1008                           ;lcd_setcursor_vb@visible stored from wreg
  1009  001DA2  6E06               	movwf	lcd_setcursor_vb@visible,c
  1010                           
  1011                           ;unmc_lcd_216.c: 211: lcd_send_byte(0, 0xC|(visible<<1)|blink);
  1012  001DA4  5006               	movf	lcd_setcursor_vb@visible,w,c
  1013  001DA6  2406               	addwf	lcd_setcursor_vb@visible,w,c
  1014  001DA8  1005               	iorwf	lcd_setcursor_vb@blink,w,c
  1015  001DAA  090C               	iorlw	12
  1016  001DAC  6E03               	movwf	lcd_send_byte@n,c
  1017  001DAE  0E00               	movlw	0
  1018  001DB0  EC6B  F00E         	call	_lcd_send_byte
  1019  001DB4  0012               	return		;funcret
  1020  001DB6                     __end_of_lcd_setcursor_vb:
  1021                           	opt stack 0
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           postdec1	equ	0xFE5
  1029                           fsr1l	equ	0xFE1
  1030                           indf2	equ	0xFDF
  1031                           postinc2	equ	0xFDE
  1032                           fsr2h	equ	0xFDA
  1033                           fsr2l	equ	0xFD9
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _evalueChanceOfRaw *****************
  1037 ;; Defined at:
  1038 ;;		line 102 in file "main.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  x               2    0[COMRAM] PTR unsigned char 
  1041 ;;		 -> main@x(1), 
  1042 ;;  y               2    2[COMRAM] PTR unsigned char 
  1043 ;;		 -> main@y(1), 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;		None               void
  1048 ;; Registers used:
  1049 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1058 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;Total ram usage:        5 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text3
  1069  001D08                     __ptext3:
  1070                           	opt stack 0
  1071  001D08                     _evalueChanceOfRaw:
  1072                           	opt stack 30
  1073                           
  1074                           ;main.c: 103: if (*x == 17){
  1075                           
  1076                           ;incstack = 0
  1077  001D08  C001  FFD9         	movff	evalueChanceOfRaw@x,fsr2l
  1078  001D0C  C002  FFDA         	movff	evalueChanceOfRaw@x+1,fsr2h
  1079  001D10  0E11               	movlw	17
  1080  001D12  18DE               	xorwf	postinc2,w,c
  1081  001D14  A4D8               	btfss	status,2,c
  1082  001D16  0012               	return	
  1083                           
  1084                           ;main.c: 104: *x = 1;
  1085  001D18  C001  FFD9         	movff	evalueChanceOfRaw@x,fsr2l
  1086  001D1C  C002  FFDA         	movff	evalueChanceOfRaw@x+1,fsr2h
  1087  001D20  0E01               	movlw	1
  1088  001D22  6EDF               	movwf	indf2,c
  1089                           
  1090                           ;main.c: 105: *y = 2;
  1091  001D24  C003  FFD9         	movff	evalueChanceOfRaw@y,fsr2l
  1092  001D28  C004  FFDA         	movff	evalueChanceOfRaw@y+1,fsr2h
  1093  001D2C  0E02               	movlw	2
  1094  001D2E  6EDF               	movwf	indf2,c
  1095  001D30  0012               	return	
  1096  001D32  0012               	return		;funcret
  1097  001D34                     __end_of_evalueChanceOfRaw:
  1098                           	opt stack 0
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           postdec1	equ	0xFE5
  1106                           fsr1l	equ	0xFE1
  1107                           indf2	equ	0xFDF
  1108                           postinc2	equ	0xFDE
  1109                           fsr2h	equ	0xFDA
  1110                           fsr2l	equ	0xFD9
  1111                           status	equ	0xFD8
  1112                           
  1113 ;; *************** function _caratula *****************
  1114 ;; Defined at:
  1115 ;;		line 36 in file "main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;		None               void
  1122 ;; Registers used:
  1123 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    5
  1136 ;; This function calls:
  1137 ;;		_lcd_comand
  1138 ;;		_lcd_gotoxy
  1139 ;;		_lcd_putrs
  1140 ;;		_sprintf
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text4
  1147  00153A                     __ptext4:
  1148                           	opt stack 0
  1149  00153A                     _caratula:
  1150                           	opt stack 25
  1151                           
  1152                           ;main.c: 38: lcd_comand(0b00001100);
  1153                           
  1154                           ;incstack = 0
  1155  00153A  0E0C               	movlw	12
  1156  00153C  ECF6  F00E         	call	_lcd_comand
  1157                           
  1158                           ;main.c: 39: lcd_gotoxy(1,1);
  1159  001540  0E01               	movlw	1
  1160  001542  6E05               	movwf	lcd_gotoxy@y,c
  1161  001544  0E01               	movlw	1
  1162  001546  ECAE  F00E         	call	_lcd_gotoxy
  1163                           
  1164                           ;main.c: 40: lcd_putrs("UNIMIC");
  1165  00154A  0E34               	movlw	low STR_1
  1166  00154C  6E09               	movwf	lcd_putrs@ptr,c
  1167  00154E  0E0F               	movlw	high STR_1
  1168  001550  6E0A               	movwf	lcd_putrs@ptr+1,c
  1169  001552  ECAF  F00D         	call	_lcd_putrs	;wreg free
  1170                           
  1171                           ;main.c: 41: sprintf(buffer2,"%02u/%02u/%02u",dia,mes,anio);
  1172  001556  0E78               	movlw	low _buffer2
  1173  001558  6E0D               	movwf	sprintf@sp,c
  1174  00155A  0E00               	movlw	high _buffer2
  1175  00155C  6E0E               	movwf	sprintf@sp+1,c
  1176  00155E  0E0F               	movlw	low STR_2
  1177  001560  6E0F               	movwf	sprintf@f,c
  1178  001562  0E0F               	movlw	high STR_2
  1179  001564  6E10               	movwf	sprintf@f+1,c
  1180  001566  C050  F011         	movff	_dia,?_sprintf+4
  1181  00156A  C051  F012         	movff	_dia+1,?_sprintf+5
  1182  00156E  C056  F013         	movff	_mes,?_sprintf+6
  1183  001572  C057  F014         	movff	_mes+1,?_sprintf+7
  1184  001576  C04E  F015         	movff	_anio,?_sprintf+8
  1185  00157A  C04F  F016         	movff	_anio+1,?_sprintf+9
  1186  00157E  EC9E  F007         	call	_sprintf	;wreg free
  1187                           
  1188                           ;main.c: 42: lcd_gotoxy(9,1);
  1189  001582  0E01               	movlw	1
  1190  001584  6E05               	movwf	lcd_gotoxy@y,c
  1191  001586  0E09               	movlw	9
  1192  001588  ECAE  F00E         	call	_lcd_gotoxy
  1193                           
  1194                           ;main.c: 43: lcd_putrs(buffer2);
  1195  00158C  0E78               	movlw	low _buffer2
  1196  00158E  6E09               	movwf	lcd_putrs@ptr,c
  1197  001590  0E00               	movlw	high _buffer2
  1198  001592  6E0A               	movwf	lcd_putrs@ptr+1,c
  1199  001594  ECAF  F00D         	call	_lcd_putrs	;wreg free
  1200                           
  1201                           ;main.c: 44: sprintf(buffer2,"%02u:%02u:%02u",hora,minuto,segundo);
  1202  001598  0E78               	movlw	low _buffer2
  1203  00159A  6E0D               	movwf	sprintf@sp,c
  1204  00159C  0E00               	movlw	high _buffer2
  1205  00159E  6E0E               	movwf	sprintf@sp+1,c
  1206  0015A0  0E1E               	movlw	low STR_3
  1207  0015A2  6E0F               	movwf	sprintf@f,c
  1208  0015A4  0E0F               	movlw	high STR_3
  1209  0015A6  6E10               	movwf	sprintf@f+1,c
  1210  0015A8  C054  F011         	movff	_hora,?_sprintf+4
  1211  0015AC  C055  F012         	movff	_hora+1,?_sprintf+5
  1212  0015B0  C058  F013         	movff	_minuto,?_sprintf+6
  1213  0015B4  C059  F014         	movff	_minuto+1,?_sprintf+7
  1214  0015B8  C037  F015         	movff	_segundo,?_sprintf+8
  1215  0015BC  C038  F016         	movff	_segundo+1,?_sprintf+9
  1216  0015C0  EC9E  F007         	call	_sprintf	;wreg free
  1217                           
  1218                           ;main.c: 45: lcd_gotoxy(1,2);
  1219  0015C4  0E02               	movlw	2
  1220  0015C6  6E05               	movwf	lcd_gotoxy@y,c
  1221  0015C8  0E01               	movlw	1
  1222  0015CA  ECAE  F00E         	call	_lcd_gotoxy
  1223                           
  1224                           ;main.c: 47: b=b++;
  1225  0015CE  0E78               	movlw	low _buffer2
  1226  0015D0  6E09               	movwf	lcd_putrs@ptr,c
  1227  0015D2  0E00               	movlw	high _buffer2
  1228  0015D4  6E0A               	movwf	lcd_putrs@ptr+1,c
  1229  0015D6  ECAF  F00D         	call	_lcd_putrs	;wreg free
  1230  0015DA  4A2D               	infsnz	_b,f,c
  1231  0015DC  2A2E               	incf	_b+1,f,c
  1232                           
  1233                           ;main.c: 48: if(b<7)
  1234  0015DE  BE2E               	btfsc	_b+1,7,c
  1235  0015E0  D006               	goto	l2320
  1236  0015E2  502E               	movf	_b+1,w,c
  1237  0015E4  E110               	bnz	l2324
  1238  0015E6  0E07               	movlw	7
  1239  0015E8  5C2D               	subwf	_b,w,c
  1240  0015EA  B0D8               	btfsc	status,0,c
  1241  0015EC  D00C               	goto	l2324
  1242  0015EE                     l2320:
  1243                           
  1244                           ;main.c: 49: {
  1245                           ;main.c: 50: lcd_gotoxy(1,1);
  1246  0015EE  0E01               	movlw	1
  1247  0015F0  6E05               	movwf	lcd_gotoxy@y,c
  1248  0015F2  0E01               	movlw	1
  1249  0015F4  ECAE  F00E         	call	_lcd_gotoxy
  1250                           
  1251                           ;main.c: 51: lcd_putrs("UNIMIC");
  1252  0015F8  0E34               	movlw	low STR_1
  1253  0015FA  6E09               	movwf	lcd_putrs@ptr,c
  1254  0015FC  0E0F               	movlw	high STR_1
  1255  0015FE  6E0A               	movwf	lcd_putrs@ptr+1,c
  1256  001600  ECAF  F00D         	call	_lcd_putrs	;wreg free
  1257  001604  D000               	goto	l2324
  1258  001606                     l2324:
  1259                           
  1260                           ;main.c: 52: }
  1261                           ;main.c: 53: if(b>6)
  1262  001606  BE2E               	btfsc	_b+1,7,c
  1263  001608  0012               	return	
  1264  00160A  502E               	movf	_b+1,w,c
  1265  00160C  E104               	bnz	u1630
  1266  00160E  0E07               	movlw	7
  1267  001610  5C2D               	subwf	_b,w,c
  1268  001612  A0D8               	btfss	status,0,c
  1269  001614  0012               	return	
  1270  001616                     u1630:
  1271                           
  1272                           ;main.c: 54: {
  1273                           ;main.c: 55: if(b==11){b=0;}
  1274  001616  0E0B               	movlw	11
  1275  001618  182D               	xorwf	_b,w,c
  1276  00161A  102E               	iorwf	_b+1,w,c
  1277  00161C  A4D8               	btfss	status,2,c
  1278  00161E  D005               	goto	l2330
  1279  001620  0E00               	movlw	0
  1280  001622  6E2E               	movwf	_b+1,c
  1281  001624  0E00               	movlw	0
  1282  001626  6E2D               	movwf	_b,c
  1283  001628  D000               	goto	l2330
  1284  00162A                     l2330:
  1285                           
  1286                           ;main.c: 56: lcd_gotoxy(1,1);
  1287  00162A  0E01               	movlw	1
  1288  00162C  6E05               	movwf	lcd_gotoxy@y,c
  1289  00162E  0E01               	movlw	1
  1290  001630  ECAE  F00E         	call	_lcd_gotoxy
  1291                           
  1292                           ;main.c: 57: lcd_putrs("      ");
  1293  001634  0E2D               	movlw	low STR_5
  1294  001636  6E09               	movwf	lcd_putrs@ptr,c
  1295  001638  0E0F               	movlw	high STR_5
  1296  00163A  6E0A               	movwf	lcd_putrs@ptr+1,c
  1297  00163C  ECAF  F00D         	call	_lcd_putrs	;wreg free
  1298  001640  0012               	return	
  1299  001642  0012               	return		;funcret
  1300  001644                     __end_of_caratula:
  1301                           	opt stack 0
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           postinc0	equ	0xFEE
  1307                           wreg	equ	0xFE8
  1308                           postdec1	equ	0xFE5
  1309                           fsr1l	equ	0xFE1
  1310                           indf2	equ	0xFDF
  1311                           postinc2	equ	0xFDE
  1312                           fsr2h	equ	0xFDA
  1313                           fsr2l	equ	0xFD9
  1314                           status	equ	0xFD8
  1315                           
  1316 ;; *************** function _sprintf *****************
  1317 ;; Defined at:
  1318 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1321 ;;		 -> buffer2(20), 
  1322 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1323 ;;		 -> STR_3(15), STR_2(15), 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  tmpval          4    0        struct .
  1326 ;;  cp              3    0        PTR const unsigned char 
  1327 ;;  width           2   32[COMRAM] int 
  1328 ;;  val             2   29[COMRAM] unsigned int 
  1329 ;;  ap              2   26[COMRAM] PTR void [1]
  1330 ;;		 -> ?_sprintf(2), 
  1331 ;;  len             2    0        unsigned int 
  1332 ;;  c               1   34[COMRAM] char 
  1333 ;;  prec            1   31[COMRAM] char 
  1334 ;;  flag            1   28[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  2   12[COMRAM] int 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1344 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1345 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1347 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1348 ;;Total ram usage:       23 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    1
  1351 ;; This function calls:
  1352 ;;		___lwdiv
  1353 ;;		___lwmod
  1354 ;;		___wmul
  1355 ;;		_isdigit
  1356 ;; This function is called by:
  1357 ;;		_caratula
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text5
  1362  000F3C                     __ptext5:
  1363                           	opt stack 0
  1364  000F3C                     _sprintf:
  1365                           	opt stack 28
  1366                           
  1367                           ;doprnt.c: 494: va_list ap;
  1368                           ;doprnt.c: 499: signed char c;
  1369                           ;doprnt.c: 501: int width;
  1370                           ;doprnt.c: 506: signed char prec;
  1371                           ;doprnt.c: 508: unsigned char flag;
  1372                           ;doprnt.c: 523: union {
  1373                           ;doprnt.c: 524: unsigned long vd;
  1374                           ;doprnt.c: 525: double integ;
  1375                           ;doprnt.c: 526: } tmpval;
  1376                           ;doprnt.c: 528: unsigned int val;
  1377                           ;doprnt.c: 529: unsigned len;
  1378                           ;doprnt.c: 530: const char * cp;
  1379                           ;doprnt.c: 533: *ap = __va_start();
  1380                           
  1381                           ;incstack = 0
  1382  000F3C  0E11               	movlw	low (?_sprintf+4)
  1383  000F3E  6E1B               	movwf	sprintf@ap,c
  1384  000F40  0E00               	movlw	high (?_sprintf+4)
  1385  000F42  6E1C               	movwf	sprintf@ap+1,c
  1386                           
  1387                           ;doprnt.c: 536: while(c = *f++) {
  1388  000F44  D117               	goto	l2220
  1389  000F46                     l2138:
  1390                           
  1391                           ;doprnt.c: 538: if(c != '%')
  1392  000F46  0E25               	movlw	37
  1393  000F48  1823               	xorwf	sprintf@c,w,c
  1394  000F4A  B4D8               	btfsc	status,2,c
  1395  000F4C  D009               	goto	l2144
  1396                           
  1397                           ;doprnt.c: 540: {
  1398                           ;doprnt.c: 541: ((*sp++ = (c)));
  1399  000F4E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1400  000F52  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1401  000F56  C023  FFDF         	movff	sprintf@c,indf2
  1402  000F5A  4A0D               	infsnz	sprintf@sp,f,c
  1403  000F5C  2A0E               	incf	sprintf@sp+1,f,c
  1404                           
  1405                           ;doprnt.c: 542: continue;
  1406  000F5E  D10A               	goto	l2220
  1407  000F60                     l2144:
  1408                           
  1409                           ;doprnt.c: 543: }
  1410                           ;doprnt.c: 546: width = 0;
  1411  000F60  0E00               	movlw	0
  1412  000F62  6E22               	movwf	sprintf@width+1,c
  1413  000F64  0E00               	movlw	0
  1414  000F66  6E21               	movwf	sprintf@width,c
  1415                           
  1416                           ;doprnt.c: 548: flag = 0;
  1417  000F68  0E00               	movlw	0
  1418  000F6A  6E1D               	movwf	sprintf@flag,c
  1419                           
  1420                           ;doprnt.c: 551: switch(*f) {
  1421                           
  1422                           ;doprnt.c: 550: for(;;) {
  1423  000F6C  D005               	goto	l2150
  1424  000F6E                     l2146:
  1425                           
  1426                           ;doprnt.c: 580: flag |= 0x04;
  1427  000F6E  841D               	bsf	sprintf@flag,2,c
  1428                           
  1429                           ;doprnt.c: 581: f++;
  1430  000F70  4A0F               	infsnz	sprintf@f,f,c
  1431  000F72  2A10               	incf	sprintf@f+1,f,c
  1432                           
  1433                           ;doprnt.c: 582: continue;
  1434  000F74  D001               	goto	l2150
  1435                           
  1436                           ;doprnt.c: 584: }
  1437  000F76  D00B               	goto	l2152
  1438  000F78                     l2150:
  1439  000F78  C00F  FFF6         	movff	sprintf@f,tblptrl
  1440  000F7C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1441  000F80                     	if	0	;tblptru may be non-zero
  1442  000F80                     	endif
  1443  000F80                     	if	0	;tblptru may be non-zero
  1444  000F80                     	endif
  1445  000F80  0008               	tblrd		*
  1446  000F82  50F5               	movf	tablat,w,c
  1447                           
  1448                           ; Switch size 1, requested type "space"
  1449                           ; Number of cases is 1, Range of values is 48 to 48
  1450                           ; switch strategies available:
  1451                           ; Name         Instructions Cycles
  1452                           ; simple_byte            4     3 (average)
  1453                           ;	Chosen strategy is simple_byte
  1454  000F84  0A30               	xorlw	48	; case 48
  1455  000F86  B4D8               	btfsc	status,2,c
  1456  000F88  D7F2               	goto	l2146
  1457                           
  1458                           ;doprnt.c: 585: break;
  1459  000F8A  D001               	goto	l2152
  1460                           
  1461                           ;doprnt.c: 586: }
  1462  000F8C  D7F5               	goto	l2150
  1463  000F8E                     l2152:
  1464                           
  1465                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1466  000F8E  C00F  FFF6         	movff	sprintf@f,tblptrl
  1467  000F92  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1468  000F96                     	if	0	;tblptru may be non-zero
  1469  000F96                     	endif
  1470  000F96                     	if	0	;tblptru may be non-zero
  1471  000F96                     	endif
  1472  000F96  0008               	tblrd		*
  1473  000F98  50F5               	movf	tablat,w,c
  1474  000F9A  ECC0  F00E         	call	_isdigit
  1475  000F9E  A0D8               	btfss	status,0,c
  1476  000FA0  D03A               	goto	l2168
  1477                           
  1478                           ;doprnt.c: 598: width = 0;
  1479  000FA2  0E00               	movlw	0
  1480  000FA4  6E22               	movwf	sprintf@width+1,c
  1481  000FA6  0E00               	movlw	0
  1482  000FA8  6E21               	movwf	sprintf@width,c
  1483  000FAA  D000               	goto	l2156
  1484  000FAC                     l2156:
  1485                           
  1486                           ;doprnt.c: 600: width *= 10;
  1487  000FAC  C021  F001         	movff	sprintf@width,___wmul@multiplier
  1488  000FB0  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1489  000FB4  0E00               	movlw	0
  1490  000FB6  6E04               	movwf	___wmul@multiplicand+1,c
  1491  000FB8  0E0A               	movlw	10
  1492  000FBA  6E03               	movwf	___wmul@multiplicand,c
  1493  000FBC  EC9A  F00E         	call	___wmul	;wreg free
  1494  000FC0  C001  F021         	movff	?___wmul,sprintf@width
  1495  000FC4  C002  F022         	movff	?___wmul+1,sprintf@width+1
  1496                           
  1497                           ;doprnt.c: 601: width += *f++ - '0';
  1498  000FC8  0ED0               	movlw	208
  1499  000FCA  6E17               	movwf	??_sprintf& (0+255),c
  1500  000FCC  0EFF               	movlw	255
  1501  000FCE  6E18               	movwf	(??_sprintf+1)& (0+255),c
  1502  000FD0  C00F  FFF6         	movff	sprintf@f,tblptrl
  1503  000FD4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1504  000FD8                     	if	0	;tblptru may be non-zero
  1505  000FD8                     	endif
  1506  000FD8                     	if	0	;tblptru may be non-zero
  1507  000FD8                     	endif
  1508  000FD8  0008               	tblrd		*
  1509  000FDA  50F5               	movf	tablat,w,c
  1510  000FDC  6E19               	movwf	(??_sprintf+2)& (0+255),c
  1511  000FDE  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  1512  000FE0  5017               	movf	??_sprintf,w,c
  1513  000FE2  2619               	addwf	??_sprintf+2,f,c
  1514  000FE4  5018               	movf	??_sprintf+1,w,c
  1515  000FE6  221A               	addwfc	??_sprintf+3,f,c
  1516  000FE8  5019               	movf	??_sprintf+2,w,c
  1517  000FEA  2621               	addwf	sprintf@width,f,c
  1518  000FEC  501A               	movf	??_sprintf+3,w,c
  1519  000FEE  2222               	addwfc	sprintf@width+1,f,c
  1520  000FF0  4A0F               	infsnz	sprintf@f,f,c
  1521  000FF2  2A10               	incf	sprintf@f+1,f,c
  1522                           
  1523                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1524  000FF4  C00F  FFF6         	movff	sprintf@f,tblptrl
  1525  000FF8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1526  000FFC                     	if	0	;tblptru may be non-zero
  1527  000FFC                     	endif
  1528  000FFC                     	if	0	;tblptru may be non-zero
  1529  000FFC                     	endif
  1530  000FFC  0008               	tblrd		*
  1531  000FFE  50F5               	movf	tablat,w,c
  1532  001000  ECC0  F00E         	call	_isdigit
  1533  001004  A0D8               	btfss	status,0,c
  1534  001006  D007               	goto	l2168
  1535  001008  D7D1               	goto	l2156
  1536                           
  1537                           ;doprnt.c: 608: }
  1538                           ;doprnt.c: 635: switch(c = *f++) {
  1539  00100A  D005               	goto	l2168
  1540                           
  1541                           ;doprnt.c: 638: goto alldone;
  1542                           
  1543                           ;doprnt.c: 637: case 0:
  1544  00100C  D0C1               	goto	l2222
  1545                           
  1546                           ;doprnt.c: 813: continue;
  1547                           
  1548                           ;doprnt.c: 802: default:
  1549  00100E  D0B2               	goto	l2220
  1550  001010                     l2164:
  1551                           
  1552                           ;doprnt.c: 818: flag |= 0xC0;
  1553  001010  0EC0               	movlw	192
  1554  001012  121D               	iorwf	sprintf@flag,f,c
  1555                           
  1556                           ;doprnt.c: 822: }
  1557                           
  1558                           ;doprnt.c: 819: break;
  1559  001014  D011               	goto	l2170
  1560  001016                     l2168:
  1561  001016  C00F  FFF6         	movff	sprintf@f,tblptrl
  1562  00101A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1563  00101E  4A0F               	infsnz	sprintf@f,f,c
  1564  001020  2A10               	incf	sprintf@f+1,f,c
  1565  001022                     	if	0	;tblptru may be non-zero
  1566  001022                     	endif
  1567  001022                     	if	0	;tblptru may be non-zero
  1568  001022                     	endif
  1569  001022  0008               	tblrd		*
  1570  001024  CFF5 F023          	movff	tablat,sprintf@c
  1571  001028  5023               	movf	sprintf@c,w,c
  1572                           
  1573                           ; Switch size 1, requested type "space"
  1574                           ; Number of cases is 2, Range of values is 0 to 117
  1575                           ; switch strategies available:
  1576                           ; Name         Instructions Cycles
  1577                           ; simple_byte            7     4 (average)
  1578                           ;	Chosen strategy is simple_byte
  1579  00102A  0A00               	xorlw	0	; case 0
  1580  00102C  B4D8               	btfsc	status,2,c
  1581  00102E  D0B0               	goto	l2222
  1582  001030  0A75               	xorlw	117	; case 117
  1583  001032  B4D8               	btfsc	status,2,c
  1584  001034  D7ED               	goto	l2164
  1585  001036  D09E               	goto	l2220
  1586  001038                     l2170:
  1587                           
  1588                           ;doprnt.c: 1273: {
  1589                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1590  001038  C01B  FFD9         	movff	sprintf@ap,fsr2l
  1591  00103C  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  1592  001040  CFDE F01E          	movff	postinc2,sprintf@val
  1593  001044  CFDD F01F          	movff	postdec2,sprintf@val+1
  1594  001048  0E02               	movlw	2
  1595  00104A  261B               	addwf	sprintf@ap,f,c
  1596  00104C  0E00               	movlw	0
  1597  00104E  221C               	addwfc	sprintf@ap+1,f,c
  1598                           
  1599                           ;doprnt.c: 1287: }
  1600                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1601  001050  0E01               	movlw	1
  1602  001052  6E23               	movwf	sprintf@c,c
  1603  001054                     l2176:
  1604  001054  0E05               	movlw	5
  1605  001056  1823               	xorwf	sprintf@c,w,c
  1606  001058  B4D8               	btfsc	status,2,c
  1607  00105A  D016               	goto	l2188
  1608  00105C  D001               	goto	l2180
  1609  00105E  D014               	goto	l2188
  1610  001060                     l2180:
  1611                           
  1612                           ;doprnt.c: 1306: if(val < dpowers[c])
  1613  001060  5023               	movf	sprintf@c,w,c
  1614  001062  0D02               	mullw	2
  1615  001064  0E01               	movlw	low _dpowers
  1616  001066  24F3               	addwf	prodl,w,c
  1617  001068  6EF6               	movwf	tblptrl,c
  1618  00106A  0E0F               	movlw	high _dpowers
  1619  00106C  20F4               	addwfc	prodh,w,c
  1620  00106E  6EF7               	movwf	tblptrh,c
  1621  001070                     	if	0	;There are less than 3 active tblptr bytes
  1622  001070                     	endif
  1623  001070  0009               	tblrd		*+
  1624  001072  50F5               	movf	tablat,w,c
  1625  001074  5C1E               	subwf	sprintf@val,w,c
  1626  001076  0009               	tblrd		*+
  1627  001078  50F5               	movf	tablat,w,c
  1628  00107A  581F               	subwfb	sprintf@val+1,w,c
  1629  00107C  A0D8               	btfss	status,0,c
  1630  00107E  D004               	goto	l2188
  1631  001080  D001               	goto	l2184
  1632                           
  1633                           ;doprnt.c: 1307: break;
  1634  001082  D002               	goto	l2188
  1635  001084                     l2184:
  1636  001084  2A23               	incf	sprintf@c,f,c
  1637  001086  D7E6               	goto	l2176
  1638  001088                     l2188:
  1639                           
  1640                           ;doprnt.c: 1381: if(width > c)
  1641  001088  0E80               	movlw	128
  1642  00108A  BE23               	btfsc	sprintf@c,7,c
  1643  00108C  0E7F               	movlw	127
  1644  00108E  6E17               	movwf	??_sprintf& (0+255),c
  1645  001090  5021               	movf	sprintf@width,w,c
  1646  001092  5C23               	subwf	sprintf@c,w,c
  1647  001094  5022               	movf	sprintf@width+1,w,c
  1648  001096  0A80               	xorlw	128
  1649  001098  5817               	subwfb	??_sprintf& (0+255),w,c
  1650  00109A  B0D8               	btfsc	status,0,c
  1651  00109C  D007               	goto	l2192
  1652                           
  1653                           ;doprnt.c: 1382: width -= c;
  1654  00109E  5023               	movf	sprintf@c,w,c
  1655  0010A0  5E21               	subwf	sprintf@width,f,c
  1656  0010A2  0E00               	movlw	0
  1657  0010A4  BE23               	btfsc	sprintf@c,7,c
  1658  0010A6  0EFF               	movlw	255
  1659  0010A8  5A22               	subwfb	sprintf@width+1,f,c
  1660  0010AA  D005               	goto	l2194
  1661  0010AC                     l2192:
  1662                           
  1663                           ;doprnt.c: 1383: else
  1664                           ;doprnt.c: 1384: width = 0;
  1665  0010AC  0E00               	movlw	0
  1666  0010AE  6E22               	movwf	sprintf@width+1,c
  1667  0010B0  0E00               	movlw	0
  1668  0010B2  6E21               	movwf	sprintf@width,c
  1669  0010B4  D000               	goto	l2194
  1670  0010B6                     l2194:
  1671                           
  1672                           ;doprnt.c: 1387: if(flag & 0x04) {
  1673  0010B6  A41D               	btfss	sprintf@flag,2,c
  1674  0010B8  D015               	goto	l2204
  1675                           
  1676                           ;doprnt.c: 1415: if(width)
  1677  0010BA  5021               	movf	sprintf@width,w,c
  1678  0010BC  1022               	iorwf	sprintf@width+1,w,c
  1679  0010BE  B4D8               	btfsc	status,2,c
  1680  0010C0  D026               	goto	l273
  1681  0010C2                     l2198:
  1682                           
  1683                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1684  0010C2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1685  0010C6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1686  0010CA  0E30               	movlw	48
  1687  0010CC  6EDF               	movwf	indf2,c
  1688  0010CE  4A0D               	infsnz	sprintf@sp,f,c
  1689  0010D0  2A0E               	incf	sprintf@sp+1,f,c
  1690                           
  1691                           ;doprnt.c: 1418: while(--width);
  1692  0010D2  0621               	decf	sprintf@width,f,c
  1693  0010D4  A0D8               	btfss	status,0,c
  1694  0010D6  0622               	decf	sprintf@width+1,f,c
  1695  0010D8  5021               	movf	sprintf@width,w,c
  1696  0010DA  1022               	iorwf	sprintf@width+1,w,c
  1697  0010DC  B4D8               	btfsc	status,2,c
  1698  0010DE  D017               	goto	l273
  1699  0010E0  D7F0               	goto	l2198
  1700                           
  1701                           ;doprnt.c: 1420: } else
  1702  0010E2  D015               	goto	l273
  1703  0010E4                     l2204:
  1704                           
  1705                           ;doprnt.c: 1422: {
  1706                           ;doprnt.c: 1424: if(width
  1707                           ;doprnt.c: 1428: )
  1708  0010E4  5021               	movf	sprintf@width,w,c
  1709  0010E6  1022               	iorwf	sprintf@width+1,w,c
  1710  0010E8  B4D8               	btfsc	status,2,c
  1711  0010EA  D011               	goto	l273
  1712  0010EC                     l2206:
  1713                           
  1714                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1715  0010EC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1716  0010F0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1717  0010F4  0E20               	movlw	32
  1718  0010F6  6EDF               	movwf	indf2,c
  1719  0010F8  4A0D               	infsnz	sprintf@sp,f,c
  1720  0010FA  2A0E               	incf	sprintf@sp+1,f,c
  1721                           
  1722                           ;doprnt.c: 1431: while(--width);
  1723  0010FC  0621               	decf	sprintf@width,f,c
  1724  0010FE  A0D8               	btfss	status,0,c
  1725  001100  0622               	decf	sprintf@width+1,f,c
  1726  001102  5021               	movf	sprintf@width,w,c
  1727  001104  1022               	iorwf	sprintf@width+1,w,c
  1728  001106  B4D8               	btfsc	status,2,c
  1729  001108  D002               	goto	l273
  1730  00110A  D7F0               	goto	l2206
  1731  00110C  D000               	goto	l273
  1732  00110E                     l273:
  1733                           
  1734                           ;doprnt.c: 1469: }
  1735                           ;doprnt.c: 1472: prec = c;
  1736  00110E  C023  F020         	movff	sprintf@c,sprintf@prec
  1737                           
  1738                           ;doprnt.c: 1474: while(prec--) {
  1739  001112  D02A               	goto	l2218
  1740  001114                     l2212:
  1741                           
  1742                           ;doprnt.c: 1478: {
  1743                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1744  001114  5020               	movf	sprintf@prec,w,c
  1745  001116  0D02               	mullw	2
  1746  001118  0E01               	movlw	low _dpowers
  1747  00111A  24F3               	addwf	prodl,w,c
  1748  00111C  6EF6               	movwf	tblptrl,c
  1749  00111E  0E0F               	movlw	high _dpowers
  1750  001120  20F4               	addwfc	prodh,w,c
  1751  001122  6EF7               	movwf	tblptrh,c
  1752  001124                     	if	0	;There are less than 3 active tblptr bytes
  1753  001124                     	endif
  1754  001124  0009               	tblrd		*+
  1755  001126  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1756  00112A  000A               	tblrd		*-
  1757  00112C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1758  001130  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  1759  001134  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1760  001138  EC81  F00D         	call	___lwdiv	;wreg free
  1761  00113C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1762  001140  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1763  001144  0E00               	movlw	0
  1764  001146  6E0B               	movwf	___lwmod@divisor+1,c
  1765  001148  0E0A               	movlw	10
  1766  00114A  6E0A               	movwf	___lwmod@divisor,c
  1767  00114C  ECD9  F00D         	call	___lwmod	;wreg free
  1768  001150  5008               	movf	?___lwmod,w,c
  1769  001152  0F30               	addlw	48
  1770  001154  6E23               	movwf	sprintf@c,c
  1771                           
  1772                           ;doprnt.c: 1523: }
  1773                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1774  001156  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1775  00115A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1776  00115E  C023  FFDF         	movff	sprintf@c,indf2
  1777  001162  4A0D               	infsnz	sprintf@sp,f,c
  1778  001164  2A0E               	incf	sprintf@sp+1,f,c
  1779  001166  D000               	goto	l2218
  1780  001168                     l2218:
  1781  001168  0620               	decf	sprintf@prec,f,c
  1782  00116A  2820               	incf	sprintf@prec,w,c
  1783  00116C  B4D8               	btfsc	status,2,c
  1784  00116E  D002               	goto	l2220
  1785  001170  D7D1               	goto	l2212
  1786  001172  D000               	goto	l2220
  1787  001174                     l2220:
  1788  001174  C00F  FFF6         	movff	sprintf@f,tblptrl
  1789  001178  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1790  00117C  4A0F               	infsnz	sprintf@f,f,c
  1791  00117E  2A10               	incf	sprintf@f+1,f,c
  1792  001180                     	if	0	;tblptru may be non-zero
  1793  001180                     	endif
  1794  001180                     	if	0	;tblptru may be non-zero
  1795  001180                     	endif
  1796  001180  0008               	tblrd		*
  1797  001182  CFF5 F023          	movff	tablat,sprintf@c
  1798  001186  5023               	movf	sprintf@c,w,c
  1799  001188  B4D8               	btfsc	status,2,c
  1800  00118A  D002               	goto	l2222
  1801  00118C  D6DC               	goto	l2138
  1802  00118E  D000               	goto	l2222
  1803  001190                     l2222:
  1804                           
  1805                           ;doprnt.c: 1538: *sp = 0;
  1806  001190  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1807  001194  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1808  001198  0E00               	movlw	0
  1809  00119A  6EDF               	movwf	indf2,c
  1810  00119C  0012               	return	
  1811                           
  1812                           ;doprnt.c: 1540: return 0;
  1813                           ;	Return value of _sprintf is never used
  1814  00119E  0012               	return		;funcret
  1815  0011A0                     __end_of_sprintf:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           prodh	equ	0xFF4
  1822                           prodl	equ	0xFF3
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           postdec1	equ	0xFE5
  1826                           fsr1l	equ	0xFE1
  1827                           indf2	equ	0xFDF
  1828                           postinc2	equ	0xFDE
  1829                           postdec2	equ	0xFDD
  1830                           fsr2h	equ	0xFDA
  1831                           fsr2l	equ	0xFD9
  1832                           status	equ	0xFD8
  1833                           
  1834 ;; *************** function _isdigit *****************
  1835 ;; Defined at:
  1836 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  c               1    wreg     unsigned char 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  c               1    2[COMRAM] unsigned char 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;		None               void
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1853 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1854 ;;Total ram usage:        3 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_sprintf
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text6
  1864  001D80                     __ptext6:
  1865                           	opt stack 0
  1866  001D80                     _isdigit:
  1867                           	opt stack 28
  1868                           
  1869                           ;incstack = 0
  1870                           ;isdigit@c stored from wreg
  1871  001D80  6E03               	movwf	isdigit@c,c
  1872  001D82  0E00               	movlw	0
  1873  001D84  6E02               	movwf	_isdigit$1833,c
  1874  001D86  0E3A               	movlw	58
  1875  001D88  6003               	cpfslt	isdigit@c,c
  1876  001D8A  D006               	goto	l1926
  1877  001D8C  0E2F               	movlw	47
  1878  001D8E  6403               	cpfsgt	isdigit@c,c
  1879  001D90  D003               	goto	l1926
  1880  001D92  0E01               	movlw	1
  1881  001D94  6E02               	movwf	_isdigit$1833,c
  1882  001D96  D000               	goto	l1926
  1883  001D98                     l1926:
  1884  001D98  C002  F001         	movff	_isdigit$1833,??_isdigit
  1885  001D9C  3001               	rrcf	??_isdigit,w,c
  1886  001D9E  0012               	return	
  1887  001DA0  0012               	return		;funcret
  1888  001DA2                     __end_of_isdigit:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           indf2	equ	0xFDF
  1901                           postinc2	equ	0xFDE
  1902                           postdec2	equ	0xFDD
  1903                           fsr2h	equ	0xFDA
  1904                           fsr2l	equ	0xFD9
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function ___wmul *****************
  1908 ;; Defined at:
  1909 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  multiplier      2    0[COMRAM] unsigned int 
  1912 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  product         2    4[COMRAM] unsigned int 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2    0[COMRAM] unsigned int 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0, prodl, prodh
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1928 ;;Total ram usage:        6 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_sprintf
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text7
  1938  001D34                     __ptext7:
  1939                           	opt stack 0
  1940  001D34                     ___wmul:
  1941                           	opt stack 28
  1942                           
  1943                           ;incstack = 0
  1944  001D34  5001               	movf	___wmul@multiplier,w,c
  1945  001D36  0203               	mulwf	___wmul@multiplicand,c
  1946  001D38  CFF3 F005          	movff	prodl,___wmul@product
  1947  001D3C  CFF4 F006          	movff	prodh,___wmul@product+1
  1948  001D40  5001               	movf	___wmul@multiplier,w,c
  1949  001D42  0204               	mulwf	___wmul@multiplicand+1,c
  1950  001D44  50F3               	movf	prodl,w,c
  1951  001D46  2606               	addwf	___wmul@product+1,f,c
  1952  001D48  5002               	movf	___wmul@multiplier+1,w,c
  1953  001D4A  0203               	mulwf	___wmul@multiplicand,c
  1954  001D4C  50F3               	movf	prodl,w,c
  1955  001D4E  2606               	addwf	___wmul@product+1,f,c
  1956  001D50  C005  F001         	movff	___wmul@product,?___wmul
  1957  001D54  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1958  001D58  0012               	return	
  1959  001D5A  0012               	return		;funcret
  1960  001D5C                     __end_of___wmul:
  1961                           	opt stack 0
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           prodh	equ	0xFF4
  1967                           prodl	equ	0xFF3
  1968                           postinc0	equ	0xFEE
  1969                           wreg	equ	0xFE8
  1970                           postdec1	equ	0xFE5
  1971                           fsr1l	equ	0xFE1
  1972                           indf2	equ	0xFDF
  1973                           postinc2	equ	0xFDE
  1974                           postdec2	equ	0xFDD
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function ___lwmod *****************
  1980 ;; Defined at:
  1981 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  dividend        2    7[COMRAM] unsigned int 
  1984 ;;  divisor         2    9[COMRAM] unsigned int 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  counter         1   11[COMRAM] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  2    7[COMRAM] unsigned int 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1999 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2000 ;;Total ram usage:        5 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_sprintf
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text8
  2010  001BB2                     __ptext8:
  2011                           	opt stack 0
  2012  001BB2                     ___lwmod:
  2013                           	opt stack 28
  2014                           
  2015                           ;incstack = 0
  2016  001BB2  500A               	movf	___lwmod@divisor,w,c
  2017  001BB4  100B               	iorwf	___lwmod@divisor+1,w,c
  2018  001BB6  B4D8               	btfsc	status,2,c
  2019  001BB8  D01D               	goto	l927
  2020  001BBA  0E01               	movlw	1
  2021  001BBC  6E0C               	movwf	___lwmod@counter,c
  2022  001BBE  D005               	goto	l2008
  2023  001BC0                     l2006:
  2024  001BC0  90D8               	bcf	status,0,c
  2025  001BC2  360A               	rlcf	___lwmod@divisor,f,c
  2026  001BC4  360B               	rlcf	___lwmod@divisor+1,f,c
  2027  001BC6  2A0C               	incf	___lwmod@counter,f,c
  2028  001BC8  D000               	goto	l2008
  2029  001BCA                     l2008:
  2030  001BCA  BE0B               	btfsc	___lwmod@divisor+1,7,c
  2031  001BCC  D002               	goto	l2010
  2032  001BCE  D7F8               	goto	l2006
  2033  001BD0  D000               	goto	l2010
  2034  001BD2                     l2010:
  2035  001BD2  500A               	movf	___lwmod@divisor,w,c
  2036  001BD4  5C08               	subwf	___lwmod@dividend,w,c
  2037  001BD6  500B               	movf	___lwmod@divisor+1,w,c
  2038  001BD8  5809               	subwfb	___lwmod@dividend+1,w,c
  2039  001BDA  A0D8               	btfss	status,0,c
  2040  001BDC  D005               	goto	l2014
  2041  001BDE  500A               	movf	___lwmod@divisor,w,c
  2042  001BE0  5E08               	subwf	___lwmod@dividend,f,c
  2043  001BE2  500B               	movf	___lwmod@divisor+1,w,c
  2044  001BE4  5A09               	subwfb	___lwmod@dividend+1,f,c
  2045  001BE6  D000               	goto	l2014
  2046  001BE8                     l2014:
  2047  001BE8  90D8               	bcf	status,0,c
  2048  001BEA  320B               	rrcf	___lwmod@divisor+1,f,c
  2049  001BEC  320A               	rrcf	___lwmod@divisor,f,c
  2050  001BEE  2E0C               	decfsz	___lwmod@counter,f,c
  2051  001BF0  D7F0               	goto	l2010
  2052  001BF2  D000               	goto	l927
  2053  001BF4                     l927:
  2054  001BF4  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2055  001BF8  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2056  001BFC  0012               	return		;funcret
  2057  001BFE                     __end_of___lwmod:
  2058                           	opt stack 0
  2059                           tblptru	equ	0xFF8
  2060                           tblptrh	equ	0xFF7
  2061                           tblptrl	equ	0xFF6
  2062                           tablat	equ	0xFF5
  2063                           prodh	equ	0xFF4
  2064                           prodl	equ	0xFF3
  2065                           postinc0	equ	0xFEE
  2066                           wreg	equ	0xFE8
  2067                           postdec1	equ	0xFE5
  2068                           fsr1l	equ	0xFE1
  2069                           indf2	equ	0xFDF
  2070                           postinc2	equ	0xFDE
  2071                           postdec2	equ	0xFDD
  2072                           fsr2h	equ	0xFDA
  2073                           fsr2l	equ	0xFD9
  2074                           status	equ	0xFD8
  2075                           
  2076 ;; *************** function ___lwdiv *****************
  2077 ;; Defined at:
  2078 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  dividend        2    0[COMRAM] unsigned int 
  2081 ;;  divisor         2    2[COMRAM] unsigned int 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  quotient        2    4[COMRAM] unsigned int 
  2084 ;;  counter         1    6[COMRAM] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2    0[COMRAM] unsigned int 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;Total ram usage:        7 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_sprintf
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text9
  2108  001B02                     __ptext9:
  2109                           	opt stack 0
  2110  001B02                     ___lwdiv:
  2111                           	opt stack 28
  2112                           
  2113                           ;incstack = 0
  2114  001B02  0E00               	movlw	0
  2115  001B04  6E06               	movwf	___lwdiv@quotient+1,c
  2116  001B06  0E00               	movlw	0
  2117  001B08  6E05               	movwf	___lwdiv@quotient,c
  2118  001B0A  5003               	movf	___lwdiv@divisor,w,c
  2119  001B0C  1004               	iorwf	___lwdiv@divisor+1,w,c
  2120  001B0E  B4D8               	btfsc	status,2,c
  2121  001B10  D021               	goto	l917
  2122  001B12  0E01               	movlw	1
  2123  001B14  6E07               	movwf	___lwdiv@counter,c
  2124  001B16  D005               	goto	l1988
  2125  001B18                     l1986:
  2126  001B18  90D8               	bcf	status,0,c
  2127  001B1A  3603               	rlcf	___lwdiv@divisor,f,c
  2128  001B1C  3604               	rlcf	___lwdiv@divisor+1,f,c
  2129  001B1E  2A07               	incf	___lwdiv@counter,f,c
  2130  001B20  D000               	goto	l1988
  2131  001B22                     l1988:
  2132  001B22  BE04               	btfsc	___lwdiv@divisor+1,7,c
  2133  001B24  D002               	goto	l1990
  2134  001B26  D7F8               	goto	l1986
  2135  001B28  D000               	goto	l1990
  2136  001B2A                     l1990:
  2137  001B2A  90D8               	bcf	status,0,c
  2138  001B2C  3605               	rlcf	___lwdiv@quotient,f,c
  2139  001B2E  3606               	rlcf	___lwdiv@quotient+1,f,c
  2140  001B30  5003               	movf	___lwdiv@divisor,w,c
  2141  001B32  5C01               	subwf	___lwdiv@dividend,w,c
  2142  001B34  5004               	movf	___lwdiv@divisor+1,w,c
  2143  001B36  5802               	subwfb	___lwdiv@dividend+1,w,c
  2144  001B38  A0D8               	btfss	status,0,c
  2145  001B3A  D006               	goto	l1998
  2146  001B3C  5003               	movf	___lwdiv@divisor,w,c
  2147  001B3E  5E01               	subwf	___lwdiv@dividend,f,c
  2148  001B40  5004               	movf	___lwdiv@divisor+1,w,c
  2149  001B42  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2150  001B44  8005               	bsf	___lwdiv@quotient,0,c
  2151  001B46  D000               	goto	l1998
  2152  001B48                     l1998:
  2153  001B48  90D8               	bcf	status,0,c
  2154  001B4A  3204               	rrcf	___lwdiv@divisor+1,f,c
  2155  001B4C  3203               	rrcf	___lwdiv@divisor,f,c
  2156  001B4E  2E07               	decfsz	___lwdiv@counter,f,c
  2157  001B50  D7EC               	goto	l1990
  2158  001B52  D000               	goto	l917
  2159  001B54                     l917:
  2160  001B54  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2161  001B58  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2162  001B5C  0012               	return		;funcret
  2163  001B5E                     __end_of___lwdiv:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           postinc0	equ	0xFEE
  2172                           wreg	equ	0xFE8
  2173                           postdec1	equ	0xFE5
  2174                           fsr1l	equ	0xFE1
  2175                           indf2	equ	0xFDF
  2176                           postinc2	equ	0xFDE
  2177                           postdec2	equ	0xFDD
  2178                           fsr2h	equ	0xFDA
  2179                           fsr2l	equ	0xFD9
  2180                           status	equ	0xFD8
  2181                           
  2182 ;; *************** function _lcd_putrs *****************
  2183 ;; Defined at:
  2184 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  2187 ;;		 -> STR_5(7), STR_4(7), buffer2(20), STR_1(7), 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;		None               void
  2192 ;; Registers used:
  2193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2202 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;Total ram usage:        2 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    4
  2206 ;; This function calls:
  2207 ;;		_lcd_putc
  2208 ;; This function is called by:
  2209 ;;		_caratula
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text10
  2214  001B5E                     __ptext10:
  2215                           	opt stack 0
  2216  001B5E                     _lcd_putrs:
  2217                           	opt stack 25
  2218                           
  2219                           ;unmc_lcd_216.c: 223: while(*ptr){
  2220                           
  2221                           ;incstack = 0
  2222  001B5E  D015               	goto	l2134
  2223  001B60                     l2130:
  2224                           
  2225                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  2226  001B60  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2227  001B64  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2228  001B68  6AF8               	clrf	tblptru,c
  2229  001B6A  0E0E               	movlw	(high __ramtop+-1)
  2230  001B6C  64F7               	cpfsgt	tblptrh,c
  2231  001B6E  D003               	bra	u1417
  2232  001B70  0008               	tblrd		*
  2233  001B72  50F5               	movf	tablat,w,c
  2234  001B74  D005               	bra	u1410
  2235  001B76                     u1417:
  2236  001B76  CFF6 FFE9          	movff	tblptrl,fsr0l
  2237  001B7A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2238  001B7E  50EF               	movf	indf0,w,c
  2239  001B80                     u1410:
  2240  001B80  ECFF  F00D         	call	_lcd_putc
  2241  001B84  4A09               	infsnz	lcd_putrs@ptr,f,c
  2242  001B86  2A0A               	incf	lcd_putrs@ptr+1,f,c
  2243  001B88  D000               	goto	l2134
  2244  001B8A                     l2134:
  2245  001B8A  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2246  001B8E  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2247  001B92  6AF8               	clrf	tblptru,c
  2248  001B94  0E0E               	movlw	(high __ramtop+-1)
  2249  001B96  64F7               	cpfsgt	tblptrh,c
  2250  001B98  D003               	bra	u1427
  2251  001B9A  0008               	tblrd		*
  2252  001B9C  50F5               	movf	tablat,w,c
  2253  001B9E  D005               	bra	u1420
  2254  001BA0                     u1427:
  2255  001BA0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2256  001BA4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2257  001BA8  50EF               	movf	indf0,w,c
  2258  001BAA                     u1420:
  2259  001BAA  0900               	iorlw	0
  2260  001BAC  A4D8               	btfss	status,2,c
  2261  001BAE  D7D8               	goto	l2130
  2262  001BB0  0012               	return		;funcret
  2263  001BB2                     __end_of_lcd_putrs:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           indf0	equ	0xFEF
  2272                           postinc0	equ	0xFEE
  2273                           fsr0h	equ	0xFEA
  2274                           fsr0l	equ	0xFE9
  2275                           wreg	equ	0xFE8
  2276                           postdec1	equ	0xFE5
  2277                           fsr1l	equ	0xFE1
  2278                           indf2	equ	0xFDF
  2279                           postinc2	equ	0xFDE
  2280                           postdec2	equ	0xFDD
  2281                           fsr2h	equ	0xFDA
  2282                           fsr2l	equ	0xFD9
  2283                           status	equ	0xFD8
  2284                           
  2285 ;; *************** function _lcd_putc *****************
  2286 ;; Defined at:
  2287 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  c               1    wreg     unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  c               1    7[COMRAM] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;		None               void
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;Total ram usage:        1 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    3
  2308 ;; This function calls:
  2309 ;;		_lcd_gotoxy
  2310 ;;		_lcd_send_byte
  2311 ;; This function is called by:
  2312 ;;		_lcd_putrs
  2313 ;;		_lcd_puts
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text11
  2318  001BFE                     __ptext11:
  2319                           	opt stack 0
  2320  001BFE                     _lcd_putc:
  2321                           	opt stack 25
  2322                           
  2323                           ;incstack = 0
  2324                           ;lcd_putc@c stored from wreg
  2325  001BFE  6E08               	movwf	lcd_putc@c,c
  2326                           
  2327                           ;unmc_lcd_216.c: 173: switch(c){
  2328  001C00  D018               	goto	l1916
  2329  001C02                     l1906:
  2330                           
  2331                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  2332  001C02  0E01               	movlw	1
  2333  001C04  6E03               	movwf	lcd_send_byte@n,c
  2334  001C06  0E00               	movlw	0
  2335  001C08  EC6B  F00E         	call	_lcd_send_byte
  2336                           
  2337                           ;unmc_lcd_216.c: 176: break;
  2338  001C0C  0012               	return	
  2339  001C0E                     l1908:
  2340                           
  2341                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  2342  001C0E  0E02               	movlw	2
  2343  001C10  6E05               	movwf	lcd_gotoxy@y,c
  2344  001C12  0E01               	movlw	1
  2345  001C14  ECAE  F00E         	call	_lcd_gotoxy
  2346                           
  2347                           ;unmc_lcd_216.c: 179: break;
  2348  001C18  0012               	return	
  2349  001C1A                     l1910:
  2350                           
  2351                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  2352  001C1A  0E10               	movlw	16
  2353  001C1C  6E03               	movwf	lcd_send_byte@n,c
  2354  001C1E  0E00               	movlw	0
  2355  001C20  EC6B  F00E         	call	_lcd_send_byte
  2356                           
  2357                           ;unmc_lcd_216.c: 182: break;
  2358  001C24  0012               	return	
  2359  001C26                     l1912:
  2360                           
  2361                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  2362  001C26  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  2363  001C2A  0E01               	movlw	1
  2364  001C2C  EC6B  F00E         	call	_lcd_send_byte
  2365                           
  2366                           ;unmc_lcd_216.c: 186: }
  2367                           
  2368                           ;unmc_lcd_216.c: 185: break;
  2369  001C30  0012               	return	
  2370  001C32                     l1916:
  2371  001C32  5008               	movf	lcd_putc@c,w,c
  2372                           
  2373                           ; Switch size 1, requested type "space"
  2374                           ; Number of cases is 3, Range of values is 8 to 12
  2375                           ; switch strategies available:
  2376                           ; Name         Instructions Cycles
  2377                           ; simple_byte           10     6 (average)
  2378                           ;	Chosen strategy is simple_byte
  2379  001C34  0A08               	xorlw	8	; case 8
  2380  001C36  B4D8               	btfsc	status,2,c
  2381  001C38  D7F0               	goto	l1910
  2382  001C3A  0A02               	xorlw	2	; case 10
  2383  001C3C  B4D8               	btfsc	status,2,c
  2384  001C3E  D7E7               	goto	l1908
  2385  001C40  0A06               	xorlw	6	; case 12
  2386  001C42  B4D8               	btfsc	status,2,c
  2387  001C44  D7DE               	goto	l1906
  2388  001C46  D7EF               	goto	l1912
  2389  001C48  0012               	return		;funcret
  2390  001C4A                     __end_of_lcd_putc:
  2391                           	opt stack 0
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           prodh	equ	0xFF4
  2397                           prodl	equ	0xFF3
  2398                           indf0	equ	0xFEF
  2399                           postinc0	equ	0xFEE
  2400                           fsr0h	equ	0xFEA
  2401                           fsr0l	equ	0xFE9
  2402                           wreg	equ	0xFE8
  2403                           postdec1	equ	0xFE5
  2404                           fsr1l	equ	0xFE1
  2405                           indf2	equ	0xFDF
  2406                           postinc2	equ	0xFDE
  2407                           postdec2	equ	0xFDD
  2408                           fsr2h	equ	0xFDA
  2409                           fsr2l	equ	0xFD9
  2410                           status	equ	0xFD8
  2411                           
  2412 ;; *************** function _lcd_gotoxy *****************
  2413 ;; Defined at:
  2414 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  x               1    wreg     unsigned char 
  2417 ;;  y               1    4[COMRAM] unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  x               1    5[COMRAM] unsigned char 
  2420 ;;  address         1    6[COMRAM] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;		None               void
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2430 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2433 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2434 ;;Total ram usage:        3 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    2
  2437 ;; This function calls:
  2438 ;;		_lcd_send_byte
  2439 ;; This function is called by:
  2440 ;;		_caratula
  2441 ;;		_main
  2442 ;;		_lcd_putc
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text12
  2447  001D5C                     __ptext12:
  2448                           	opt stack 0
  2449  001D5C                     _lcd_gotoxy:
  2450                           	opt stack 28
  2451                           
  2452                           ;incstack = 0
  2453                           ;lcd_gotoxy@x stored from wreg
  2454  001D5C  6E06               	movwf	lcd_gotoxy@x,c
  2455                           
  2456                           ;unmc_lcd_216.c: 159: int8 address;
  2457                           ;unmc_lcd_216.c: 161: if(y != 1)
  2458  001D5E  0405               	decf	lcd_gotoxy@y,w,c
  2459  001D60  B4D8               	btfsc	status,2,c
  2460  001D62  D002               	goto	l1762
  2461                           
  2462                           ;unmc_lcd_216.c: 162: address = 0x40;
  2463  001D64  0E40               	movlw	64
  2464  001D66  D001               	goto	L1
  2465  001D68                     l1762:
  2466                           
  2467                           ;unmc_lcd_216.c: 163: else
  2468                           ;unmc_lcd_216.c: 164: address=0;
  2469  001D68  0E00               	movlw	0
  2470  001D6A                     L1:
  2471  001D6A  6E07               	movwf	lcd_gotoxy@address,c
  2472  001D6C  D000               	goto	l1764
  2473  001D6E                     l1764:
  2474                           
  2475                           ;unmc_lcd_216.c: 166: address += x-1;
  2476  001D6E  0406               	decf	lcd_gotoxy@x,w,c
  2477  001D70  2607               	addwf	lcd_gotoxy@address,f,c
  2478                           
  2479                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2480  001D72  5007               	movf	lcd_gotoxy@address,w,c
  2481  001D74  0980               	iorlw	128
  2482  001D76  6E03               	movwf	lcd_send_byte@n,c
  2483  001D78  0E00               	movlw	0
  2484  001D7A  EC6B  F00E         	call	_lcd_send_byte
  2485  001D7E  0012               	return		;funcret
  2486  001D80                     __end_of_lcd_gotoxy:
  2487                           	opt stack 0
  2488                           tblptru	equ	0xFF8
  2489                           tblptrh	equ	0xFF7
  2490                           tblptrl	equ	0xFF6
  2491                           tablat	equ	0xFF5
  2492                           prodh	equ	0xFF4
  2493                           prodl	equ	0xFF3
  2494                           indf0	equ	0xFEF
  2495                           postinc0	equ	0xFEE
  2496                           fsr0h	equ	0xFEA
  2497                           fsr0l	equ	0xFE9
  2498                           wreg	equ	0xFE8
  2499                           postdec1	equ	0xFE5
  2500                           fsr1l	equ	0xFE1
  2501                           indf2	equ	0xFDF
  2502                           postinc2	equ	0xFDE
  2503                           postdec2	equ	0xFDD
  2504                           fsr2h	equ	0xFDA
  2505                           fsr2l	equ	0xFD9
  2506                           status	equ	0xFD8
  2507                           
  2508 ;; *************** function _Setup *****************
  2509 ;; Defined at:
  2510 ;;		line 67 in file "main.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;		None               void
  2517 ;; Registers used:
  2518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    3
  2531 ;; This function calls:
  2532 ;;		_Write_RTC
  2533 ;;		_lcd_comand
  2534 ;;		_lcd_init
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text13
  2541  001C4A                     __ptext13:
  2542                           	opt stack 0
  2543  001C4A                     _Setup:
  2544                           	opt stack 27
  2545                           
  2546                           ;main.c: 69: OSCTUNEbits.INTSRC=1;
  2547                           
  2548                           ;incstack = 0
  2549  001C4A  8E9B               	bsf	3995,7,c	;volatile
  2550                           
  2551                           ;main.c: 70: OSCTUNEbits.PLLEN=0;
  2552  001C4C  9C9B               	bcf	3995,6,c	;volatile
  2553                           
  2554                           ;main.c: 71: OSCCONbits.IRCF0=1;
  2555  001C4E  88D3               	bsf	4051,4,c	;volatile
  2556                           
  2557                           ;main.c: 72: OSCCONbits.IRCF1=1;
  2558  001C50  8AD3               	bsf	4051,5,c	;volatile
  2559                           
  2560                           ;main.c: 73: OSCCONbits.IRCF2=1;
  2561  001C52  8CD3               	bsf	4051,6,c	;volatile
  2562                           
  2563                           ;main.c: 74: OSCCONbits.SCS0=0;
  2564  001C54  90D3               	bcf	4051,0,c	;volatile
  2565                           
  2566                           ;main.c: 75: OSCCONbits.SCS1=0;
  2567  001C56  92D3               	bcf	4051,1,c	;volatile
  2568                           
  2569                           ;main.c: 76: TRISA = 0b11111111;
  2570  001C58  6892               	setf	3986,c	;volatile
  2571                           
  2572                           ;main.c: 77: TRISB = 0;
  2573  001C5A  0E00               	movlw	0
  2574  001C5C  6E93               	movwf	3987,c	;volatile
  2575                           
  2576                           ;main.c: 78: TRISC = 0b00000111;
  2577  001C5E  0E07               	movlw	7
  2578  001C60  6E94               	movwf	3988,c	;volatile
  2579                           
  2580                           ;main.c: 82: ANCON0=0b11111111;
  2581  001C62  010F               	movlb	15	; () banked
  2582  001C64  6948               	setf	72,b	;volatile
  2583                           
  2584                           ;main.c: 83: ANCON0=0b10010111;
  2585  001C66  0E97               	movlw	151
  2586  001C68  010F               	movlb	15	; () banked
  2587  001C6A  6F48               	movwf	72,b	;volatile
  2588                           
  2589                           ;main.c: 84: ADCON0=0b00101101;
  2590  001C6C  0E2D               	movlw	45
  2591  001C6E  6EC2               	movwf	4034,c	;volatile
  2592                           
  2593                           ;main.c: 85: ADCON1=0b00010000;
  2594  001C70  0E10               	movlw	16
  2595  001C72  6EC1               	movwf	4033,c	;volatile
  2596                           
  2597                           ; BSR set to: 15
  2598                           ;main.c: 86: RTCCFGbits.RTCEN=1;
  2599  001C74  010F               	movlb	15	; () banked
  2600  001C76  8F3F               	bsf	63,7,b	;volatile
  2601                           
  2602                           ; BSR set to: 15
  2603                           ;main.c: 87: RTCCFGbits.RTCWREN=1;
  2604  001C78  010F               	movlb	15	; () banked
  2605  001C7A  8B3F               	bsf	63,5,b	;volatile
  2606                           
  2607                           ; BSR set to: 15
  2608                           ;main.c: 88: T1CONbits.T1OSCEN=1;
  2609  001C7C  86CD               	bsf	4045,3,c	;volatile
  2610                           
  2611                           ; BSR set to: 15
  2612                           ;main.c: 89: Write_RTC();
  2613  001C7E  ECD0  F008         	call	_Write_RTC	;wreg free
  2614                           
  2615                           ;main.c: 90: lcd_init();
  2616  001C82  ECCF  F00C         	call	_lcd_init	;wreg free
  2617                           
  2618                           ;main.c: 91: lcd_comand(0b00001111);
  2619  001C86  0E0F               	movlw	15
  2620  001C88  ECF6  F00E         	call	_lcd_comand
  2621                           
  2622                           ;main.c: 92: LATBbits.LATB1 = 0;;
  2623  001C8C  928A               	bcf	3978,1,c	;volatile
  2624                           
  2625                           ;main.c: 93: LATBbits.LATB0 = 0;;
  2626  001C8E  908A               	bcf	3978,0,c	;volatile
  2627  001C90  0012               	return		;funcret
  2628  001C92                     __end_of_Setup:
  2629                           	opt stack 0
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           prodh	equ	0xFF4
  2635                           prodl	equ	0xFF3
  2636                           indf0	equ	0xFEF
  2637                           postinc0	equ	0xFEE
  2638                           fsr0h	equ	0xFEA
  2639                           fsr0l	equ	0xFE9
  2640                           wreg	equ	0xFE8
  2641                           postdec1	equ	0xFE5
  2642                           fsr1l	equ	0xFE1
  2643                           indf2	equ	0xFDF
  2644                           postinc2	equ	0xFDE
  2645                           postdec2	equ	0xFDD
  2646                           fsr2h	equ	0xFDA
  2647                           fsr2l	equ	0xFD9
  2648                           status	equ	0xFD8
  2649                           
  2650 ;; *************** function _lcd_init *****************
  2651 ;; Defined at:
  2652 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  i               1    4[COMRAM] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;		None               void
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2670 ;;Total ram usage:        1 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    2
  2673 ;; This function calls:
  2674 ;;		_Delay1KTCYx
  2675 ;;		_lcd_send_byte
  2676 ;;		_lcd_send_nibble
  2677 ;; This function is called by:
  2678 ;;		_Setup
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text14
  2683  00199E                     __ptext14:
  2684                           	opt stack 0
  2685  00199E                     _lcd_init:
  2686                           	opt stack 27
  2687                           
  2688                           ;unmc_lcd_216.c: 120: int8 i;
  2689                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2690                           
  2691                           ;incstack = 0
  2692  00199E  9693               	bcf	3987,3,c	;volatile
  2693                           
  2694                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2695  0019A0  9493               	bcf	3987,2,c	;volatile
  2696                           
  2697                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2698  0019A2  968A               	bcf	3978,3,c	;volatile
  2699                           
  2700                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2701  0019A4  948A               	bcf	3978,2,c	;volatile
  2702                           
  2703                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2704  0019A6  9893               	bcf	3987,4,c	;volatile
  2705                           
  2706                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2707  0019A8  9A93               	bcf	3987,5,c	;volatile
  2708                           
  2709                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2710  0019AA  9C93               	bcf	3987,6,c	;volatile
  2711                           
  2712                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2713  0019AC  9E93               	bcf	3987,7,c	;volatile
  2714                           
  2715                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2716  0019AE  0E0A               	movlw	10
  2717  0019B0  ECDB  F00E         	call	_Delay1KTCYx
  2718                           
  2719                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2720  0019B4  0E0A               	movlw	10
  2721  0019B6  ECDB  F00E         	call	_Delay1KTCYx
  2722                           
  2723                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2724  0019BA  0E0A               	movlw	10
  2725  0019BC  ECDB  F00E         	call	_Delay1KTCYx
  2726                           
  2727                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2728  0019C0  0E00               	movlw	0
  2729  0019C2  6E05               	movwf	lcd_init@i,c
  2730  0019C4                     l2232:
  2731  0019C4  0E02               	movlw	2
  2732  0019C6  6405               	cpfsgt	lcd_init@i,c
  2733  0019C8  D001               	goto	l2236
  2734  0019CA  D008               	goto	l2242
  2735  0019CC                     l2236:
  2736                           
  2737                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2738  0019CC  0E03               	movlw	3
  2739  0019CE  EC0F  F00D         	call	_lcd_send_nibble
  2740                           
  2741                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2742  0019D2  0E0A               	movlw	10
  2743  0019D4  ECDB  F00E         	call	_Delay1KTCYx
  2744  0019D8  2A05               	incf	lcd_init@i,f,c
  2745  0019DA  D7F4               	goto	l2232
  2746  0019DC                     l2242:
  2747                           
  2748                           ;unmc_lcd_216.c: 146: }
  2749                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2750  0019DC  0E02               	movlw	2
  2751  0019DE  EC0F  F00D         	call	_lcd_send_nibble
  2752                           
  2753                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2754  0019E2  0E00               	movlw	0
  2755  0019E4  6E05               	movwf	lcd_init@i,c
  2756  0019E6  0E03               	movlw	3
  2757  0019E8  6405               	cpfsgt	lcd_init@i,c
  2758  0019EA  D002               	goto	l2250
  2759  0019EC  0012               	return	
  2760  0019EE  0012               	return	
  2761  0019F0                     l2250:
  2762                           
  2763                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2764  0019F0  5005               	movf	lcd_init@i,w,c
  2765  0019F2  0D01               	mullw	1
  2766  0019F4  0E0B               	movlw	low _LCD_INIT_STRING
  2767  0019F6  24F3               	addwf	prodl,w,c
  2768  0019F8  6EF6               	movwf	tblptrl,c
  2769  0019FA  0E0F               	movlw	high _LCD_INIT_STRING
  2770  0019FC  20F4               	addwfc	prodh,w,c
  2771  0019FE  6EF7               	movwf	tblptrh,c
  2772  001A00                     	if	0	;There are less than 3 active tblptr bytes
  2773  001A00                     	endif
  2774  001A00  0008               	tblrd		*
  2775  001A02  CFF5 F003          	movff	tablat,lcd_send_byte@n
  2776  001A06  0E00               	movlw	0
  2777  001A08  EC6B  F00E         	call	_lcd_send_byte
  2778                           
  2779                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2780  001A0C  0E0A               	movlw	10
  2781  001A0E  ECDB  F00E         	call	_Delay1KTCYx
  2782  001A12  2A05               	incf	lcd_init@i,f,c
  2783  001A14  0E03               	movlw	3
  2784  001A16  6405               	cpfsgt	lcd_init@i,c
  2785  001A18  D7EB               	goto	l2250
  2786  001A1A  0012               	return	
  2787  001A1C  0012               	return		;funcret
  2788  001A1E                     __end_of_lcd_init:
  2789                           	opt stack 0
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           prodh	equ	0xFF4
  2795                           prodl	equ	0xFF3
  2796                           indf0	equ	0xFEF
  2797                           postinc0	equ	0xFEE
  2798                           fsr0h	equ	0xFEA
  2799                           fsr0l	equ	0xFE9
  2800                           wreg	equ	0xFE8
  2801                           postdec1	equ	0xFE5
  2802                           fsr1l	equ	0xFE1
  2803                           indf2	equ	0xFDF
  2804                           postinc2	equ	0xFDE
  2805                           postdec2	equ	0xFDD
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _Delay1KTCYx *****************
  2811 ;; Defined at:
  2812 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  unit            1    wreg     unsigned char 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  unit            1    0[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;		None               void
  2819 ;; Registers used:
  2820 ;;		wreg
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;Total ram usage:        1 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_lcd_init
  2836 ;;		_DelayPORXLCD
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text15
  2841  001DB6                     __ptext15:
  2842                           	opt stack 0
  2843  001DB6                     _Delay1KTCYx:
  2844                           	opt stack 28
  2845                           
  2846                           ;incstack = 0
  2847                           ;Delay1KTCYx@unit stored from wreg
  2848  001DB6  6E01               	movwf	Delay1KTCYx@unit,c
  2849  001DB8  0EFA               	movlw	250
  2850  001DBA                     u1847:
  2851  001DBA  F000               	nop	
  2852  001DBC  2EE8               	decfsz	wreg,f,c
  2853  001DBE  D7FD               	goto	u1847
  2854  001DC0  2E01               	decfsz	Delay1KTCYx@unit,f,c
  2855  001DC2  D7FA               	goto	l1046
  2856  001DC4  0012               	return	
  2857  001DC6  0012               	return		;funcret
  2858  001DC8                     __end_of_Delay1KTCYx:
  2859                           	opt stack 0
  2860                           tblptru	equ	0xFF8
  2861                           tblptrh	equ	0xFF7
  2862                           tblptrl	equ	0xFF6
  2863                           tablat	equ	0xFF5
  2864                           prodh	equ	0xFF4
  2865                           prodl	equ	0xFF3
  2866                           indf0	equ	0xFEF
  2867                           postinc0	equ	0xFEE
  2868                           fsr0h	equ	0xFEA
  2869                           fsr0l	equ	0xFE9
  2870                           wreg	equ	0xFE8
  2871                           postdec1	equ	0xFE5
  2872                           fsr1l	equ	0xFE1
  2873                           indf2	equ	0xFDF
  2874                           postinc2	equ	0xFDE
  2875                           postdec2	equ	0xFDD
  2876                           fsr2h	equ	0xFDA
  2877                           fsr2l	equ	0xFD9
  2878                           status	equ	0xFD8
  2879                           
  2880 ;; *************** function _lcd_comand *****************
  2881 ;; Defined at:
  2882 ;;		line 189 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  d               1    wreg     unsigned char 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  d               1    4[COMRAM] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;		None               void
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2900 ;;Total ram usage:        1 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    2
  2903 ;; This function calls:
  2904 ;;		_lcd_send_byte
  2905 ;; This function is called by:
  2906 ;;		_caratula
  2907 ;;		_Setup
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text16
  2912  001DEC                     __ptext16:
  2913                           	opt stack 0
  2914  001DEC                     _lcd_comand:
  2915                           	opt stack 27
  2916                           
  2917                           ;incstack = 0
  2918                           ;lcd_comand@d stored from wreg
  2919  001DEC  6E05               	movwf	lcd_comand@d,c
  2920                           
  2921                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  2922  001DEE  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  2923  001DF2  0E00               	movlw	0
  2924  001DF4  EC6B  F00E         	call	_lcd_send_byte
  2925  001DF8  0012               	return		;funcret
  2926  001DFA                     __end_of_lcd_comand:
  2927                           	opt stack 0
  2928                           tblptru	equ	0xFF8
  2929                           tblptrh	equ	0xFF7
  2930                           tblptrl	equ	0xFF6
  2931                           tablat	equ	0xFF5
  2932                           prodh	equ	0xFF4
  2933                           prodl	equ	0xFF3
  2934                           indf0	equ	0xFEF
  2935                           postinc0	equ	0xFEE
  2936                           fsr0h	equ	0xFEA
  2937                           fsr0l	equ	0xFE9
  2938                           wreg	equ	0xFE8
  2939                           postdec1	equ	0xFE5
  2940                           fsr1l	equ	0xFE1
  2941                           indf2	equ	0xFDF
  2942                           postinc2	equ	0xFDE
  2943                           postdec2	equ	0xFDD
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _lcd_send_byte *****************
  2949 ;; Defined at:
  2950 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  address         1    wreg     unsigned char 
  2953 ;;  n               1    2[COMRAM] unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  address         1    3[COMRAM] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;		None               void
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2965 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2969 ;;Total ram usage:        2 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    1
  2972 ;; This function calls:
  2973 ;;		_Delay100TCYx
  2974 ;;		_lcd_send_nibble
  2975 ;; This function is called by:
  2976 ;;		_lcd_init
  2977 ;;		_lcd_gotoxy
  2978 ;;		_lcd_putc
  2979 ;;		_lcd_comand
  2980 ;;		_lcd_setcursor_vb
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text17
  2985  001CD6                     __ptext17:
  2986                           	opt stack 0
  2987  001CD6                     _lcd_send_byte:
  2988                           	opt stack 28
  2989                           
  2990                           ;incstack = 0
  2991                           ;lcd_send_byte@address stored from wreg
  2992  001CD6  6E04               	movwf	lcd_send_byte@address,c
  2993                           
  2994                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  2995  001CD8  968A               	bcf	3978,3,c	;volatile
  2996                           
  2997                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  2998  001CDA  0E02               	movlw	2
  2999  001CDC  ECE4  F00E         	call	_Delay100TCYx
  3000                           
  3001                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  3002  001CE0  9893               	bcf	3987,4,c	;volatile
  3003                           
  3004                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  3005  001CE2  9A93               	bcf	3987,5,c	;volatile
  3006                           
  3007                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  3008  001CE4  9C93               	bcf	3987,6,c	;volatile
  3009                           
  3010                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  3011  001CE6  9E93               	bcf	3987,7,c	;volatile
  3012                           
  3013                           ;unmc_lcd_216.c: 101: if(address)
  3014  001CE8  5004               	movf	lcd_send_byte@address,w,c
  3015  001CEA  B4D8               	btfsc	status,2,c
  3016  001CEC  D002               	goto	l194
  3017                           
  3018                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  3019  001CEE  868A               	bsf	3978,3,c	;volatile
  3020  001CF0  D001               	goto	l195
  3021  001CF2                     l194:
  3022                           
  3023                           ;unmc_lcd_216.c: 103: else
  3024                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  3025  001CF2  968A               	bcf	3978,3,c	;volatile
  3026  001CF4                     l195:
  3027                           
  3028                           ;unmc_lcd_216.c: 106: __nop();
  3029  001CF4  F000               	nop	
  3030                           
  3031                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  3032  001CF6  3803               	swapf	lcd_send_byte@n,w,c
  3033  001CF8  0B0F               	andlw	15
  3034  001CFA  EC0F  F00D         	call	_lcd_send_nibble
  3035                           
  3036                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  3037  001CFE  5003               	movf	lcd_send_byte@n,w,c
  3038  001D00  0B0F               	andlw	15
  3039  001D02  EC0F  F00D         	call	_lcd_send_nibble
  3040  001D06  0012               	return		;funcret
  3041  001D08                     __end_of_lcd_send_byte:
  3042                           	opt stack 0
  3043                           tblptru	equ	0xFF8
  3044                           tblptrh	equ	0xFF7
  3045                           tblptrl	equ	0xFF6
  3046                           tablat	equ	0xFF5
  3047                           prodh	equ	0xFF4
  3048                           prodl	equ	0xFF3
  3049                           indf0	equ	0xFEF
  3050                           postinc0	equ	0xFEE
  3051                           fsr0h	equ	0xFEA
  3052                           fsr0l	equ	0xFE9
  3053                           wreg	equ	0xFE8
  3054                           postdec1	equ	0xFE5
  3055                           fsr1l	equ	0xFE1
  3056                           indf2	equ	0xFDF
  3057                           postinc2	equ	0xFDE
  3058                           postdec2	equ	0xFDD
  3059                           fsr2h	equ	0xFDA
  3060                           fsr2l	equ	0xFD9
  3061                           status	equ	0xFD8
  3062                           
  3063 ;; *************** function _lcd_send_nibble *****************
  3064 ;; Defined at:
  3065 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  nibble          1    wreg     unsigned char 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  nibble          1    1[COMRAM] unsigned char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;		None               void
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3083 ;;Total ram usage:        2 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_lcd_send_byte
  3089 ;;		_lcd_init
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text18
  3094  001A1E                     __ptext18:
  3095                           	opt stack 0
  3096  001A1E                     _lcd_send_nibble:
  3097                           	opt stack 28
  3098                           
  3099                           ;incstack = 0
  3100                           ;lcd_send_nibble@nibble stored from wreg
  3101  001A1E  6E02               	movwf	lcd_send_nibble@nibble,c
  3102                           
  3103                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  3104  001A20  A002               	btfss	lcd_send_nibble@nibble,0,c
  3105  001A22  D003               	goto	u910
  3106  001A24  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3107  001A26  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3108  001A28  D001               	goto	u928
  3109  001A2A                     u910:
  3110  001A2A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3111  001A2C                     u928:
  3112  001A2C  3A01               	swapf	??_lcd_send_nibble,f,c
  3113  001A2E  508A               	movf	3978,w,c	;volatile
  3114  001A30  1801               	xorwf	??_lcd_send_nibble,w,c
  3115  001A32  0BEF               	andlw	-17
  3116  001A34  1801               	xorwf	??_lcd_send_nibble,w,c
  3117  001A36  6E8A               	movwf	3978,c	;volatile
  3118                           
  3119                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  3120  001A38  A202               	btfss	lcd_send_nibble@nibble,1,c
  3121  001A3A  D003               	goto	u930
  3122  001A3C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3123  001A3E  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3124  001A40  D001               	goto	u948
  3125  001A42                     u930:
  3126  001A42  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3127  001A44                     u948:
  3128  001A44  3A01               	swapf	??_lcd_send_nibble,f,c
  3129  001A46  4601               	rlncf	??_lcd_send_nibble,f,c
  3130  001A48  508A               	movf	3978,w,c	;volatile
  3131  001A4A  1801               	xorwf	??_lcd_send_nibble,w,c
  3132  001A4C  0BDF               	andlw	-33
  3133  001A4E  1801               	xorwf	??_lcd_send_nibble,w,c
  3134  001A50  6E8A               	movwf	3978,c	;volatile
  3135                           
  3136                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  3137  001A52  A402               	btfss	lcd_send_nibble@nibble,2,c
  3138  001A54  D003               	goto	u950
  3139  001A56  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3140  001A58  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3141  001A5A  D001               	goto	u968
  3142  001A5C                     u950:
  3143  001A5C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3144  001A5E                     u968:
  3145  001A5E  3A01               	swapf	??_lcd_send_nibble,f,c
  3146  001A60  4601               	rlncf	??_lcd_send_nibble,f,c
  3147  001A62  4601               	rlncf	??_lcd_send_nibble,f,c
  3148  001A64  508A               	movf	3978,w,c	;volatile
  3149  001A66  1801               	xorwf	??_lcd_send_nibble,w,c
  3150  001A68  0BBF               	andlw	-65
  3151  001A6A  1801               	xorwf	??_lcd_send_nibble,w,c
  3152  001A6C  6E8A               	movwf	3978,c	;volatile
  3153                           
  3154                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  3155  001A6E  A602               	btfss	lcd_send_nibble@nibble,3,c
  3156  001A70  D003               	goto	u970
  3157  001A72  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3158  001A74  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3159  001A76  D001               	goto	u988
  3160  001A78                     u970:
  3161  001A78  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3162  001A7A                     u988:
  3163  001A7A  3201               	rrcf	??_lcd_send_nibble,f,c
  3164  001A7C  3201               	rrcf	??_lcd_send_nibble,f,c
  3165  001A7E  508A               	movf	3978,w,c	;volatile
  3166  001A80  1801               	xorwf	??_lcd_send_nibble,w,c
  3167  001A82  0B7F               	andlw	-129
  3168  001A84  1801               	xorwf	??_lcd_send_nibble,w,c
  3169  001A86  6E8A               	movwf	3978,c	;volatile
  3170                           
  3171                           ;unmc_lcd_216.c: 32: __nop();
  3172  001A88  F000               	nop	
  3173                           
  3174                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  3175  001A8A  848A               	bsf	3978,2,c	;volatile
  3176                           
  3177                           ;unmc_lcd_216.c: 34: __nop();__nop();
  3178  001A8C  F000               	nop	
  3179  001A8E  F000               	nop	
  3180                           
  3181                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  3182  001A90  948A               	bcf	3978,2,c	;volatile
  3183  001A92  0012               	return		;funcret
  3184  001A94                     __end_of_lcd_send_nibble:
  3185                           	opt stack 0
  3186                           tblptru	equ	0xFF8
  3187                           tblptrh	equ	0xFF7
  3188                           tblptrl	equ	0xFF6
  3189                           tablat	equ	0xFF5
  3190                           prodh	equ	0xFF4
  3191                           prodl	equ	0xFF3
  3192                           indf0	equ	0xFEF
  3193                           postinc0	equ	0xFEE
  3194                           fsr0h	equ	0xFEA
  3195                           fsr0l	equ	0xFE9
  3196                           wreg	equ	0xFE8
  3197                           postdec1	equ	0xFE5
  3198                           fsr1l	equ	0xFE1
  3199                           indf2	equ	0xFDF
  3200                           postinc2	equ	0xFDE
  3201                           postdec2	equ	0xFDD
  3202                           fsr2h	equ	0xFDA
  3203                           fsr2l	equ	0xFD9
  3204                           status	equ	0xFD8
  3205                           
  3206 ;; *************** function _Delay100TCYx *****************
  3207 ;; Defined at:
  3208 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  unit            1    wreg     unsigned char 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  unit            1    0[COMRAM] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;		None               void
  3215 ;; Registers used:
  3216 ;;		wreg
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3226 ;;Total ram usage:        1 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_lcd_send_byte
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text19
  3236  001DC8                     __ptext19:
  3237                           	opt stack 0
  3238  001DC8                     _Delay100TCYx:
  3239                           	opt stack 28
  3240                           
  3241                           ;incstack = 0
  3242                           ;Delay100TCYx@unit stored from wreg
  3243  001DC8  6E01               	movwf	Delay100TCYx@unit,c
  3244  001DCA  0E21               	movlw	33
  3245  001DCC                     u1857:
  3246  001DCC  2EE8               	decfsz	wreg,f,c
  3247  001DCE  D7FE               	goto	u1857
  3248  001DD0  F000               	nop	
  3249  001DD2  2E01               	decfsz	Delay100TCYx@unit,f,c
  3250  001DD4  D7FA               	goto	l1736
  3251  001DD6  0012               	return	
  3252  001DD8  0012               	return		;funcret
  3253  001DDA                     __end_of_Delay100TCYx:
  3254                           	opt stack 0
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           prodh	equ	0xFF4
  3260                           prodl	equ	0xFF3
  3261                           indf0	equ	0xFEF
  3262                           postinc0	equ	0xFEE
  3263                           fsr0h	equ	0xFEA
  3264                           fsr0l	equ	0xFE9
  3265                           wreg	equ	0xFE8
  3266                           postdec1	equ	0xFE5
  3267                           fsr1l	equ	0xFE1
  3268                           indf2	equ	0xFDF
  3269                           postinc2	equ	0xFDE
  3270                           postdec2	equ	0xFDD
  3271                           fsr2h	equ	0xFDA
  3272                           fsr2l	equ	0xFD9
  3273                           status	equ	0xFD8
  3274                           
  3275 ;; *************** function _Write_RTC *****************
  3276 ;; Defined at:
  3277 ;;		line 74 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;		None               void
  3284 ;; Registers used:
  3285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3295 ;;Total ram usage:        0 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    2
  3298 ;; This function calls:
  3299 ;;		_RtccWrOn
  3300 ;;		_RtccWriteDate
  3301 ;;		_RtccWriteTime
  3302 ;;		___awdiv
  3303 ;; This function is called by:
  3304 ;;		_Setup
  3305 ;;		_main
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text20
  3310  0011A0                     __ptext20:
  3311                           	opt stack 0
  3312  0011A0                     _Write_RTC:
  3313                           	opt stack 28
  3314                           
  3315                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  3316                           
  3317                           ;incstack = 0
  3318  0011A0  ECED  F00E         	call	_RtccWrOn	;wreg free
  3319                           
  3320                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  3321  0011A4  80A3               	bsf	4003,0,c	;volatile
  3322                           
  3323                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  3324  0011A6  C037  F001         	movff	_segundo,___awdiv@dividend
  3325  0011AA  C038  F002         	movff	_segundo+1,___awdiv@dividend+1
  3326  0011AE  0E00               	movlw	0
  3327  0011B0  6E04               	movwf	___awdiv@divisor+1,c
  3328  0011B2  0E0A               	movlw	10
  3329  0011B4  6E03               	movwf	___awdiv@divisor,c
  3330  0011B6  ECFC  F00B         	call	___awdiv	;wreg free
  3331  0011BA  5001               	movf	?___awdiv,w,c
  3332  0011BC  6E4C               	movwf	_segundo_d,c
  3333                           
  3334                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  3335  0011BE  504C               	movf	_segundo_d,w,c
  3336  0011C0  0D0A               	mullw	10
  3337  0011C2  50F3               	movf	prodl,w,c
  3338  0011C4  0800               	sublw	0
  3339  0011C6  2437               	addwf	_segundo,w,c
  3340  0011C8  6E4D               	movwf	_segundo_u,c
  3341                           
  3342                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  3343  0011CA  504C               	movf	_segundo_d,w,c
  3344  0011CC  0D10               	mullw	16
  3345  0011CE  50F3               	movf	prodl,w,c
  3346  0011D0  244D               	addwf	_segundo_u,w,c
  3347  0011D2  6E3E               	movwf	_RtccTime+1,c
  3348                           
  3349                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  3350  0011D4  C058  F001         	movff	_minuto,___awdiv@dividend
  3351  0011D8  C059  F002         	movff	_minuto+1,___awdiv@dividend+1
  3352  0011DC  0E00               	movlw	0
  3353  0011DE  6E04               	movwf	___awdiv@divisor+1,c
  3354  0011E0  0E0A               	movlw	10
  3355  0011E2  6E03               	movwf	___awdiv@divisor,c
  3356  0011E4  ECFC  F00B         	call	___awdiv	;wreg free
  3357  0011E8  5001               	movf	?___awdiv,w,c
  3358  0011EA  6E4A               	movwf	_minuto_d,c
  3359                           
  3360                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  3361  0011EC  504A               	movf	_minuto_d,w,c
  3362  0011EE  0D0A               	mullw	10
  3363  0011F0  50F3               	movf	prodl,w,c
  3364  0011F2  0800               	sublw	0
  3365  0011F4  2458               	addwf	_minuto,w,c
  3366  0011F6  6E4B               	movwf	_minuto_u,c
  3367                           
  3368                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  3369  0011F8  504A               	movf	_minuto_d,w,c
  3370  0011FA  0D10               	mullw	16
  3371  0011FC  50F3               	movf	prodl,w,c
  3372  0011FE  244B               	addwf	_minuto_u,w,c
  3373  001200  6E3F               	movwf	_RtccTime+2,c
  3374                           
  3375                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  3376  001202  C054  F001         	movff	_hora,___awdiv@dividend
  3377  001206  C055  F002         	movff	_hora+1,___awdiv@dividend+1
  3378  00120A  0E00               	movlw	0
  3379  00120C  6E04               	movwf	___awdiv@divisor+1,c
  3380  00120E  0E0A               	movlw	10
  3381  001210  6E03               	movwf	___awdiv@divisor,c
  3382  001212  ECFC  F00B         	call	___awdiv	;wreg free
  3383  001216  5001               	movf	?___awdiv,w,c
  3384  001218  6E46               	movwf	_hora_d,c
  3385                           
  3386                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  3387  00121A  5046               	movf	_hora_d,w,c
  3388  00121C  0D0A               	mullw	10
  3389  00121E  50F3               	movf	prodl,w,c
  3390  001220  0800               	sublw	0
  3391  001222  2454               	addwf	_hora,w,c
  3392  001224  6E47               	movwf	_hora_u,c
  3393                           
  3394                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  3395  001226  5046               	movf	_hora_d,w,c
  3396  001228  0D10               	mullw	16
  3397  00122A  50F3               	movf	prodl,w,c
  3398  00122C  2447               	addwf	_hora_u,w,c
  3399  00122E  6E40               	movwf	_RtccTime+3,c
  3400                           
  3401                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  3402  001230  C04E  F001         	movff	_anio,___awdiv@dividend
  3403  001234  C04F  F002         	movff	_anio+1,___awdiv@dividend+1
  3404  001238  0E00               	movlw	0
  3405  00123A  6E04               	movwf	___awdiv@divisor+1,c
  3406  00123C  0E0A               	movlw	10
  3407  00123E  6E03               	movwf	___awdiv@divisor,c
  3408  001240  ECFC  F00B         	call	___awdiv	;wreg free
  3409  001244  5001               	movf	?___awdiv,w,c
  3410  001246  6E41               	movwf	_anio_d,c
  3411                           
  3412                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  3413  001248  5041               	movf	_anio_d,w,c
  3414  00124A  0D0A               	mullw	10
  3415  00124C  50F3               	movf	prodl,w,c
  3416  00124E  0800               	sublw	0
  3417  001250  244E               	addwf	_anio,w,c
  3418  001252  6E42               	movwf	_anio_u,c
  3419                           
  3420                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  3421  001254  5041               	movf	_anio_d,w,c
  3422  001256  0D10               	mullw	16
  3423  001258  50F3               	movf	prodl,w,c
  3424  00125A  2442               	addwf	_anio_u,w,c
  3425  00125C  6E3C               	movwf	_RtccDate+3,c
  3426                           
  3427                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  3428  00125E  C056  F001         	movff	_mes,___awdiv@dividend
  3429  001262  C057  F002         	movff	_mes+1,___awdiv@dividend+1
  3430  001266  0E00               	movlw	0
  3431  001268  6E04               	movwf	___awdiv@divisor+1,c
  3432  00126A  0E0A               	movlw	10
  3433  00126C  6E03               	movwf	___awdiv@divisor,c
  3434  00126E  ECFC  F00B         	call	___awdiv	;wreg free
  3435  001272  5001               	movf	?___awdiv,w,c
  3436  001274  6E48               	movwf	_mes_d,c
  3437                           
  3438                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  3439  001276  5048               	movf	_mes_d,w,c
  3440  001278  0D0A               	mullw	10
  3441  00127A  50F3               	movf	prodl,w,c
  3442  00127C  0800               	sublw	0
  3443  00127E  2456               	addwf	_mes,w,c
  3444  001280  6E49               	movwf	_mes_u,c
  3445                           
  3446                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  3447  001282  5048               	movf	_mes_d,w,c
  3448  001284  0D10               	mullw	16
  3449  001286  50F3               	movf	prodl,w,c
  3450  001288  2449               	addwf	_mes_u,w,c
  3451  00128A  6E3B               	movwf	_RtccDate+2,c
  3452                           
  3453                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  3454  00128C  C050  F001         	movff	_dia,___awdiv@dividend
  3455  001290  C051  F002         	movff	_dia+1,___awdiv@dividend+1
  3456  001294  0E00               	movlw	0
  3457  001296  6E04               	movwf	___awdiv@divisor+1,c
  3458  001298  0E0A               	movlw	10
  3459  00129A  6E03               	movwf	___awdiv@divisor,c
  3460  00129C  ECFC  F00B         	call	___awdiv	;wreg free
  3461  0012A0  5001               	movf	?___awdiv,w,c
  3462  0012A2  6E44               	movwf	_fecha_d,c
  3463                           
  3464                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  3465  0012A4  5044               	movf	_fecha_d,w,c
  3466  0012A6  0D0A               	mullw	10
  3467  0012A8  50F3               	movf	prodl,w,c
  3468  0012AA  0800               	sublw	0
  3469  0012AC  2450               	addwf	_dia,w,c
  3470  0012AE  6E45               	movwf	_fecha_u,c
  3471                           
  3472                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  3473  0012B0  5044               	movf	_fecha_d,w,c
  3474  0012B2  0D10               	mullw	16
  3475  0012B4  50F3               	movf	prodl,w,c
  3476  0012B6  2445               	addwf	_fecha_u,w,c
  3477  0012B8  6E3A               	movwf	_RtccDate+1,c
  3478                           
  3479                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  3480  0012BA  C052  F043         	movff	_diasem,_dia_semana
  3481                           
  3482                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  3483  0012BE  C052  F039         	movff	_diasem,_RtccDate
  3484                           
  3485                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  3486  0012C2  0E3D               	movlw	low _RtccTime
  3487  0012C4  6E01               	movwf	RtccWriteTime@pTm,c
  3488  0012C6  0E00               	movlw	high _RtccTime
  3489  0012C8  6E02               	movwf	RtccWriteTime@pTm+1,c
  3490  0012CA  0E01               	movlw	1
  3491  0012CC  6E03               	movwf	RtccWriteTime@di,c
  3492  0012CE  EC17  F00A         	call	_RtccWriteTime	;wreg free
  3493                           
  3494                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  3495  0012D2  0E39               	movlw	low _RtccDate
  3496  0012D4  6E01               	movwf	RtccWriteDate@pDt,c
  3497  0012D6  0E00               	movlw	high _RtccDate
  3498  0012D8  6E02               	movwf	RtccWriteDate@pDt+1,c
  3499  0012DA  0E01               	movlw	1
  3500  0012DC  6E03               	movwf	RtccWriteDate@di,c
  3501  0012DE  EC74  F009         	call	_RtccWriteDate	;wreg free
  3502                           
  3503                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  3504  0012E2  010F               	movlb	15	; () banked
  3505  0012E4  8F3F               	bsf	63,7,b	;volatile
  3506                           
  3507                           ; BSR set to: 15
  3508  0012E6  0012               	return		;funcret
  3509  0012E8                     __end_of_Write_RTC:
  3510                           	opt stack 0
  3511                           tblptru	equ	0xFF8
  3512                           tblptrh	equ	0xFF7
  3513                           tblptrl	equ	0xFF6
  3514                           tablat	equ	0xFF5
  3515                           prodh	equ	0xFF4
  3516                           prodl	equ	0xFF3
  3517                           indf0	equ	0xFEF
  3518                           postinc0	equ	0xFEE
  3519                           fsr0h	equ	0xFEA
  3520                           fsr0l	equ	0xFE9
  3521                           wreg	equ	0xFE8
  3522                           postdec1	equ	0xFE5
  3523                           fsr1l	equ	0xFE1
  3524                           indf2	equ	0xFDF
  3525                           postinc2	equ	0xFDE
  3526                           postdec2	equ	0xFDD
  3527                           fsr2h	equ	0xFDA
  3528                           fsr2l	equ	0xFD9
  3529                           status	equ	0xFD8
  3530                           
  3531 ;; *************** function ___awdiv *****************
  3532 ;; Defined at:
  3533 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  dividend        2    0[COMRAM] int 
  3536 ;;  divisor         2    2[COMRAM] int 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  quotient        2    6[COMRAM] int 
  3539 ;;  sign            1    5[COMRAM] unsigned char 
  3540 ;;  counter         1    4[COMRAM] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2    0[COMRAM] int 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;Total ram usage:        8 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_Write_RTC
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text21
  3564  0017F8                     __ptext21:
  3565                           	opt stack 0
  3566  0017F8                     ___awdiv:
  3567                           	opt stack 29
  3568                           
  3569                           ; BSR set to: 15
  3570                           ;incstack = 0
  3571  0017F8  0E00               	movlw	0
  3572  0017FA  6E06               	movwf	___awdiv@sign,c
  3573  0017FC  AE04               	btfss	___awdiv@divisor+1,7,c
  3574  0017FE  D007               	goto	l1944
  3575  001800  6C03               	negf	___awdiv@divisor,c
  3576  001802  1E04               	comf	___awdiv@divisor+1,f,c
  3577  001804  B0D8               	btfsc	status,0,c
  3578  001806  2A04               	incf	___awdiv@divisor+1,f,c
  3579  001808  0E01               	movlw	1
  3580  00180A  6E06               	movwf	___awdiv@sign,c
  3581  00180C  D000               	goto	l1944
  3582  00180E                     l1944:
  3583  00180E  AE02               	btfss	___awdiv@dividend+1,7,c
  3584  001810  D007               	goto	l1950
  3585  001812  6C01               	negf	___awdiv@dividend,c
  3586  001814  1E02               	comf	___awdiv@dividend+1,f,c
  3587  001816  B0D8               	btfsc	status,0,c
  3588  001818  2A02               	incf	___awdiv@dividend+1,f,c
  3589  00181A  0E01               	movlw	1
  3590  00181C  1A06               	xorwf	___awdiv@sign,f,c
  3591  00181E  D000               	goto	l1950
  3592  001820                     l1950:
  3593  001820  0E00               	movlw	0
  3594  001822  6E08               	movwf	___awdiv@quotient+1,c
  3595  001824  0E00               	movlw	0
  3596  001826  6E07               	movwf	___awdiv@quotient,c
  3597  001828  5003               	movf	___awdiv@divisor,w,c
  3598  00182A  1004               	iorwf	___awdiv@divisor+1,w,c
  3599  00182C  B4D8               	btfsc	status,2,c
  3600  00182E  D021               	goto	l1972
  3601  001830  0E01               	movlw	1
  3602  001832  6E05               	movwf	___awdiv@counter,c
  3603  001834  D005               	goto	l1958
  3604  001836                     l1956:
  3605  001836  90D8               	bcf	status,0,c
  3606  001838  3603               	rlcf	___awdiv@divisor,f,c
  3607  00183A  3604               	rlcf	___awdiv@divisor+1,f,c
  3608  00183C  2A05               	incf	___awdiv@counter,f,c
  3609  00183E  D000               	goto	l1958
  3610  001840                     l1958:
  3611  001840  BE04               	btfsc	___awdiv@divisor+1,7,c
  3612  001842  D002               	goto	l1960
  3613  001844  D7F8               	goto	l1956
  3614  001846  D000               	goto	l1960
  3615  001848                     l1960:
  3616  001848  90D8               	bcf	status,0,c
  3617  00184A  3607               	rlcf	___awdiv@quotient,f,c
  3618  00184C  3608               	rlcf	___awdiv@quotient+1,f,c
  3619  00184E  5003               	movf	___awdiv@divisor,w,c
  3620  001850  5C01               	subwf	___awdiv@dividend,w,c
  3621  001852  5004               	movf	___awdiv@divisor+1,w,c
  3622  001854  5802               	subwfb	___awdiv@dividend+1,w,c
  3623  001856  A0D8               	btfss	status,0,c
  3624  001858  D006               	goto	l1968
  3625  00185A  5003               	movf	___awdiv@divisor,w,c
  3626  00185C  5E01               	subwf	___awdiv@dividend,f,c
  3627  00185E  5004               	movf	___awdiv@divisor+1,w,c
  3628  001860  5A02               	subwfb	___awdiv@dividend+1,f,c
  3629  001862  8007               	bsf	___awdiv@quotient,0,c
  3630  001864  D000               	goto	l1968
  3631  001866                     l1968:
  3632  001866  90D8               	bcf	status,0,c
  3633  001868  3204               	rrcf	___awdiv@divisor+1,f,c
  3634  00186A  3203               	rrcf	___awdiv@divisor,f,c
  3635  00186C  2E05               	decfsz	___awdiv@counter,f,c
  3636  00186E  D7EC               	goto	l1960
  3637  001870  D000               	goto	l1972
  3638  001872                     l1972:
  3639  001872  5006               	movf	___awdiv@sign,w,c
  3640  001874  B4D8               	btfsc	status,2,c
  3641  001876  D005               	goto	l1976
  3642  001878  6C07               	negf	___awdiv@quotient,c
  3643  00187A  1E08               	comf	___awdiv@quotient+1,f,c
  3644  00187C  B0D8               	btfsc	status,0,c
  3645  00187E  2A08               	incf	___awdiv@quotient+1,f,c
  3646  001880  D000               	goto	l1976
  3647  001882                     l1976:
  3648  001882  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3649  001886  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3650  00188A  0012               	return	
  3651  00188C  0012               	return		;funcret
  3652  00188E                     __end_of___awdiv:
  3653                           	opt stack 0
  3654                           tblptru	equ	0xFF8
  3655                           tblptrh	equ	0xFF7
  3656                           tblptrl	equ	0xFF6
  3657                           tablat	equ	0xFF5
  3658                           prodh	equ	0xFF4
  3659                           prodl	equ	0xFF3
  3660                           indf0	equ	0xFEF
  3661                           postinc0	equ	0xFEE
  3662                           fsr0h	equ	0xFEA
  3663                           fsr0l	equ	0xFE9
  3664                           wreg	equ	0xFE8
  3665                           postdec1	equ	0xFE5
  3666                           fsr1l	equ	0xFE1
  3667                           indf2	equ	0xFDF
  3668                           postinc2	equ	0xFDE
  3669                           postdec2	equ	0xFDD
  3670                           fsr2h	equ	0xFDA
  3671                           fsr2l	equ	0xFD9
  3672                           status	equ	0xFD8
  3673                           
  3674 ;; *************** function _RtccWriteTime *****************
  3675 ;; Defined at:
  3676 ;;		line 34 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  pTm             2    0[COMRAM] PTR const struct .
  3679 ;;		 -> RtccTime(4), 
  3680 ;;  di              1    2[COMRAM] enum E7121
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  tempHourWDay    2    9[COMRAM] struct .
  3683 ;;  tempMinSec      2    7[COMRAM] struct .
  3684 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3685 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3686 ;;  wasOn           1    4[COMRAM] enum E7121
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      enum E7337
  3689 ;; Registers used:
  3690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3696 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3697 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;Total ram usage:       11 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:    1
  3703 ;; This function calls:
  3704 ;;		_RtccWrOn
  3705 ;; This function is called by:
  3706 ;;		_Write_RTC
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text22
  3711  00142E                     __ptext22:
  3712                           	opt stack 0
  3713  00142E                     _RtccWriteTime:
  3714                           	opt stack 28
  3715                           
  3716                           ;incstack = 0
  3717  00142E  0E00               	movlw	0
  3718  001430  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3719  001432  EE20 F002          	lfsr	2,2
  3720  001436  5001               	movf	RtccWriteTime@pTm,w,c
  3721  001438  26D9               	addwf	fsr2l,f,c
  3722  00143A  5002               	movf	RtccWriteTime@pTm+1,w,c
  3723  00143C  22DA               	addwfc	fsr2h,f,c
  3724  00143E  0E5A               	movlw	90
  3725  001440  60DF               	cpfslt	indf2,c
  3726  001442  0012               	return	
  3727  001444  EE20 F001          	lfsr	2,1
  3728  001448  5001               	movf	RtccWriteTime@pTm,w,c
  3729  00144A  26D9               	addwf	fsr2l,f,c
  3730  00144C  5002               	movf	RtccWriteTime@pTm+1,w,c
  3731  00144E  22DA               	addwfc	fsr2h,f,c
  3732  001450  0E5A               	movlw	90
  3733  001452  60DF               	cpfslt	indf2,c
  3734  001454  0012               	return	
  3735  001456  EE20 F003          	lfsr	2,3
  3736  00145A  5001               	movf	RtccWriteTime@pTm,w,c
  3737  00145C  26D9               	addwf	fsr2l,f,c
  3738  00145E  5002               	movf	RtccWriteTime@pTm+1,w,c
  3739  001460  22DA               	addwfc	fsr2h,f,c
  3740  001462  0E24               	movlw	36
  3741  001464  64DF               	cpfsgt	indf2,c
  3742  001466  D002               	goto	l1776
  3743  001468  0012               	return	
  3744                           
  3745                           ;	Return value of _RtccWriteTime is never used
  3746  00146A  0012               	return	
  3747  00146C                     l1776:
  3748  00146C  EE20 F002          	lfsr	2,2
  3749  001470  5001               	movf	RtccWriteTime@pTm,w,c
  3750  001472  26D9               	addwf	fsr2l,f,c
  3751  001474  5002               	movf	RtccWriteTime@pTm+1,w,c
  3752  001476  22DA               	addwfc	fsr2h,f,c
  3753  001478  50DF               	movf	indf2,w,c
  3754  00147A  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3755  00147C  EE20 F001          	lfsr	2,1
  3756  001480  5001               	movf	RtccWriteTime@pTm,w,c
  3757  001482  26D9               	addwf	fsr2l,f,c
  3758  001484  5002               	movf	RtccWriteTime@pTm+1,w,c
  3759  001486  22DA               	addwfc	fsr2h,f,c
  3760  001488  50DF               	movf	indf2,w,c
  3761  00148A  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3762  00148C  5003               	movf	RtccWriteTime@di,w,c
  3763  00148E  B4D8               	btfsc	status,2,c
  3764  001490  D002               	goto	l1782
  3765  001492  9CF2               	bcf	intcon,6,c	;volatile
  3766  001494  D000               	goto	l1782
  3767  001496                     l1782:
  3768  001496  0E00               	movlw	0
  3769  001498  BB3F               	btfsc	63,5,b	;volatile
  3770  00149A  0E01               	movlw	1
  3771  00149C  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3772  00149E  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3773  0014A0  A4D8               	btfss	status,2,c
  3774  0014A2  D003               	goto	l1786
  3775  0014A4  ECED  F00E         	call	_RtccWrOn	;wreg free
  3776  0014A8  D000               	goto	l1786
  3777  0014AA                     l1786:
  3778  0014AA  0E00               	movlw	0
  3779  0014AC  BF3F               	btfsc	63,7,b	;volatile
  3780  0014AE  0E01               	movlw	1
  3781  0014B0  6E05               	movwf	RtccWriteTime@wasOn,c
  3782  0014B2  5005               	movf	RtccWriteTime@wasOn,w,c
  3783  0014B4  B4D8               	btfsc	status,2,c
  3784  0014B6  D007               	goto	l1792
  3785  0014B8  0E00               	movlw	0
  3786  0014BA  BE91               	btfsc	3985,7,c	;volatile
  3787  0014BC  0E01               	movlw	1
  3788  0014BE  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3789  0014C0  010F               	movlb	15	; () banked
  3790  0014C2  9F3F               	bcf	63,7,b	;volatile
  3791  0014C4  D000               	goto	l1792
  3792  0014C6                     l1792:
  3793  0014C6  0EFC               	movlw	252
  3794  0014C8  010F               	movlb	15	; () banked
  3795  0014CA  173F               	andwf	63,f,b	;volatile
  3796  0014CC  010F               	movlb	15	; () banked
  3797  0014CE  813F               	bsf	63,0,b	;volatile
  3798                           
  3799                           ; BSR set to: 15
  3800  0014D0  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3801                           
  3802                           ; BSR set to: 15
  3803  0014D4  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3804                           
  3805                           ; BSR set to: 15
  3806  0014D8  EE20 F003          	lfsr	2,3
  3807  0014DC  5001               	movf	RtccWriteTime@pTm,w,c
  3808  0014DE  26D9               	addwf	fsr2l,f,c
  3809  0014E0  5002               	movf	RtccWriteTime@pTm+1,w,c
  3810  0014E2  22DA               	addwfc	fsr2h,f,c
  3811  0014E4  50DF               	movf	indf2,w,c
  3812  0014E6  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3813                           
  3814                           ; BSR set to: 15
  3815  0014E8  0EFC               	movlw	252
  3816  0014EA  010F               	movlb	15	; () banked
  3817  0014EC  173F               	andwf	63,f,b	;volatile
  3818                           
  3819                           ; BSR set to: 15
  3820  0014EE  010F               	movlb	15	; () banked
  3821  0014F0  813F               	bsf	63,0,b	;volatile
  3822                           
  3823                           ; BSR set to: 15
  3824  0014F2  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3825                           
  3826                           ; BSR set to: 15
  3827  0014F6  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3828                           
  3829                           ; BSR set to: 15
  3830  0014FA  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3831                           
  3832                           ; BSR set to: 15
  3833  0014FE  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3834                           
  3835                           ; BSR set to: 15
  3836  001502  5005               	movf	RtccWriteTime@wasOn,w,c
  3837  001504  B4D8               	btfsc	status,2,c
  3838  001506  D00D               	goto	l1824
  3839                           
  3840                           ; BSR set to: 15
  3841  001508  010F               	movlb	15	; () banked
  3842  00150A  8F3F               	bsf	63,7,b	;volatile
  3843                           
  3844                           ; BSR set to: 15
  3845  00150C  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3846  00150E  B4D8               	btfsc	status,2,c
  3847  001510  D002               	goto	l1820
  3848                           
  3849                           ; BSR set to: 15
  3850  001512  8E91               	bsf	3985,7,c	;volatile
  3851  001514  D000               	goto	l1820
  3852  001516                     l1820:
  3853                           
  3854                           ; BSR set to: 15
  3855  001516  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3856  001518  B4D8               	btfsc	status,2,c
  3857  00151A  D009               	goto	l1828
  3858                           
  3859                           ; BSR set to: 15
  3860  00151C  ECED  F00E         	call	_RtccWrOn	;wreg free
  3861  001520  D006               	goto	l1828
  3862  001522                     l1824:
  3863  001522  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3864  001524  A4D8               	btfss	status,2,c
  3865  001526  D003               	goto	l1828
  3866  001528  010F               	movlb	15	; () banked
  3867  00152A  9B3F               	bcf	63,5,b	;volatile
  3868                           
  3869                           ; BSR set to: 15
  3870  00152C  D000               	goto	l1828
  3871  00152E                     l1828:
  3872  00152E  5003               	movf	RtccWriteTime@di,w,c
  3873  001530  B4D8               	btfsc	status,2,c
  3874  001532  0012               	return	
  3875  001534  8CF2               	bsf	intcon,6,c	;volatile
  3876  001536  0012               	return	
  3877                           
  3878                           ;	Return value of _RtccWriteTime is never used
  3879  001538  0012               	return		;funcret
  3880  00153A                     __end_of_RtccWriteTime:
  3881                           	opt stack 0
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           prodh	equ	0xFF4
  3887                           prodl	equ	0xFF3
  3888                           intcon	equ	0xFF2
  3889                           indf0	equ	0xFEF
  3890                           postinc0	equ	0xFEE
  3891                           fsr0h	equ	0xFEA
  3892                           fsr0l	equ	0xFE9
  3893                           wreg	equ	0xFE8
  3894                           postdec1	equ	0xFE5
  3895                           fsr1l	equ	0xFE1
  3896                           indf2	equ	0xFDF
  3897                           postinc2	equ	0xFDE
  3898                           postdec2	equ	0xFDD
  3899                           fsr2h	equ	0xFDA
  3900                           fsr2l	equ	0xFD9
  3901                           status	equ	0xFD8
  3902                           
  3903 ;; *************** function _RtccWriteDate *****************
  3904 ;; Defined at:
  3905 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  pDt             2    0[COMRAM] PTR const struct .
  3908 ;;		 -> RtccDate(4), 
  3909 ;;  di              1    2[COMRAM] enum E7121
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  tempHourWDay    2   11[COMRAM] struct .
  3912 ;;  tempDayMonth    2    9[COMRAM] struct .
  3913 ;;  tempYear        2    6[COMRAM] struct .
  3914 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3915 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3916 ;;  wasOn           1    4[COMRAM] enum E7121
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      enum E7337
  3919 ;; Registers used:
  3920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3926 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3930 ;;Total ram usage:       13 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    1
  3933 ;; This function calls:
  3934 ;;		_RtccWrOn
  3935 ;; This function is called by:
  3936 ;;		_Write_RTC
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text23
  3941  0012E8                     __ptext23:
  3942                           	opt stack 0
  3943  0012E8                     _RtccWriteDate:
  3944                           	opt stack 28
  3945                           
  3946                           ;incstack = 0
  3947  0012E8  0E00               	movlw	0
  3948  0012EA  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3949  0012EC  EE20 F002          	lfsr	2,2
  3950  0012F0  5001               	movf	RtccWriteDate@pDt,w,c
  3951  0012F2  26D9               	addwf	fsr2l,f,c
  3952  0012F4  5002               	movf	RtccWriteDate@pDt+1,w,c
  3953  0012F6  22DA               	addwfc	fsr2h,f,c
  3954  0012F8  0E13               	movlw	19
  3955  0012FA  60DF               	cpfslt	indf2,c
  3956  0012FC  0012               	return	
  3957  0012FE  EE20 F002          	lfsr	2,2
  3958  001302  5001               	movf	RtccWriteDate@pDt,w,c
  3959  001304  26D9               	addwf	fsr2l,f,c
  3960  001306  5002               	movf	RtccWriteDate@pDt+1,w,c
  3961  001308  22DA               	addwfc	fsr2h,f,c
  3962  00130A  50DF               	movf	indf2,w,c
  3963  00130C  B4D8               	btfsc	status,2,c
  3964  00130E  0012               	return	
  3965  001310  EE20 F001          	lfsr	2,1
  3966  001314  5001               	movf	RtccWriteDate@pDt,w,c
  3967  001316  26D9               	addwf	fsr2l,f,c
  3968  001318  5002               	movf	RtccWriteDate@pDt+1,w,c
  3969  00131A  22DA               	addwfc	fsr2h,f,c
  3970  00131C  0E32               	movlw	50
  3971  00131E  60DF               	cpfslt	indf2,c
  3972  001320  0012               	return	
  3973  001322  EE20 F001          	lfsr	2,1
  3974  001326  5001               	movf	RtccWriteDate@pDt,w,c
  3975  001328  26D9               	addwf	fsr2l,f,c
  3976  00132A  5002               	movf	RtccWriteDate@pDt+1,w,c
  3977  00132C  22DA               	addwfc	fsr2h,f,c
  3978  00132E  50DF               	movf	indf2,w,c
  3979  001330  B4D8               	btfsc	status,2,c
  3980  001332  0012               	return	
  3981  001334  EE20 F003          	lfsr	2,3
  3982  001338  5001               	movf	RtccWriteDate@pDt,w,c
  3983  00133A  26D9               	addwf	fsr2l,f,c
  3984  00133C  5002               	movf	RtccWriteDate@pDt+1,w,c
  3985  00133E  22DA               	addwfc	fsr2h,f,c
  3986  001340  0E99               	movlw	153
  3987  001342  64DF               	cpfsgt	indf2,c
  3988  001344  D002               	goto	l1844
  3989  001346  0012               	return	
  3990                           
  3991                           ;	Return value of _RtccWriteDate is never used
  3992  001348  0012               	return	
  3993  00134A                     l1844:
  3994  00134A  EE20 F003          	lfsr	2,3
  3995  00134E  5001               	movf	RtccWriteDate@pDt,w,c
  3996  001350  26D9               	addwf	fsr2l,f,c
  3997  001352  5002               	movf	RtccWriteDate@pDt+1,w,c
  3998  001354  22DA               	addwfc	fsr2h,f,c
  3999  001356  50DF               	movf	indf2,w,c
  4000  001358  6E07               	movwf	RtccWriteDate@tempYear,c
  4001  00135A  EE20 F001          	lfsr	2,1
  4002  00135E  5001               	movf	RtccWriteDate@pDt,w,c
  4003  001360  26D9               	addwf	fsr2l,f,c
  4004  001362  5002               	movf	RtccWriteDate@pDt+1,w,c
  4005  001364  22DA               	addwfc	fsr2h,f,c
  4006  001366  50DF               	movf	indf2,w,c
  4007  001368  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  4008  00136A  EE20 F002          	lfsr	2,2
  4009  00136E  5001               	movf	RtccWriteDate@pDt,w,c
  4010  001370  26D9               	addwf	fsr2l,f,c
  4011  001372  5002               	movf	RtccWriteDate@pDt+1,w,c
  4012  001374  22DA               	addwfc	fsr2h,f,c
  4013  001376  50DF               	movf	indf2,w,c
  4014  001378  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  4015  00137A  5003               	movf	RtccWriteDate@di,w,c
  4016  00137C  B4D8               	btfsc	status,2,c
  4017  00137E  D002               	goto	l1850
  4018  001380  9CF2               	bcf	intcon,6,c	;volatile
  4019  001382  D000               	goto	l1850
  4020  001384                     l1850:
  4021  001384  0E00               	movlw	0
  4022  001386  BB3F               	btfsc	63,5,b	;volatile
  4023  001388  0E01               	movlw	1
  4024  00138A  6E09               	movwf	RtccWriteDate@wasWrEn,c
  4025  00138C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4026  00138E  A4D8               	btfss	status,2,c
  4027  001390  D003               	goto	l1854
  4028  001392  ECED  F00E         	call	_RtccWrOn	;wreg free
  4029  001396  D000               	goto	l1854
  4030  001398                     l1854:
  4031  001398  0E00               	movlw	0
  4032  00139A  BF3F               	btfsc	63,7,b	;volatile
  4033  00139C  0E01               	movlw	1
  4034  00139E  6E05               	movwf	RtccWriteDate@wasOn,c
  4035  0013A0  5005               	movf	RtccWriteDate@wasOn,w,c
  4036  0013A2  B4D8               	btfsc	status,2,c
  4037  0013A4  D007               	goto	l1860
  4038  0013A6  0E00               	movlw	0
  4039  0013A8  BE91               	btfsc	3985,7,c	;volatile
  4040  0013AA  0E01               	movlw	1
  4041  0013AC  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4042  0013AE  010F               	movlb	15	; () banked
  4043  0013B0  9F3F               	bcf	63,7,b	;volatile
  4044  0013B2  D000               	goto	l1860
  4045  0013B4                     l1860:
  4046  0013B4  0EFC               	movlw	252
  4047  0013B6  010F               	movlb	15	; () banked
  4048  0013B8  173F               	andwf	63,f,b	;volatile
  4049  0013BA  010F               	movlb	15	; () banked
  4050  0013BC  813F               	bsf	63,0,b	;volatile
  4051                           
  4052                           ; BSR set to: 15
  4053  0013BE  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  4054                           
  4055                           ; BSR set to: 15
  4056  0013C2  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  4057                           
  4058                           ; BSR set to: 15
  4059  0013C6  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  4060  0013CA  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  4061  0013CE  50DF               	movf	indf2,w,c
  4062  0013D0  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  4063                           
  4064                           ; BSR set to: 15
  4065  0013D2  0EFC               	movlw	252
  4066  0013D4  010F               	movlb	15	; () banked
  4067  0013D6  173F               	andwf	63,f,b	;volatile
  4068                           
  4069                           ; BSR set to: 15
  4070  0013D8  0E03               	movlw	3
  4071  0013DA  010F               	movlb	15	; () banked
  4072  0013DC  133F               	iorwf	63,f,b	;volatile
  4073                           
  4074                           ; BSR set to: 15
  4075  0013DE  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  4076                           
  4077                           ; BSR set to: 15
  4078  0013E2  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  4079                           
  4080                           ; BSR set to: 15
  4081  0013E6  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  4082                           
  4083                           ; BSR set to: 15
  4084  0013EA  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  4085                           
  4086                           ; BSR set to: 15
  4087  0013EE  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  4088                           
  4089                           ; BSR set to: 15
  4090  0013F2  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  4091                           
  4092                           ; BSR set to: 15
  4093  0013F6  5005               	movf	RtccWriteDate@wasOn,w,c
  4094  0013F8  B4D8               	btfsc	status,2,c
  4095  0013FA  D00D               	goto	l1896
  4096                           
  4097                           ; BSR set to: 15
  4098  0013FC  010F               	movlb	15	; () banked
  4099  0013FE  8F3F               	bsf	63,7,b	;volatile
  4100                           
  4101                           ; BSR set to: 15
  4102  001400  5006               	movf	RtccWriteDate@wasAlrm,w,c
  4103  001402  B4D8               	btfsc	status,2,c
  4104  001404  D002               	goto	l1892
  4105                           
  4106                           ; BSR set to: 15
  4107  001406  8E91               	bsf	3985,7,c	;volatile
  4108  001408  D000               	goto	l1892
  4109  00140A                     l1892:
  4110                           
  4111                           ; BSR set to: 15
  4112  00140A  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4113  00140C  B4D8               	btfsc	status,2,c
  4114  00140E  D009               	goto	l1900
  4115                           
  4116                           ; BSR set to: 15
  4117  001410  ECED  F00E         	call	_RtccWrOn	;wreg free
  4118  001414  D006               	goto	l1900
  4119  001416                     l1896:
  4120  001416  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4121  001418  A4D8               	btfss	status,2,c
  4122  00141A  D003               	goto	l1900
  4123  00141C  010F               	movlb	15	; () banked
  4124  00141E  9B3F               	bcf	63,5,b	;volatile
  4125                           
  4126                           ; BSR set to: 15
  4127  001420  D000               	goto	l1900
  4128  001422                     l1900:
  4129  001422  5003               	movf	RtccWriteDate@di,w,c
  4130  001424  B4D8               	btfsc	status,2,c
  4131  001426  0012               	return	
  4132  001428  9CF2               	bcf	intcon,6,c	;volatile
  4133  00142A  0012               	return	
  4134                           
  4135                           ;	Return value of _RtccWriteDate is never used
  4136  00142C  0012               	return		;funcret
  4137  00142E                     __end_of_RtccWriteDate:
  4138                           	opt stack 0
  4139                           tblptru	equ	0xFF8
  4140                           tblptrh	equ	0xFF7
  4141                           tblptrl	equ	0xFF6
  4142                           tablat	equ	0xFF5
  4143                           prodh	equ	0xFF4
  4144                           prodl	equ	0xFF3
  4145                           intcon	equ	0xFF2
  4146                           indf0	equ	0xFEF
  4147                           postinc0	equ	0xFEE
  4148                           fsr0h	equ	0xFEA
  4149                           fsr0l	equ	0xFE9
  4150                           wreg	equ	0xFE8
  4151                           postdec1	equ	0xFE5
  4152                           fsr1l	equ	0xFE1
  4153                           indf2	equ	0xFDF
  4154                           postinc2	equ	0xFDE
  4155                           postdec2	equ	0xFDD
  4156                           fsr2h	equ	0xFDA
  4157                           fsr2l	equ	0xFD9
  4158                           status	equ	0xFD8
  4159                           
  4160 ;; *************** function _RtccWrOn *****************
  4161 ;; Defined at:
  4162 ;;		line 21 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  data            2    0        unsigned int 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;		None               void
  4169 ;; Registers used:
  4170 ;;		wreg, status,2
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4180 ;;Total ram usage:        0 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_Write_RTC
  4186 ;;		_RtccWriteDate
  4187 ;;		_RtccWriteTime
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text24
  4192  001DDA                     __ptext24:
  4193                           	opt stack 0
  4194  001DDA                     _RtccWrOn:
  4195                           	opt stack 28
  4196                           
  4197                           ;incstack = 0
  4198  001DDA  9CF2               	bcf	intcon,6,c	;volatile
  4199  001DDC  0E55               	movlw	85
  4200  001DDE  6EA7               	movwf	4007,c	;volatile
  4201  001DE0  0EAA               	movlw	170
  4202  001DE2  6EA7               	movwf	4007,c	;volatile
  4203  001DE4  010F               	movlb	15	; () banked
  4204  001DE6  8B3F               	bsf	63,5,b	;volatile
  4205                           
  4206                           ; BSR set to: 15
  4207  001DE8  8CF2               	bsf	intcon,6,c	;volatile
  4208                           
  4209                           ; BSR set to: 15
  4210  001DEA  0012               	return		;funcret
  4211  001DEC                     __end_of_RtccWrOn:
  4212                           	opt stack 0
  4213                           tblptru	equ	0xFF8
  4214                           tblptrh	equ	0xFF7
  4215                           tblptrl	equ	0xFF6
  4216                           tablat	equ	0xFF5
  4217                           prodh	equ	0xFF4
  4218                           prodl	equ	0xFF3
  4219                           intcon	equ	0xFF2
  4220                           indf0	equ	0xFEF
  4221                           postinc0	equ	0xFEE
  4222                           fsr0h	equ	0xFEA
  4223                           fsr0l	equ	0xFE9
  4224                           wreg	equ	0xFE8
  4225                           postdec1	equ	0xFE5
  4226                           fsr1l	equ	0xFE1
  4227                           indf2	equ	0xFDF
  4228                           postinc2	equ	0xFDE
  4229                           postdec2	equ	0xFDD
  4230                           fsr2h	equ	0xFDA
  4231                           fsr2l	equ	0xFD9
  4232                           status	equ	0xFD8
  4233                           
  4234 ;; *************** function _Read_RTC *****************
  4235 ;; Defined at:
  4236 ;;		line 111 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;		None               void
  4243 ;; Registers used:
  4244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    1
  4257 ;; This function calls:
  4258 ;;		_RtccReadDate
  4259 ;;		_RtccReadTime
  4260 ;; This function is called by:
  4261 ;;		_main
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text25
  4266  001720                     __ptext25:
  4267                           	opt stack 0
  4268  001720                     _Read_RTC:
  4269                           	opt stack 29
  4270                           
  4271                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  4272                           
  4273                           ; BSR set to: 15
  4274                           ;incstack = 0
  4275  001720  0E3D               	movlw	low _RtccTime
  4276  001722  6E01               	movwf	RtccReadTime@pTm,c
  4277  001724  0E00               	movlw	high _RtccTime
  4278  001726  6E02               	movwf	RtccReadTime@pTm+1,c
  4279  001728  EC4A  F00D         	call	_RtccReadTime	;wreg free
  4280                           
  4281                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  4282  00172C  503E               	movf	_RtccTime+1,w,c
  4283  00172E  0B0F               	andlw	15
  4284  001730  6E4D               	movwf	_segundo_u,c
  4285                           
  4286                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  4287  001732  383E               	swapf	_RtccTime+1,w,c
  4288  001734  0B0F               	andlw	15
  4289  001736  0B0F               	andlw	15
  4290  001738  6E4C               	movwf	_segundo_d,c
  4291                           
  4292                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  4293  00173A  503F               	movf	_RtccTime+2,w,c
  4294  00173C  0B0F               	andlw	15
  4295  00173E  6E4B               	movwf	_minuto_u,c
  4296                           
  4297                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  4298  001740  383F               	swapf	_RtccTime+2,w,c
  4299  001742  0B0F               	andlw	15
  4300  001744  0B0F               	andlw	15
  4301  001746  6E4A               	movwf	_minuto_d,c
  4302                           
  4303                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  4304  001748  5040               	movf	_RtccTime+3,w,c
  4305  00174A  0B0F               	andlw	15
  4306  00174C  6E47               	movwf	_hora_u,c
  4307                           
  4308                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  4309  00174E  3840               	swapf	_RtccTime+3,w,c
  4310  001750  0B0F               	andlw	15
  4311  001752  0B0F               	andlw	15
  4312  001754  6E46               	movwf	_hora_d,c
  4313                           
  4314                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  4315  001756  0E39               	movlw	low _RtccDate
  4316  001758  6E01               	movwf	RtccReadDate@pDt,c
  4317  00175A  0E00               	movlw	high _RtccDate
  4318  00175C  6E02               	movwf	RtccReadDate@pDt+1,c
  4319  00175E  EC47  F00C         	call	_RtccReadDate	;wreg free
  4320                           
  4321                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  4322  001762  503A               	movf	_RtccDate+1,w,c
  4323  001764  0B0F               	andlw	15
  4324  001766  6E45               	movwf	_fecha_u,c
  4325                           
  4326                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  4327  001768  383A               	swapf	_RtccDate+1,w,c
  4328  00176A  0B0F               	andlw	15
  4329  00176C  0B0F               	andlw	15
  4330  00176E  6E44               	movwf	_fecha_d,c
  4331                           
  4332                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  4333  001770  503B               	movf	_RtccDate+2,w,c
  4334  001772  0B0F               	andlw	15
  4335  001774  6E49               	movwf	_mes_u,c
  4336                           
  4337                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  4338  001776  383B               	swapf	_RtccDate+2,w,c
  4339  001778  0B0F               	andlw	15
  4340  00177A  0B0F               	andlw	15
  4341  00177C  6E48               	movwf	_mes_d,c
  4342                           
  4343                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  4344  00177E  C039  F043         	movff	_RtccDate,_dia_semana
  4345                           
  4346                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  4347  001782  503C               	movf	_RtccDate+3,w,c
  4348  001784  0B0F               	andlw	15
  4349  001786  6E42               	movwf	_anio_u,c
  4350                           
  4351                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  4352  001788  383C               	swapf	_RtccDate+3,w,c
  4353  00178A  0B0F               	andlw	15
  4354  00178C  0B0F               	andlw	15
  4355  00178E  6E41               	movwf	_anio_d,c
  4356                           
  4357                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  4358  001790  504C               	movf	_segundo_d,w,c
  4359  001792  0D0A               	mullw	10
  4360  001794  504D               	movf	_segundo_u,w,c
  4361  001796  24F3               	addwf	prodl,w,c
  4362  001798  6E37               	movwf	_segundo,c
  4363  00179A  0E00               	movlw	0
  4364  00179C  20F4               	addwfc	prodh,w,c
  4365  00179E  6E38               	movwf	_segundo+1,c
  4366                           
  4367                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  4368  0017A0  504A               	movf	_minuto_d,w,c
  4369  0017A2  0D0A               	mullw	10
  4370  0017A4  504B               	movf	_minuto_u,w,c
  4371  0017A6  24F3               	addwf	prodl,w,c
  4372  0017A8  6E58               	movwf	_minuto,c
  4373  0017AA  0E00               	movlw	0
  4374  0017AC  20F4               	addwfc	prodh,w,c
  4375  0017AE  6E59               	movwf	_minuto+1,c
  4376                           
  4377                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  4378  0017B0  5046               	movf	_hora_d,w,c
  4379  0017B2  0D0A               	mullw	10
  4380  0017B4  5047               	movf	_hora_u,w,c
  4381  0017B6  24F3               	addwf	prodl,w,c
  4382  0017B8  6E54               	movwf	_hora,c
  4383  0017BA  0E00               	movlw	0
  4384  0017BC  20F4               	addwfc	prodh,w,c
  4385  0017BE  6E55               	movwf	_hora+1,c
  4386                           
  4387                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  4388  0017C0  5044               	movf	_fecha_d,w,c
  4389  0017C2  0D0A               	mullw	10
  4390  0017C4  5045               	movf	_fecha_u,w,c
  4391  0017C6  24F3               	addwf	prodl,w,c
  4392  0017C8  6E50               	movwf	_dia,c
  4393  0017CA  0E00               	movlw	0
  4394  0017CC  20F4               	addwfc	prodh,w,c
  4395  0017CE  6E51               	movwf	_dia+1,c
  4396                           
  4397                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  4398  0017D0  C043  F052         	movff	_dia_semana,_diasem
  4399  0017D4  6A53               	clrf	_diasem+1,c
  4400                           
  4401                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  4402  0017D6  5048               	movf	_mes_d,w,c
  4403  0017D8  0D0A               	mullw	10
  4404  0017DA  5049               	movf	_mes_u,w,c
  4405  0017DC  24F3               	addwf	prodl,w,c
  4406  0017DE  6E56               	movwf	_mes,c
  4407  0017E0  0E00               	movlw	0
  4408  0017E2  20F4               	addwfc	prodh,w,c
  4409  0017E4  6E57               	movwf	_mes+1,c
  4410                           
  4411                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  4412  0017E6  5041               	movf	_anio_d,w,c
  4413  0017E8  0D0A               	mullw	10
  4414  0017EA  5042               	movf	_anio_u,w,c
  4415  0017EC  24F3               	addwf	prodl,w,c
  4416  0017EE  6E4E               	movwf	_anio,c
  4417  0017F0  0E00               	movlw	0
  4418  0017F2  20F4               	addwfc	prodh,w,c
  4419  0017F4  6E4F               	movwf	_anio+1,c
  4420  0017F6  0012               	return		;funcret
  4421  0017F8                     __end_of_Read_RTC:
  4422                           	opt stack 0
  4423                           tblptru	equ	0xFF8
  4424                           tblptrh	equ	0xFF7
  4425                           tblptrl	equ	0xFF6
  4426                           tablat	equ	0xFF5
  4427                           prodh	equ	0xFF4
  4428                           prodl	equ	0xFF3
  4429                           intcon	equ	0xFF2
  4430                           indf0	equ	0xFEF
  4431                           postinc0	equ	0xFEE
  4432                           fsr0h	equ	0xFEA
  4433                           fsr0l	equ	0xFE9
  4434                           wreg	equ	0xFE8
  4435                           postdec1	equ	0xFE5
  4436                           fsr1l	equ	0xFE1
  4437                           indf2	equ	0xFDF
  4438                           postinc2	equ	0xFDE
  4439                           postdec2	equ	0xFDD
  4440                           fsr2h	equ	0xFDA
  4441                           fsr2l	equ	0xFD9
  4442                           status	equ	0xFD8
  4443                           
  4444 ;; *************** function _RtccReadTime *****************
  4445 ;; Defined at:
  4446 ;;		line 23 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  pTm             2    0[COMRAM] PTR struct .
  4449 ;;		 -> RtccTime(4), 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  rTD0            8   10[COMRAM] struct .
  4452 ;;  rTD1            8    2[COMRAM] struct .
  4453 ;; Return value:  Size  Location     Type
  4454 ;;		None               void
  4455 ;; Registers used:
  4456 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4463 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4465 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4466 ;;Total ram usage:       18 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_Read_RTC
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text26
  4476  001A94                     __ptext26:
  4477                           	opt stack 0
  4478  001A94                     _RtccReadTime:
  4479                           	opt stack 29
  4480  001A94  0EFC               	movlw	252
  4481  001A96  010F               	movlb	15	; () banked
  4482  001A98  173F               	andwf	63,f,b	;volatile
  4483                           
  4484                           ; BSR set to: 15
  4485  001A9A  010F               	movlb	15	; () banked
  4486  001A9C  813F               	bsf	63,0,b	;volatile
  4487                           
  4488                           ; BSR set to: 15
  4489  001A9E  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  4490                           
  4491                           ; BSR set to: 15
  4492  001AA2  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  4493                           
  4494                           ; BSR set to: 15
  4495  001AA6  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  4496                           
  4497                           ; BSR set to: 15
  4498  001AAA  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  4499                           
  4500                           ; BSR set to: 15
  4501  001AAE  0EFC               	movlw	252
  4502  001AB0  010F               	movlb	15	; () banked
  4503  001AB2  173F               	andwf	63,f,b	;volatile
  4504  001AB4  010F               	movlb	15	; () banked
  4505  001AB6  813F               	bsf	63,0,b	;volatile
  4506                           
  4507                           ; BSR set to: 15
  4508  001AB8  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  4509                           
  4510                           ; BSR set to: 15
  4511  001ABC  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  4512                           
  4513                           ; BSR set to: 15
  4514  001AC0  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  4515                           
  4516                           ; BSR set to: 15
  4517  001AC4  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  4518                           
  4519                           ; BSR set to: 15
  4520  001AC8  5009               	movf	RtccReadTime@rTD1+6,w,c
  4521  001ACA  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  4522  001ACC  A4D8               	btfss	status,2,c
  4523  001ACE  D7E2               	goto	l2068
  4524                           
  4525                           ; BSR set to: 15
  4526                           
  4527                           ; BSR set to: 15
  4528  001AD0  EE20 F003          	lfsr	2,3
  4529  001AD4  5001               	movf	RtccReadTime@pTm,w,c
  4530  001AD6  26D9               	addwf	fsr2l,f,c
  4531  001AD8  5002               	movf	RtccReadTime@pTm+1,w,c
  4532  001ADA  22DA               	addwfc	fsr2h,f,c
  4533  001ADC  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  4534  001AE0  EE20 F002          	lfsr	2,2
  4535  001AE4  5001               	movf	RtccReadTime@pTm,w,c
  4536  001AE6  26D9               	addwf	fsr2l,f,c
  4537  001AE8  5002               	movf	RtccReadTime@pTm+1,w,c
  4538  001AEA  22DA               	addwfc	fsr2h,f,c
  4539  001AEC  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  4540  001AF0  EE20 F001          	lfsr	2,1
  4541  001AF4  5001               	movf	RtccReadTime@pTm,w,c
  4542  001AF6  26D9               	addwf	fsr2l,f,c
  4543  001AF8  5002               	movf	RtccReadTime@pTm+1,w,c
  4544  001AFA  22DA               	addwfc	fsr2h,f,c
  4545  001AFC  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  4546                           
  4547                           ; BSR set to: 15
  4548  001B00  0012               	return		;funcret
  4549  001B02                     __end_of_RtccReadTime:
  4550                           	opt stack 0
  4551                           tblptru	equ	0xFF8
  4552                           tblptrh	equ	0xFF7
  4553                           tblptrl	equ	0xFF6
  4554                           tablat	equ	0xFF5
  4555                           prodh	equ	0xFF4
  4556                           prodl	equ	0xFF3
  4557                           intcon	equ	0xFF2
  4558                           indf0	equ	0xFEF
  4559                           postinc0	equ	0xFEE
  4560                           fsr0h	equ	0xFEA
  4561                           fsr0l	equ	0xFE9
  4562                           wreg	equ	0xFE8
  4563                           postdec1	equ	0xFE5
  4564                           fsr1l	equ	0xFE1
  4565                           indf2	equ	0xFDF
  4566                           postinc2	equ	0xFDE
  4567                           postdec2	equ	0xFDD
  4568                           fsr2h	equ	0xFDA
  4569                           fsr2l	equ	0xFD9
  4570                           status	equ	0xFD8
  4571                           
  4572 ;; *************** function _RtccReadDate *****************
  4573 ;; Defined at:
  4574 ;;		line 23 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  pDt             2    0[COMRAM] PTR struct .
  4577 ;;		 -> RtccDate(4), 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  rTD0            8   10[COMRAM] struct .
  4580 ;;  rTD1            8    2[COMRAM] struct .
  4581 ;; Return value:  Size  Location     Type
  4582 ;;		None               void
  4583 ;; Registers used:
  4584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4591 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4593 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4594 ;;Total ram usage:       18 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_Read_RTC
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text27
  4604  00188E                     __ptext27:
  4605                           	opt stack 0
  4606  00188E                     _RtccReadDate:
  4607                           	opt stack 29
  4608  00188E  0EFC               	movlw	252
  4609  001890  010F               	movlb	15	; () banked
  4610  001892  173F               	andwf	63,f,b	;volatile
  4611  001894  0E03               	movlw	3
  4612  001896  010F               	movlb	15	; () banked
  4613  001898  133F               	iorwf	63,f,b	;volatile
  4614                           
  4615                           ; BSR set to: 15
  4616  00189A  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  4617                           
  4618                           ; BSR set to: 15
  4619  00189E  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  4620                           
  4621                           ; BSR set to: 15
  4622  0018A2  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  4623                           
  4624                           ; BSR set to: 15
  4625  0018A6  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  4626                           
  4627                           ; BSR set to: 15
  4628  0018AA  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  4629                           
  4630                           ; BSR set to: 15
  4631  0018AE  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  4632  0018B2  0EFC               	movlw	252
  4633  0018B4  010F               	movlb	15	; () banked
  4634  0018B6  173F               	andwf	63,f,b	;volatile
  4635  0018B8  0E03               	movlw	3
  4636  0018BA  010F               	movlb	15	; () banked
  4637  0018BC  133F               	iorwf	63,f,b	;volatile
  4638                           
  4639                           ; BSR set to: 15
  4640  0018BE  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  4641                           
  4642                           ; BSR set to: 15
  4643  0018C2  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  4644                           
  4645                           ; BSR set to: 15
  4646  0018C6  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  4647                           
  4648                           ; BSR set to: 15
  4649  0018CA  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  4650                           
  4651                           ; BSR set to: 15
  4652  0018CE  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  4653                           
  4654                           ; BSR set to: 15
  4655  0018D2  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  4656  0018D6  5005               	movf	RtccReadDate@rTD1+2,w,c
  4657  0018D8  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  4658  0018DA  A4D8               	btfss	status,2,c
  4659  0018DC  D7D8               	goto	l2094
  4660                           
  4661                           ; BSR set to: 15
  4662                           
  4663                           ; BSR set to: 15
  4664  0018DE  EE20 F001          	lfsr	2,1
  4665  0018E2  5001               	movf	RtccReadDate@pDt,w,c
  4666  0018E4  26D9               	addwf	fsr2l,f,c
  4667  0018E6  5002               	movf	RtccReadDate@pDt+1,w,c
  4668  0018E8  22DA               	addwfc	fsr2h,f,c
  4669  0018EA  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  4670  0018EE  EE20 F002          	lfsr	2,2
  4671  0018F2  5001               	movf	RtccReadDate@pDt,w,c
  4672  0018F4  26D9               	addwf	fsr2l,f,c
  4673  0018F6  5002               	movf	RtccReadDate@pDt+1,w,c
  4674  0018F8  22DA               	addwfc	fsr2h,f,c
  4675  0018FA  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  4676                           
  4677                           ; BSR set to: 15
  4678  0018FE  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  4679  001902  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  4680  001906  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  4681                           
  4682                           ; BSR set to: 15
  4683  00190A  EE20 F003          	lfsr	2,3
  4684  00190E  5001               	movf	RtccReadDate@pDt,w,c
  4685  001910  26D9               	addwf	fsr2l,f,c
  4686  001912  5002               	movf	RtccReadDate@pDt+1,w,c
  4687  001914  22DA               	addwfc	fsr2h,f,c
  4688  001916  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  4689                           
  4690                           ; BSR set to: 15
  4691  00191A  0012               	return		;funcret
  4692  00191C                     __end_of_RtccReadDate:
  4693                           	opt stack 0
  4694                           tblptru	equ	0xFF8
  4695                           tblptrh	equ	0xFF7
  4696                           tblptrl	equ	0xFF6
  4697                           tablat	equ	0xFF5
  4698                           prodh	equ	0xFF4
  4699                           prodl	equ	0xFF3
  4700                           intcon	equ	0xFF2
  4701                           indf0	equ	0xFEF
  4702                           postinc0	equ	0xFEE
  4703                           fsr0h	equ	0xFEA
  4704                           fsr0l	equ	0xFE9
  4705                           wreg	equ	0xFE8
  4706                           postdec1	equ	0xFE5
  4707                           fsr1l	equ	0xFE1
  4708                           indf2	equ	0xFDF
  4709                           postinc2	equ	0xFDE
  4710                           postdec2	equ	0xFDD
  4711                           fsr2h	equ	0xFDA
  4712                           fsr2l	equ	0xFD9
  4713                           status	equ	0xFD8
  4714                           tblptru	equ	0xFF8
  4715                           tblptrh	equ	0xFF7
  4716                           tblptrl	equ	0xFF6
  4717                           tablat	equ	0xFF5
  4718                           prodh	equ	0xFF4
  4719                           prodl	equ	0xFF3
  4720                           intcon	equ	0xFF2
  4721                           indf0	equ	0xFEF
  4722                           postinc0	equ	0xFEE
  4723                           fsr0h	equ	0xFEA
  4724                           fsr0l	equ	0xFE9
  4725                           wreg	equ	0xFE8
  4726                           postdec1	equ	0xFE5
  4727                           fsr1l	equ	0xFE1
  4728                           indf2	equ	0xFDF
  4729                           postinc2	equ	0xFDE
  4730                           postdec2	equ	0xFDD
  4731                           fsr2h	equ	0xFDA
  4732                           fsr2l	equ	0xFD9
  4733                           status	equ	0xFD8
  4734                           
  4735                           	psect	rparam
  4736  0000                     tblptru	equ	0xFF8
  4737                           tblptrh	equ	0xFF7
  4738                           tblptrl	equ	0xFF6
  4739                           tablat	equ	0xFF5
  4740                           prodh	equ	0xFF4
  4741                           prodl	equ	0xFF3
  4742                           intcon	equ	0xFF2
  4743                           indf0	equ	0xFEF
  4744                           postinc0	equ	0xFEE
  4745                           fsr0h	equ	0xFEA
  4746                           fsr0l	equ	0xFE9
  4747                           wreg	equ	0xFE8
  4748                           postdec1	equ	0xFE5
  4749                           fsr1l	equ	0xFE1
  4750                           indf2	equ	0xFDF
  4751                           postinc2	equ	0xFDE
  4752                           postdec2	equ	0xFDD
  4753                           fsr2h	equ	0xFDA
  4754                           fsr2l	equ	0xFD9
  4755                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    14
    Data        12
    BSS         70
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      90
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[7]), STR_4(CODE[7]), buffer2(BANK0[20]), STR_1(CODE[7]), 

    jumpIfNotNumber@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@x(COMRAM[1]), 

    evalueChanceOfRaw@y	PTR unsigned char  size(2) Largest target is 1
		 -> main@y(COMRAM[1]), 

    evalueChanceOfRaw@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@x(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _jumpIfNotNumber->_lcd_setcursor_vb
    _lcd_setcursor_vb->_lcd_send_byte
    _caratula->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16611
                                             35 COMRAM     3     3      0
                           _Read_RTC
                              _Setup
                          _Write_RTC
                           _caratula
                  _evalueChanceOfRaw
                    _jumpIfNotNumber
                         _lcd_gotoxy
                   _lcd_setcursor_vb
 ---------------------------------------------------------------------------------
 (1) _jumpIfNotNumber                                      4     1      3    1144
                                              6 COMRAM     4     1      3
                   _lcd_setcursor_vb
 ---------------------------------------------------------------------------------
 (1) _lcd_setcursor_vb                                     2     1      1     796
                                              4 COMRAM     2     1      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _evalueChanceOfRaw                                    5     1      4     194
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0    6005
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    22     10    1916
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    2238
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    1873
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           3     2      1    1205
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3764
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     841
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _Write_RTC
     _RtccWrOn
     _RtccWriteDate
       _RtccWrOn
     _RtccWriteTime
       _RtccWrOn
     ___awdiv
   _caratula
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _evalueChanceOfRaw
   _jumpIfNotNumber
     _lcd_setcursor_vb
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_setcursor_vb
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     26      5A       1       94.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86       6        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Aug 18 19:25:48 2016

                         _a 002B                           _b 002D                           _c 002F  
                         _i 0031                           _j 0033                           _k 0035  
            ?_lcd_send_byte 0003                ___awdiv@sign 0006         ___wmul@multiplicand 0003  
               lcd_comand@d 0005                __CFG_CP0$OFF 000000                         l170 1706  
                       l167 16C6                         l273 110E                         l169 16C8  
                       l194 1CF2                         l195 1CF4                         l917 1B54  
                       l927 1BF4                         u910 1A2A                         u930 1A42  
                       u950 1A5C                         u928 1A2C                         u970 1A78  
                       u948 1A44                         u968 1A5E                         u988 1A7A  
                       _dia 0050                         _mes 0056                         wreg 000FE8  
           RtccReadDate@pDt 0001                 lcd_gotoxy@x 0006                 lcd_gotoxy@y 0005  
                      l2010 1BD2                        l1046 1DB8                        l2014 1BE8  
                      l2006 1BC0                        l2008 1BCA                        l2130 1B60  
                      l2212 1114                        l2204 10E4                        l2220 1174  
                      l2134 1B8A                        l2206 10EC                        l2222 1190  
                      l2150 0F78                        l2232 19C4                        l2152 0F8E  
                      l2144 0F60                        l2320 15EE                        l2250 19F0  
                      l2242 19DC                        l2218 1168                        l2170 1038  
                      l2146 0F6E                        l2138 0F46                        l2330 162A  
                      l2068 1A94                        l2236 19CC                        l2180 1060  
                      l2164 1010                        l2156 0FAC                        l2324 1606  
                      l2420 16F2                        l2094 188E                        l2192 10AC  
                      l2184 1084                        l2176 1054                        l2168 1016  
                      l2424 170A                        l2194 10B6                        l1900 1422  
                      l1820 1516                        l2188 1088                        l2372 1960  
                      l2364 1932                        l1910 1C1A                        l2198 10C2  
                      l1824 1522                        l1736 1DCA                        l1912 1C26  
                      l2368 1948                        l2376 1978                        l1850 1384  
                      l1762 1D68                        l1906 1C02                        l2386 1652  
                      l1860 13B4                        l1844 134A                        l1828 152E  
                      l1764 1D6E                        l1908 1C0E                        l1916 1C32  
                      l1854 1398                        l1782 1496                        l1950 1820  
                      l1926 1D98                        l1792 14C6                        l1776 146C  
                      l1960 1848                        l1944 180E                        l1786 14AA  
                      l1892 140A                        l1956 1836                        l1972 1872  
                      l1958 1840                        l1990 1B2A                        l1896 1416  
                      l1976 1882                        l1968 1866                        l1986 1B18  
                      l1988 1B22                        l1998 1B48                        STR_1 0F34  
                      STR_2 0F0F                        STR_3 0F1E                        STR_4 0F34  
                      STR_5 0F2D                        u1410 1B80                        u1420 1BAA  
                      u1417 1B76                        u1427 1BA0                        u1630 1616  
                      u1817 1684                        u1827 16FC                        u1837 1710  
                      u1790 16E8                        u1847 1DBA                        u1857 1DCC  
          ?_lcd_send_nibble 0001                        _anio 004E                        _flag 02D0  
                      _main 1644                        _hora 0054                        fsr0h 000FEA  
                      indf0 000FEF                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
             __CFG_T1DIG$ON 000000                        prodh 000FF4                        prodl 000FF3  
                      start 0000               __CFG_IESO$OFF 000000            RtccReadDate@rTD0 000B  
          RtccReadDate@rTD1 0003                ___param_bank 000010             RtccReadTime@pTm 0001  
           _jumpIfNotNumber 191C                 _Delay1KTCYx 1DB6               __CFG_PLLDIV$1 000000  
                     ?_main 0001             __end_of___awdiv 188E       __size_of_Delay100TCYx 0012  
           ___awdiv@divisor 0003             __end_of___lwdiv 1B5E             __end_of___lwmod 1BFE  
           ___awdiv@counter 0005                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94              __CFG_FCMEN$OFF 000000                       _Setup 1C4A  
           __end_of_dpowers 0F0B                       _mes_d 0048                       _mes_u 0049  
           __end_of_isdigit 1DA2                       main@x 0026                       main@y 0025  
            __pbitbssCOMRAM 02D0                       tablat 000FF5                lcd_putrs@ptr 0009  
                     status 000FD8             __end_of_sprintf 11A0     __CFG_DSWDTOSC$INTOSCREF 000000  
           __initialization 1C92                _Delay100TCYx 1DC8                __end_of_main 1720  
           ??_lcd_send_byte 0004            RtccReadTime@rTD0 000B            RtccReadTime@rTD1 0003  
          __end_of_Read_RTC 17F8                      ??_main 0024               __activetblptr 000002  
          __end_of_RtccWrOn 1DEC                      ?_Setup 0001                      _ADCON0 000FC2  
                    _ADCON1 000FC1                      _EECON2 000FA7                      _ANCON0 000F48  
          ___awdiv@dividend 0001              __CFG_WDTEN$OFF 000000            RtccWriteDate@pDt 0001  
                    _RTCCFG 000F3F              __CFG_WPCFG$OFF 000000     __end_of_jumpIfNotNumber 199E  
          __end_of_caratula 1644              __CFG_WPDIS$OFF 000000              __CFG_XINST$OFF 000000  
          __end_of_lcd_init 1A1E            __end_of_lcd_putc 1C4A           ?_lcd_setcursor_vb 0005  
                    ___wmul 1D34                   ??___awdiv 0005              __CFG_STVREN$ON 000000  
                    _diasem 0052                      _anio_d 0041                      _anio_u 0042  
                 ??___lwdiv 0005                   ??___lwmod 000C          ??_lcd_setcursor_vb 0006  
                    _hora_d 0046                      _hora_u 0047                      clear_0 1C98  
                    clear_1 1CA6            ___awdiv@quotient 0007                      _minuto 0058  
     __end_of_RtccWriteDate 142E       __end_of_RtccWriteTime 153A            RtccWriteTime@pTm 0001  
              __pdataCOMRAM 004E                   ??_isdigit 0001                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                 ??_sprintf 0017                  __accesstop 0060     __end_of__initialization 1CCC  
        __size_of_Write_RTC 0148               ___rparam_used 000001              __pcstackCOMRAM 0001  
             __end_of_Setup 1C92           _evalueChanceOfRaw 1D08             __CFG_DSWDTPS$G2 000000  
        ?_evalueChanceOfRaw 0001             __CFG_OSC$INTOSC 000000                     ??_Setup 000E  
       ??_evalueChanceOfRaw 0005           lcd_gotoxy@address 0007          __size_of_lcd_putrs 0054  
              sprintf@width 0021                  __pbssBANK0 0060                   ?_Read_RTC 0001  
                _dia_semana 0043   RtccWriteTime@tempHourWDay 000A                  __pnvCOMRAM 0041  
          ?_jumpIfNotNumber 0007                   ?_RtccWrOn 0001              lcd_send_byte@n 0003  
 __end_of_evalueChanceOfRaw 1D34                     ?___wmul 0001               ?_RtccReadDate 0001  
             ?_RtccReadTime 0001                ?_Delay1KTCYx 0001           __end_of_Write_RTC 12E8  
                _lcd_comand 1DEC                   ?_caratula 0001                  _lcd_gotoxy 1D5C  
                   _RTCVALH 000F99                     _RTCVALL 000F98                   ?_lcd_init 0001  
                 ?_lcd_putc 0001                  ??_Read_RTC 0013                     __Hparam 0000  
                   __Lparam 0000    __size_of_lcd_send_nibble 0076                  ??_RtccWrOn 0001  
            ??_RtccReadDate 0003              ??_RtccReadTime 0003                     ___awdiv 17F8  
         __end_of_lcd_putrs 1BB2             __size_of___wmul 0028                     ___lwdiv 1B02  
                   ___lwmod 1BB2                __psmallconst 0F00                 _RtccTimeVal 0027  
                   __pcinit 1C92                     _fecha_d 0044                     _fecha_u 0045  
                   __ramtop 0F00                     __ptext0 1644                     __ptext1 191C  
                   __ptext2 1DA2                     __ptext3 1D08                     __ptext4 153A  
                   __ptext5 0F3C                     __ptext6 1D80                     __ptext7 1D34  
                   __ptext8 1BB2                     __ptext9 1B02                     _buffer2 0078  
                 _T1CONbits 000FCD                     _dpowers 0F01                     _isdigit 1D80  
                ??_caratula 0024                     _segundo 0037                     _sprintf 0F3C  
                ??_lcd_init 0005                  ??_lcd_putc 0008        end_of_initialization 1CCC  
          jumpIfNotNumber@x 0007            jumpIfNotNumber@y 0009        lcd_send_byte@address 0004  
             __Lmediumconst 0000  __size_of_evalueChanceOfRaw 002C                     postdec1 000FE5  
                   postdec2 000FDD                     postinc0 000FEE                     postinc2 000FDE  
     __end_of_lcd_send_byte 1D08                   _PORTAbits 000F80            __CFG_DSBOREN$OFF 000000  
               ?_lcd_comand 0001            __CFG_CPUDIV$OSC1 000000                   _TRISBbits 000F93  
               ?_lcd_gotoxy 0005   __size_of_lcd_setcursor_vb 0014             _LCD_INIT_STRING 0F0B  
          __CFG_IOL1WAY$OFF 000000   RtccWriteDate@tempDayMonth 000A         __CFG_MSSP7B_EN$MSK7 000000  
          Delay100TCYx@unit 0001              __end_of___wmul 1D5C               __pidataCOMRAM 1DFA  
 RtccWriteDate@tempHourWDay 000C           ??_lcd_send_nibble 0001        __size_of_Delay1KTCYx 0012  
          __CFG_DSWDTEN$OFF 000000         start_initialization 1C92        __end_of_RtccReadDate 191C  
      __end_of_RtccReadTime 1B02        RtccWriteTime@wasAlrm 0006        RtccWriteTime@wasWrEn 0007  
    __size_of_RtccWriteDate 0146             RtccWriteDate@di 0003      __size_of_RtccWriteTime 010C  
         __size_of_Read_RTC 00D8         __size_of_lcd_comand 000E         __size_of_lcd_gotoxy 0024  
                  ??___wmul 0005           __size_of_RtccWrOn 0012             RtccWriteTime@di 0003  
          __CFG_LPT1OSC$OFF 000000                 _ALRMCFGbits 000F91     __end_of_LCD_INIT_STRING 0F0F  
               __pbssCOMRAM 0027                   _Write_RTC 11A0                _isdigit$1833 0002  
         __size_of_caratula 010A             Delay1KTCYx@unit 0001           __size_of_lcd_init 0080  
               sprintf@flag 001D           __size_of_lcd_putc 004C                 sprintf@prec 0020  
          ___lwdiv@dividend 0001               ?_Delay100TCYx 0001                    ?___awdiv 0001  
                  ?___lwdiv 0001                    ?___lwmod 0008    __size_of_jumpIfNotNumber 0082  
   RtccWriteTime@tempMinSec 0008                   _lcd_putrs 1B5E     lcd_setcursor_vb@visible 0006  
             _RtccWriteDate 12E8                 __smallconst 0F00               _RtccWriteTime 142E  
                  ?_isdigit 0001        __CFG_RTCOSC$T1OSCREF 000000            _lcd_setcursor_vb 1DA2  
            __size_of_Setup 0048                  ?_Write_RTC 0001            ___lwdiv@quotient 0005  
                  ?_sprintf 000D            _RtccAlrmTimeDate 0060              ___wmul@product 0005  
                  _LATBbits 000F8A                    _PIE3bits 000FA3                   _segundo_d 004C  
            ??_Delay100TCYx 0001                   _segundo_u 004D            __CFG_WDTPS$32768 000000  
        RtccWriteDate@wasOn 0005          _Rtcc_read_TimeDate 0070              ?_RtccWriteDate 0001  
                ?_lcd_putrs 0009           ___wmul@multiplier 0001              ?_RtccWriteTime 0001  
        evalueChanceOfRaw@x 0001          evalueChanceOfRaw@y 0003                   lcd_init@i 0005  
     __size_of_RtccReadDate 008E                ??_lcd_comand 0005                   lcd_putc@c 0008  
     __size_of_RtccReadTime 006E                ??_lcd_gotoxy 0006                   copy_data0 1CC0  
                  _Read_RTC 1720             _lcd_send_nibble 1A1E                    __Hrparam 0000  
                  _RtccDate 0039                    __Lrparam 0000                    _RtccTime 003D  
                  _RtccWrOn 1DDA          __end_of_lcd_comand 1DFA          __end_of_lcd_gotoxy 1D80  
              _RtccReadDate 188E            __size_of___awdiv 0096                _RtccReadTime 1A94  
          __size_of___lwdiv 005C            __size_of___lwmod 004C                _RtccTimeDate 0068  
                sprintf@val 001E           ??_jumpIfNotNumber 000A                    _caratula 153A  
          __size_of_isdigit 0022             ___lwdiv@divisor 0003                 ??_Write_RTC 000E  
           ___lwdiv@counter 0007                    __ptext10 1B5E                    __ptext11 1BFE  
                  __ptext20 11A0                    __ptext12 1D5C                    __ptext21 17F8  
                  __ptext13 1C4A                    __ptext22 142E                    __ptext14 199E  
                  __ptext23 12E8                    __ptext15 1DB6                    __ptext24 1DDA  
                  __ptext16 1DEC                    __ptext25 1720                    __ptext17 1CD6  
                  __ptext26 1A94                    __ptext18 1A1E                    __ptext27 188E  
                  __ptext19 1DC8                    _lcd_init 199E                    _lcd_putc 1BFE  
          __size_of_sprintf 0264      __size_of_lcd_send_byte 0032               __size_of_main 00DC  
                  _minuto_d 004A                    _minuto_u 004B               ??_Delay1KTCYx 0001  
           ??_RtccWriteDate 0004             ??_RtccWriteTime 0004                 ??_lcd_putrs 000B  
               _OSCTUNEbits 000F9B                  _INTCONbits 000FF2          RtccWriteTime@wasOn 0005  
      __end_of_Delay100TCYx 1DDA                    isdigit@c 0003                   sprintf@ap 001B  
   __end_of_lcd_send_nibble 1A94                   sprintf@sp 000D       lcd_setcursor_vb@blink 0005  
          ___lwmod@dividend 0008                  _OSCCONbits 000FD3    __end_of_lcd_setcursor_vb 1DB6  
     RtccWriteDate@tempYear 0007               _lcd_send_byte 1CD6                  _RTCCFGbits 000F3F  
                  sprintf@c 0023                    sprintf@f 000F             ___lwmod@divisor 000A  
       __end_of_Delay1KTCYx 1DC8             ___lwmod@counter 000C        RtccWriteDate@wasAlrm 0006  
      RtccWriteDate@wasWrEn 0009       lcd_send_nibble@nibble 0002  
